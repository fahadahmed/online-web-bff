/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type { ContextType } from './../types';

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  A2PAddContentProviderRequest: {
    // input type
    contentProviderName: string; // String!
    customerCareUrl?: string | null; // String
    customerNumber: string; // String!
    helpdeskEmail?: string | null; // String
    phoneNumber?: string | null; // String
  };
  A2PAddServiceRequestRequest: {
    // input type
    address: NexusGenInputs['A2PServiceRequestAddress']; // A2PServiceRequestAddress!
    carriers: NexusGenEnums['A2PServiceRequestCarrier'][]; // [A2PServiceRequestCarrier!]!
    companyName: string; // String!
    contentProviderId: number; // Int!
    customerNumber: string; // String!
    expectedMessageVolume: NexusGenEnums['A2PServiceRequestMessageVolume']; // A2PServiceRequestMessageVolume!
    expectedMessageVolumeDescription: string; // String!
    firstName: string; // String!
    jobTitle: string; // String!
    lastName: string; // String!
    messageType: NexusGenEnums['A2PServiceRequestMessageType']; // A2PServiceRequestMessageType!
    messageUsage: NexusGenEnums['A2PServiceRequestMessageUsage']; // A2PServiceRequestMessageUsage!
    mobileOriginatingMessageExample: string; // String!
    mobileTerminatingMessageExample: string; // String!
    predictedPeakTimeDescription: string; // String!
    preferredNumber?: string | null; // String
    serviceComplianceDescription: string; // String!
    serviceDescription: string; // String!
    serviceEndDateTime: string; // String!
    serviceMarketingChannels: string[]; // [String!]!
    serviceName: string; // String!
    signature: string; // String!
    technicalContact: NexusGenInputs['A2PServiceRequestTechnicalContact']; // A2PServiceRequestTechnicalContact!
  };
  A2PDeleteContentProviderRequest: {
    // input type
    contentProviderId: number; // Int!
    customerNumber: string; // String!
  };
  A2PModifyContentProviderRequest: {
    // input type
    contentProviderId: number; // Int!
    contentProviderName: string; // String!
    customerCareUrl?: string | null; // String
    customerNumber: string; // String!
    helpdeskEmail?: string | null; // String
    phoneNumber?: string | null; // String
  };
  A2PModifyShortcodeRequest: {
    // input type
    customerNumber: string; // String!
    shortcodeNumber: string; // String!
    status: NexusGenEnums['A2PModifyShortcodeStatus']; // A2PModifyShortcodeStatus!
  };
  A2PServiceRequestAddress: {
    // input type
    elid: string; // String!
    label: string; // String!
  };
  A2PServiceRequestTechnicalContact: {
    // input type
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    phoneNumber: string; // String!
  };
  AddAccountAccessInput: {
    // input type
    accountNumber: string; // String!
    businessName?: string | null; // String
    firstName?: string | null; // String
    lastName?: string | null; // String
    lineNumber?: string | null; // String
    password?: string | null; // String
  };
  AddAccountToCartInput: {
    // input type
    accountNumber: string; // String!
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
  };
  AddAirpointsInput: {
    // input type
    accountNumber: string; // String!
    airpointsNumber: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    status: string; // String!
  };
  AddBundlesInput: {
    // input type
    bundles: NexusGenInputs['AddBundlesInputBundle'][]; // [AddBundlesInputBundle!]!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    processContext?: NexusGenEnums['ProcessContext'] | null; // ProcessContext
  };
  AddBundlesInputBundle: {
    // input type
    accountNumber?: string | null; // String
    categoryId?: string | null; // String
    items: NexusGenInputs['AddBundlesInputItem'][]; // [AddBundlesInputItem!]!
    lineNumber?: string | null; // String
  };
  AddBundlesInputItem: {
    // input type
    action?: NexusGenEnums['AddBundleAction'] | null; // AddBundleAction
    offerId: string; // String!
    productCharacteristics?:
      | NexusGenInputs['ProductCharacteristicsInput']
      | null; // ProductCharacteristicsInput
    productInstanceId?: string | null; // String
    quantity?: number | null; // Int
  };
  AddConnectionPromiseLineInput: {
    // input type
    lineNumber: string; // String!
    primaryLine: boolean; // Boolean!
  };
  AddItem: {
    // input type
    action: NexusGenEnums['AddBundleAction']; // AddBundleAction!
    itemId: string; // String!
    quantity?: number | null; // Int
  };
  AddItemsToBundleInput: {
    // input type
    bundleId: string; // String!
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    items: NexusGenInputs['AddItem'][]; // [AddItem!]!
  };
  AddLineAccessInput: {
    // input type
    authorisationCode?: string | null; // String
    balanceManagement: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    lineNumber: string; // String!
  };
  Association: {
    // input type
    accessType: NexusGenEnums['PaymentMethodAccessType']; // PaymentMethodAccessType!
    accountNumber?: string | null; // String
    lineNumber?: string | null; // String
    paymentMethodId: string; // String!
    type: NexusGenEnums['PaymentMethodAssociationType']; // PaymentMethodAssociationType!
  };
  AutoTopupInput: {
    // input type
    amount: number; // Float!
    autoTopupSettings: NexusGenInputs['AutoTopupSettings']; // AutoTopupSettings!
    lineNumber: string; // String!
    paymentMethodId?: string | null; // String
    secureTransactionToken?: string | null; // String
    source: NexusGenEnums['TopupSource']; // TopupSource!
  };
  AutoTopupSettings: {
    // input type
    firstTopupDate?: string | null; // String
    monthlyTopupLimit?: number | null; // Float
    thresholdAmount?: number | null; // Float
    type: NexusGenEnums['AutoTopupType']; // AutoTopupType!
  };
  BankAccountDetailInput: {
    // input type
    associations?: NexusGenInputs['Association'][] | null; // [Association!]
    bankAccountDetail: NexusGenInputs['BankAccountInformation']; // BankAccountInformation!
    isPreferred: boolean; // Boolean!
    personalisedName?: string | null; // String
  };
  BankAccountInformation: {
    // input type
    accountName: string; // String!
    accountNumber: string; // String!
    bankName: string; // String!
  };
  CardDetailInformation: {
    // input type
    cardName?: string | null; // String
    cardType: string; // String!
    expiryMonth: number; // Int!
    expiryYear: number; // Int!
    maskedCardNumber: string; // String!
    oneTimeToken?: string | null; // String
    secureTransactionToken?: string | null; // String
    token?: string | null; // String
  };
  CardDetailInput: {
    // input type
    associations?: NexusGenInputs['Association'][] | null; // [Association!]
    cardDetail: NexusGenInputs['CardDetailInformation']; // CardDetailInformation!
    isPreferred: boolean; // Boolean!
    personalisedName?: string | null; // String
  };
  CardToSaveInput: {
    // input type
    amount: number; // Float!
    cardholderName?: string | null; // String
    token: string; // String!
  };
  CheckoutDataInput: {
    // input type
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
  };
  CompatibleProductsInput: {
    // input type
    categoryId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    offerIds: string[]; // [String!]!
  };
  CreditCardBillPaymentRequestInput: {
    // input type
    accountNumber: string; // String!
    amount?: number | null; // Float
    amountType: NexusGenEnums['AmountType']; // AmountType!
    paymentMethodId: string; // String!
    setupAutoPay: boolean; // Boolean!
    source: NexusGenEnums['TopupSource']; // TopupSource!
  };
  CreditCardTopupInput: {
    // input type
    amount: number; // Float!
    paymentMethodId?: string | null; // String
    secureTransactionToken?: string | null; // String
    source?: NexusGenEnums['TopupSource'] | null; // TopupSource
  };
  DataCap: {
    // input type
    unit?: NexusGenEnums['SmartCapUnit'] | null; // SmartCapUnit
    value: number; // Float!
  };
  DeleteAirpointsInput: {
    // input type
    accountNumber: string; // String!
    status: string; // String!
  };
  DeleteAutoPayBillInput: {
    // input type
    accountNumber: string; // String!
    paymentMethodId: string; // String!
  };
  DeleteAutoTopupInput: {
    // input type
    lineNumber: string; // String!
  };
  DeleteCartBundleInput: {
    // input type
    bundleId: string; // String!
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
  };
  DeleteConnectionPromiseLineInput: {
    // input type
    connectionPromiseId: string; // String!
    lineNumber: string; // String!
  };
  DeleteItemFromBundleInput: {
    // input type
    bundleId: string; // String!
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    itemId: string; // String!
  };
  DeleteUserPreferenceChannelInput: {
    // input type
    channelType: string; // String!
    channelValue: string; // String!
  };
  DisplaySurchargeInput: {
    // input type
    operationTypes: NexusGenEnums['DisplaySurchargeOperationType'][]; // [DisplaySurchargeOperationType!]!
  };
  ExistingCardInput: {
    // input type
    paymentMethodId: string; // String!
    paymentMethodSource: NexusGenEnums['WalletPaymentMethodSource']; // WalletPaymentMethodSource!
  };
  ExtrasInput: {
    // input type
    lineNumber: string; // String!
  };
  InitiateCheckoutInput: {
    // input type
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
  };
  NewCardBillPaymentWithRegistrationInput: {
    // input type
    accountNumber: string; // String!
    amount: number; // Float!
    amountType: NexusGenEnums['AmountType']; // AmountType!
    secureTransactionToken: string; // String!
    setupAutoPay: boolean; // Boolean!
  };
  NewCardInput: {
    // input type
    cardholderName?: string | null; // String
    shouldSaveCard: boolean; // Boolean!
    token: string; // String!
  };
  NewCardOneoffBillPaymentInput: {
    // input type
    accountNumber: string; // String!
    amount: number; // Float!
    amountType: NexusGenEnums['AmountType']; // AmountType!
    setupAutoPay: boolean; // Boolean!
  };
  OneTimeCardInput: {
    // input type
    amount: number; // Float!
    token: string; // String!
  };
  PoliPayBillInput: {
    // input type
    accountNumber: string; // String!
    amount?: number | null; // Float
    amountType: NexusGenEnums['AmountType']; // AmountType!
  };
  ProductCharacteristicsInput: {
    // input type
    autoRenew?: NexusGenEnums['AddBundleAutoRenew'] | null; // AddBundleAutoRenew
    systemAction?: NexusGenEnums['AddBundleSystemAction'] | null; // AddBundleSystemAction
  };
  ProductVariantsInput: {
    // input type
    groupId?: string | null; // String
    offerId?: string | null; // String
  };
  Recommendation: {
    // input type
    action: NexusGenEnums['RecommendationAction']; // RecommendationAction!
    recommendationId: string; // String!
  };
  RelatedProductBundleInput: {
    // input type
    id: string; // String!
    items: NexusGenInputs['RelatedProductBundleItemInput'][]; // [RelatedProductBundleItemInput!]!
  };
  RelatedProductBundleItemInput: {
    // input type
    id: string; // String!
  };
  RelatedProductInput: {
    // input type
    bundles: NexusGenInputs['RelatedProductBundleInput'][]; // [RelatedProductBundleInput!]!
    cartId?: string | null; // String
  };
  RevokeAccessInput: {
    // input type
    entityID: string; // String!
    number: string; // String!
    type: NexusGenEnums['RevokeAccessType']; // RevokeAccessType!
  };
  RoamingRatesInput: {
    // input type
    accountType?: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    destinationIso3: string[]; // [String!]!
  };
  RunBroadbandDiagnosticsInput: {
    // input type
    serviceGuidingId: string; // String!
  };
  SaveCheckoutStepFieldInput: {
    // input type
    name: string; // String!
    value: string; // String!
  };
  SaveCheckoutStepInput: {
    // input type
    bundleId?: string | null; // String
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    itemId?: string | null; // String
    options: NexusGenInputs['SaveCheckoutStepOptionInput'][]; // [SaveCheckoutStepOptionInput!]!
    rootFields: NexusGenInputs['SaveCheckoutStepFieldInput'][]; // [SaveCheckoutStepFieldInput!]!
    sectionId: string; // String!
    stepId: string; // String!
  };
  SaveCheckoutStepOptionInput: {
    // input type
    fields: NexusGenInputs['SaveCheckoutStepFieldInput'][]; // [SaveCheckoutStepFieldInput!]!
    name: string; // String!
    parentOption?: NexusGenInputs['SaveCheckoutStepFieldInput'] | null; // SaveCheckoutStepFieldInput
    value: string; // String!
  };
  SavedPaymentMethodInput: {
    // input type
    amount: number; // Float!
    paymentMethodId: string; // String!
  };
  SubmitOrderInput: {
    // input type
    accountBalance?: NexusGenInputs['accountBalance'] | null; // accountBalance
    cardToSave?: NexusGenInputs['CardToSaveInput'] | null; // CardToSaveInput
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    hasRegisterPaymentMethodOnly?: boolean | null; // Boolean
    lineNumber?: string | null; // String
    oneTimeCard?: NexusGenInputs['OneTimeCardInput'] | null; // OneTimeCardInput
    savedPaymentMethod?: NexusGenInputs['SavedPaymentMethodInput'] | null; // SavedPaymentMethodInput
  };
  SubmitOrderSSInput: {
    // input type
    account?: boolean | null; // Boolean
    amount: number; // Float!
    cancel?: boolean | null; // Boolean
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    existingCard?: NexusGenInputs['ExistingCardInput'] | null; // ExistingCardInput
    isSplitPayment?: boolean | null; // Boolean
    lineNumber?: string | null; // String
    newCard?: NexusGenInputs['NewCardInput'] | null; // NewCardInput
    prepaidBalance?: boolean | null; // Boolean
    voucher?: boolean | null; // Boolean
  };
  SubmitRecommendationInput: {
    // input type
    bundleId: string; // String!
    cartId: string; // String!
    channel: NexusGenEnums['CartChannel']; // CartChannel!
    recommendations: NexusGenInputs['Recommendation'][]; // [Recommendation!]!
  };
  TopupPoliPayBillInput: {
    // input type
    amount?: number | null; // Float
    lineNumber: string; // String!
  };
  UpdateConnectionPromiseLineInput: {
    // input type
    connectionPromiseId: string; // String!
    lineNumber: string; // String!
    primaryLine: boolean; // Boolean!
  };
  UpdateNameInput: {
    // input type
    firstName: string; // String!
    lastName: string; // String!
  };
  UpdatePreferenceChannelInput: {
    // input type
    address?: string | null; // String
    authCode?: string | null; // String
    channelId?: string | null; // String
    channelType?: NexusGenEnums['ChannelType'] | null; // ChannelType
    isOptedIn?: boolean | null; // Boolean
    preferenceId?: string | null; // String
    status?: string | null; // String
  };
  UpdateSmartCapInput: {
    // input type
    cap?: NexusGenInputs['DataCap'] | null; // DataCap
    isUncapped?: boolean | null; // Boolean
    lineNumber: string; // String!
    type?: NexusGenEnums['SmartCapType'] | null; // SmartCapType
  };
  VoucherPaymentInput: {
    // input type
    lineNumber: string; // String!
    voucherNumber: string; // String!
  };
  accountBalance: {
    // input type
    amount: number; // Float!
  };
}

export interface NexusGenEnums {
  A2PCustomerContentProviderCTA: 'DELETE' | 'EDIT';
  A2PCustomerServiceProviderMessageType: 'STANDARD' | 'ZERO_RATED';
  A2PCustomerServiceProviderStatus: 'APPROVED' | 'OPEN' | 'REJECTED';
  A2PDateRange: 'last12months' | 'last30days' | 'last6months' | 'last7days';
  A2PModifyShortcodeStatus: 'INACTIVE';
  A2POverviewInterval: 'DAYS' | 'MONTHS' | 'YEARS';
  A2PServiceRequestCarrier: 'SPARK' | 'TWODEGREES' | 'VODAFONE';
  A2PServiceRequestMessageType: 'STANDARD' | 'ZERO_RATED';
  A2PServiceRequestMessageUsage: 'MARKETING' | 'TRANSACTIONAL';
  A2PServiceRequestMessageVolume: 'HIGH' | 'LOW' | 'MEDIUM';
  A2PShortcodeCTA: 'DEACTIVATE' | 'EDIT' | 'VIEW';
  A2PShortcodeStatus: 'ACTIVE' | 'INACTIVE' | 'PENDING' | 'SUSPENDED';
  A2PShortcodeType: 'STANDARD' | 'ZERO_RATED';
  AccessType: 'GIVEN' | 'INHERITED';
  AccountAccessStatus: 'Active' | 'NotFound' | 'Revoked';
  AddAccountAccessNextSection:
    | 'BusinessNameEntry'
    | 'FullNameEntry'
    | 'LineNumberEntry'
    | 'PasswordEntry';
  AddBundleAction: 'add' | 'delete' | 'keep' | 'modify';
  AddBundleAutoRenew: 'GR' | 'OFF' | 'ON';
  AddBundleSystemAction:
    | 'ADDED'
    | 'CANCEL'
    | 'NONE'
    | 'RESUME'
    | 'TERMINATE'
    | 'UPDATE';
  AddLineAccessNextSection: 'AuthorisationCodeEntry';
  AddonAction:
    | 'displayProducts'
    | 'navigateBack'
    | 'redirect'
    | 'showErrorScreen';
  AmountType: 'ONEOFF' | 'TOTALDUE' | 'TOTALOVERDUE';
  AssetType: 'CTA' | 'Document' | 'Icon' | 'Image' | 'TextContent' | 'Video';
  AutoTopupType: 'LB' | 'RT';
  BalanceManagement: 'POSTPAID' | 'PREPAID';
  BalanceMessageStatus:
    | 'IMPORTANT'
    | 'NORMAL'
    | 'POSITIVE'
    | 'UNAVAILABLE'
    | 'WARNING';
  BillingFrequency: 'EVERY_28_DAYS' | 'MONTHLY' | 'ONE_OFF';
  BiometricProgressInfoBanner:
    | 'MAX_LINKS'
    | 'NO_MATCH'
    | 'SUCCESS'
    | 'TIMED_OUT';
  BiometricProgressStepStatus: 'DONE' | 'ERROR' | 'INACTIVE' | 'LOADING';
  BroadbandDiagnosticsCtaType:
    | 'CHAT'
    | 'CONNECTION_TROUBLESHOOTER'
    | 'DIAGNOSTIC_CHECK';
  BroadbandDiagnosticsTestSuiteType:
    | 'COPPER'
    | 'FIBRE_CHORUS'
    | 'FIBRE_OTHER'
    | 'WIRELESS_BB';
  BroadbandDiagnosticsTestType: 'ACCESS_POINT' | 'CONNECTIVITY' | 'NETWORK';
  BroadbandTroubleshooterCTAType: 'CHAT' | 'TROUBLESHOOTING_STEP';
  BroadbandTroubleshooterComponentType:
    | 'CHECKLIST_ITEM'
    | 'HEADING'
    | 'HIGHLIGHTED_NOTE'
    | 'TROUBLESHOOT_MODEM_DETAILS';
  CardBrand: 'amex' | 'diners' | 'mastercard' | 'visa';
  CartChannel: 'businessshop' | 'personalshop' | 'personalss';
  CartItemAction: 'add' | 'delete' | 'keep' | 'modify';
  CartViewMandatoryAction:
    | 'CHOOSE_ACCOUNT'
    | 'CHOOSE_ELIGIBLE_IFP_PLAN'
    | 'SIGN_IN';
  CartViewScreen: 'EMPTY_SCREEN' | 'NO_ACCOUNT_SCREEN' | 'OVERVIEW_SCREEN';
  ChannelType: 'email' | 'inapp' | 'push' | 'sms';
  CheckoutFieldComponent:
    | 'ACCOUNT_NUMBER'
    | 'ADDRESS_SEARCH'
    | 'BENEFITS'
    | 'BLACKBOX'
    | 'BUTTON'
    | 'CARD_INPUT'
    | 'CART_REVIEW_FOOTNOTE'
    | 'CART_TABLE'
    | 'CHANGE_PAYMENT_METHOD'
    | 'CHANGE_PLAN_COMPARER'
    | 'CHECKBOX'
    | 'CHOICEBOX'
    | 'CLOSE_BUTTON'
    | 'CONTENT_FIELD'
    | 'COPY_PERSONAL_DETAILS_CHECKBOX'
    | 'DATEPICKER'
    | 'DELIVERY_ITEMS'
    | 'DELIVERY_OPTIONS'
    | 'DROPDOWN'
    | 'EMAIL_DELIVERY_ITEMS'
    | 'FOOTNOTE'
    | 'FULL_DATE_INPUT'
    | 'HEADING_FIELD'
    | 'HIDDEN'
    | 'INFO_BOX_FIELD'
    | 'INLINE_DATE_PICKER'
    | 'MOBILE_TRANSFER_MESSAGE'
    | 'MONTH_DATE_INPUT'
    | 'MPD_COMPARER'
    | 'MPD_DETAILS'
    | 'NEW_PHONE_NUMBER'
    | 'NUMBER_INPUT'
    | 'PAYMENT_AMOUNT'
    | 'PAYMENT_BUTTON'
    | 'PAYMENT_FIELD'
    | 'PAYMENT_OPTIONS'
    | 'PHONE_INPUT'
    | 'REVIEW_BUTTON'
    | 'SERVICE_PROVIDER'
    | 'SIM_NUMBER'
    | 'STORE_LIST'
    | 'SUBMIT_BUTTON'
    | 'SUBMIT_RECOMMENDATION_BUTTON'
    | 'SUBSCRIPTION_COMPARER'
    | 'TEXT_INPUT'
    | 'TOGGLE_BUTTON'
    | 'UNSUPPORTED'
    | 'UPFRONT_PAYMENT';
  ClientType: 'CQ_DESKTOP' | 'CQ_MOBILE' | 'SMARTPHONE';
  ContentFormatType:
    | 'cta'
    | 'gif'
    | 'jpg'
    | 'mp4'
    | 'pdf'
    | 'png'
    | 'text'
    | 'zip';
  ContentJourneyKeys:
    | 'HEADING'
    | 'HYPERLINK'
    | 'IMAGE'
    | 'LABEL'
    | 'ORDERED_LIST_ITEM'
    | 'PARAGRAPH'
    | 'SUB_HEADING'
    | 'UNORDERED_LIST_ITEM';
  ContentType: 'cta' | 'heading' | 'paragraph';
  ContractTermUnit: 'Day' | 'Hour' | 'Month' | 'Week' | 'Year';
  CreditDebitMarker: 'CR' | 'DR';
  CtaCode:
    | 'ADD_CREDIT'
    | 'BUY_PACK_OR_EXTRA'
    | 'GET_HELP_WITH_BILL'
    | 'MANAGE_AUTO_TOPUP'
    | 'MANAGE_MONTHLY_PAYMENT'
    | 'MANAGE_PACK_OR_EXTRA'
    | 'MESSAGE_US'
    | 'PAY_BILL'
    | 'SETUP_AUTO_TOPUP'
    | 'SETUP_MONTHLY_PAYMENT'
    | 'TOPUP'
    | 'VIEW_IFP'
    | 'VIEW_LATEST_BILL'
    | 'VIEW_TRANSACTION_DETAIL';
  CustomerSegment: 'Business' | 'Consumer';
  DisplaySurchargeOperationType: 'PAY_BILL' | 'SETUP_MONTHLY_PAYMENT';
  EntitledEntityType: 'ACCOUNT' | 'LINE';
  FeasibilityReason:
    | 'ALLOWED'
    | 'CALL_CENTRE'
    | 'CHANGE_OFFER'
    | 'IN_PROGRESS'
    | 'PORT_OUT'
    | 'SERVICE_NOT_ACTIVATED'
    | 'TERMINATE'
    | 'UNKNOWN';
  FrequencyPeriod: 'Day' | 'Hour' | 'Month' | 'Week' | 'Year';
  FrequencyType: 'OneOff' | 'Recurring';
  ImageType:
    | 'BACKGROUND'
    | 'FEATURED'
    | 'GALLERY'
    | 'LOGO'
    | 'OTHER'
    | 'PRODUCT'
    | 'SHOWCASE';
  LineAccessLevelType: 'LINE_LEVEL';
  LineAllowanceEntitlementStatus: 'ACTIVE' | 'GRACE';
  LineAllowanceExtraDetailRenewalState:
    | 'GUARANTEE_RENEWAL'
    | 'OFF'
    | 'ON'
    | 'PENDING_PAYMENT';
  LineAllowanceExtraDetailSubtype: 'DOMESTIC' | 'ROAMING';
  LineAllowanceSharePlanLineDetailSharePlanType: 'LEADER' | 'SHARER';
  LineAllowanceSharePlanLineDetailSharerType: 'DATA' | 'MOBILE';
  LineAllowanceSpeedAllowancesDetailStatus: 'ACTIVE' | 'DEFAULT' | 'NEXT';
  LineAllowanceVolumeType: 'GB' | 'KB' | 'MB';
  LineEntitlementQuantityUnit: 'GB' | 'MB' | 'MBPS' | 'MIN' | 'TEXT';
  LineHistoryInterval: 'DAILY' | 'HOURLY' | 'MONTHLY';
  LineServiceType: 'BROADBAND' | 'COPPER' | 'MOBILE' | 'WIRELESS_BROADBAND';
  LineShareGroupCapMemberType: 'Leader' | 'MobileSharer';
  LineShareGroupCapMemberUnit: 'GB' | 'MB';
  LineSoftCapUnit: 'GB' | 'MB';
  LineSpendHistoryBreakdownType:
    | 'ADDITIONAL_INCLUDED'
    | 'ADDITIONAL_PAID'
    | 'CREDIT'
    | 'PLAN';
  LineSubscriptionAutoRenew: 'GR' | 'OFF' | 'ON';
  LineSubscriptionCta:
    | 'ACTIVATE'
    | 'ACTIVATE_RETRY'
    | 'CANCEL'
    | 'CHANGE_PAYMENT_METHOD'
    | 'EDIT_PARTNER_ACCOUNT'
    | 'REACTIVATE'
    | 'RESUME'
    | 'SWITCH';
  LineSubscriptionStatus:
    | 'ACTIVE'
    | 'CANCELLED'
    | 'NOT_ACTIVE'
    | 'PROCESSING_ACTIVATION'
    | 'PROCESSING_ORDER_ADD'
    | 'PROCESSING_ORDER_AUTORENEW_CANCEL'
    | 'PROCESSING_ORDER_AUTORENEW_RESUME'
    | 'PROCESSING_ORDER_CHANGEPAYMENTMETHOD'
    | 'PROCESSING_ORDER_CHANGEPLAN'
    | 'TERMINATED';
  LineType: 'BROADBAND' | 'MOBILE_POSTPAID' | 'MOBILE_PREPAID' | 'UNKNOWN';
  LineUsageBillingStatus:
    | 'ACTIVE'
    | 'GRACE'
    | 'PENDING_FIRST_USE'
    | 'PENDING_GR'
    | 'PENDING_PAYMENT'
    | 'STOPPED';
  LineUsageCapUnit: 'GB' | 'MB' | 'MIN' | 'TEXT';
  LineUsageCategory: 'DATA' | 'TALK' | 'TEXT';
  LineUsageHistoryPeriodBreakdownType:
    | 'ADDITIONAL_INCLUDED'
    | 'ADDITIONAL_PAID'
    | 'PLAN';
  LineUsageHistoryPeriodUsageUnit: 'GB' | 'MB' | 'MIN' | 'TEXT';
  LineUsageHistorySharerType: 'LEADER' | 'NOT_SHARED' | 'SHARER';
  LineUsageHistoryUsageType: 'DATA' | 'SMS' | 'VOICE';
  LineUsageMessageStatus: 'IMPORTANT' | 'WARNING';
  LineUsageRenewal: 'AutoTopup' | 'GuaranteedRenewal';
  MonthlyPaymentSetupType: 'CC' | 'DD' | 'RCC';
  NotificationType: 'ERROR' | 'INFO' | 'SUCCESS' | 'WARN';
  Origin: 'Apple' | 'Facebook' | 'Google' | 'MYSB' | 'MySpark';
  OutageStatus: 'CURRENT' | 'FIXED' | 'RESOLVED';
  PaymentMethodAccessType: 'ACCOUNT' | 'LINE';
  PaymentMethodAssociationType: 'RECURRING';
  PaymentMethodBankType:
    | 'ANZ_Bank'
    | 'ASB_Bank'
    | 'Bank_of_New_Zealand'
    | 'Citibank_N_A'
    | 'HSBC_Bank_NZ'
    | 'Industrial_and_Commercial_Bank_of_China_Limited_NZ'
    | 'Kiwibank'
    | 'TSB_Bank'
    | 'Unknown'
    | 'Westpac';
  PaymentMethodCardType: 'amex' | 'diners' | 'mastercard' | 'Unknown' | 'visa';
  PaymentMethodSource: 'DIRECT' | 'WALLET_OTHER' | 'WALLET_SELF';
  PaymentMethodType: 'BANK' | 'CREDIT';
  PaymentStatusType: 'APPLIED' | 'FAILED';
  PointOfInterestDayOfWeek:
    | 'Friday'
    | 'Monday'
    | 'Saturday'
    | 'Sunday'
    | 'Thursday'
    | 'Tuesday'
    | 'Wednesday';
  PointOfInterestServiceType: 'BUSINESS' | 'STORE' | 'WIFI';
  PointsOfInterestOutageType: 'MAINTENANCE' | 'OUTAGE';
  ProcessContext:
    | 'AddVAS'
    | 'ChangeOffer'
    | 'ManageVAS'
    | 'MobileMigrate'
    | 'ModifyOffer'
    | 'NewOffer';
  ProductBalanaceManagementType: 'POSTPAID' | 'PREPAID';
  ProductIconType: 'BROADBAND' | 'MOBILE' | 'MOBILE_INFINITY' | 'WEARABLE';
  ProductType: 'CHARACTERISTIC' | 'DEAL' | 'FEATURE' | 'MARKETING';
  RecommendationAction: 'CANCEL' | 'INFORM' | 'KEEP';
  RevokeAccessType: 'Account' | 'Line';
  RuleType: 'IFP' | 'REGULAR';
  Segment: 'business' | 'personal';
  SegmentType: 'BUSINESS' | 'CONSUMER';
  ServicesAffectedByOutageType: 'INTERNET' | 'LANDLINE' | 'MOBILE' | 'OTHERS';
  SmartCapType: 'LOCAL' | 'ROAMING' | 'SHARER_LIMIT';
  SmartCapUnit: 'DOLLAR' | 'GB' | 'MB';
  StatusType: 'IN_STOCK' | 'OUT_OF_STOCK';
  StoreListServiceType: 'BUSINESS' | 'STORE' | 'WIFI';
  StyleType: 'PRIMARY' | 'SECONDARY';
  SubscriptionComparisonCTAType: 'CANCEL' | 'INFORM' | 'KEEP';
  SubscriptionOfferCtaType: 'ADD';
  TopUpBuyExtraType: 'BUYEXTRA' | 'TOPUP';
  TopupSource: 'DIRECT' | 'NEW_CARD' | 'WALLET_SELF';
  TransactionType:
    | 'Charged'
    | 'Credit'
    | 'Failed'
    | 'Late_Fee'
    | 'Payment'
    | 'Surcharge';
  UsageTransactionType: 'ADJUSTMENT' | 'CHARGE' | 'PAYMENT';
  WalletPaymentMethodSource: 'DIRECT' | 'WALLET_OTHER' | 'WALLET_SELF';
  mfaOption: 'email' | 'none';
}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenObjects {
  A2PAddContentProviderResponse: {
    // root type
    code: number; // Int!
    contentProviderId?: string | null; // String
    message: string; // String!
    success: boolean; // Boolean!
  };
  A2PAddServiceRequestResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    serviceRequestId?: string | null; // String
    success: boolean; // Boolean!
  };
  A2PAdminOverview: {
    // root type
    dateTimeEnd?: string | null; // String
    dateTimeStart?: string | null; // String
    interval?: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length?: number | null; // Int
    pendingShortcodesCount: number; // Int!
    suspendedShortcodesCount: number; // Int!
    totalCustomersCount: number; // Int!
    totalShortcodesCount: number; // Int!
  };
  A2PAdminShortcodeItem: {
    // root type
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: number; // Int!
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    sentSmsCount: number; // Int!
    shortCodeNumber: number; // Int!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    totalSmsCount: number; // Int!
    type: NexusGenEnums['A2PShortcodeType']; // A2PShortcodeType!
  };
  A2PAdminShortcodesOverview: {
    // root type
    activeShortcodesCount: number; // Int!
    dateTimeEnd?: string | null; // String
    dateTimeStart?: string | null; // String
    interval?: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length?: number | null; // Int
    pendingShortcodesCount: number; // Int!
    suspendedShortcodesCount: number; // Int!
    totalShortcodesCount: number; // Int!
  };
  A2PCustomerContentProvider: {
    // root type
    contentProviderId: number; // Int!
    contentProviderName: string; // String!
    ctas: NexusGenEnums['A2PCustomerContentProviderCTA'][]; // [A2PCustomerContentProviderCTA!]!
    customerCareUrl?: string | null; // String
    customerName: string; // String!
    customerNumber: string; // String!
    helpdeskEmail?: string | null; // String
    phoneNumber?: string | null; // String
  };
  A2PCustomerOverview: {
    // root type
    dateTimeEnd?: string | null; // String
    dateTimeStart?: string | null; // String
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    interval?: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length?: number | null; // Int
    sentSmsCount: number; // Int!
    totalSmsCount: number; // Int!
  };
  A2PCustomerServiceRequest: {
    // root type
    assignedShortcodeNumber?: string | null; // String
    contentProviderId: number; // Int!
    dateTimeCreated: string; // String!
    dateTimeModified: string; // String!
    messageType: NexusGenEnums['A2PCustomerServiceProviderMessageType']; // A2PCustomerServiceProviderMessageType!
    requestedShortcodeNumber?: string | null; // String
    serviceRequestId: string; // String!
    status: NexusGenEnums['A2PCustomerServiceProviderStatus']; // A2PCustomerServiceProviderStatus!
  };
  A2PCustomerShortcode: {
    // root type
    carriers: NexusGenEnums['A2PServiceRequestCarrier'][]; // [A2PServiceRequestCarrier!]!
    contentProviderId: number; // Int!
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: string; // String!
    expectedMessageVolume: NexusGenEnums['A2PServiceRequestMessageVolume']; // A2PServiceRequestMessageVolume!
    firstName: string; // String!
    jobTitle: string; // String!
    lastName: string; // String!
    messageType: NexusGenEnums['A2PServiceRequestMessageType']; // A2PServiceRequestMessageType!
    messageUsage: NexusGenEnums['A2PServiceRequestMessageUsage']; // A2PServiceRequestMessageUsage!
    mobileOriginatingMessageExample: string; // String!
    mobileTerminatingMessageExample: string; // String!
    predictedPeakTimeDescription: string; // String!
    preferredNumber?: string | null; // String
    serviceComplianceDescription: string; // String!
    serviceDescription: string; // String!
    serviceEndDateTime: string; // String!
    serviceMarketingChannels: string[]; // [String!]!
    serviceName: string; // String!
    shortCodeNumber: number; // Int!
    signature: string; // String!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PCustomerShortcodeListItem: {
    // root type
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: string; // String!
    shortCodeNumber: number; // Int!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    type?: NexusGenEnums['A2PShortcodeType'] | null; // A2PShortcodeType
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PCustomerUsage: {
    // root type
    dateTimeEnd?: string | null; // String
    dateTimeStart?: string | null; // String
    interval?: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length?: number | null; // Int
    series: NexusGenRootTypes['A2PCustomerUsageItem'][]; // [A2PCustomerUsageItem!]!
  };
  A2PCustomerUsageItem: {
    // root type
    dateTimeEnd: string; // String!
    dateTimeStart: string; // String!
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    sentSmsCount: number; // Int!
    totalSmsCount: number; // Int!
  };
  A2PModifyShortcodeResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  A2POrganisationDetails: {
    // root type
    customerNumber?: string | null; // String
  };
  A2PStatusResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    status: boolean; // Boolean!
    success: boolean; // Boolean!
  };
  AccountAccessInformation: {
    // root type
    accountNumber?: string | null; // String
    balanceManagement?: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    displayName?: string | null; // String
    lines: NexusGenRootTypes['Line'][]; // [Line!]!
    statusText?: string | null; // String
  };
  AccountAssociatedProduct: {
    // root type
    assetId?: string | null; // String
    ifpEligible: boolean; // Boolean!
    lineNumber?: string | null; // String
    offerId?: string | null; // String
    offerName?: string | null; // String
    productInstanceId?: string | null; // String
  };
  AccountBalance: {
    // root type
    accountNumber: string; // String!
    currentBalance?: NexusGenRootTypes['CurrentBalance'] | null; // CurrentBalance
    currentBillCycle?: number | null; // Int
    detailMessage?: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
    firstName?: string | null; // String
    lastBill?: NexusGenRootTypes['LastBill'] | null; // LastBill
    lastName?: string | null; // String
    lastPayment?: NexusGenRootTypes['LastPayment'] | null; // LastPayment
    monthlyPaymentSetup?: NexusGenRootTypes['MonthlyPaymentSetup'][] | null; // [MonthlyPaymentSetup!]
    nextBill?: NexusGenRootTypes['NextBill'] | null; // NextBill
    summaryMessage?: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
  };
  AccountDetails: {
    // root type
    accountName?: string | null; // String
    accountNumber?: string | null; // String
    accountNumberSuffix?: string | null; // String
    bank?: string | null; // String
    bankNumber?: string | null; // String
    branchName?: string | null; // String
    branchNumber?: string | null; // String
  };
  AccountList: {
    // root type
    accountId: string; // String!
    accountNumber: string; // String!
    balanceManagement?: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    businessName?: string | null; // String
    customerNumber: string; // String!
    customerSegment: string; // String!
    firstName?: string | null; // String
    inCollections: boolean; // Boolean!
    lastName?: string | null; // String
    products?: NexusGenRootTypes['AccountAssociatedProduct'][] | null; // [AccountAssociatedProduct!]
    segment: NexusGenEnums['Segment']; // Segment!
    status: string; // String!
  };
  AccountResource: {
    // root type
    hasBusinessName?: boolean | null; // Boolean
    isAccountAccessAllowed: boolean; // Boolean!
    isPasswordProtected?: boolean | null; // Boolean
  };
  AccountSummary: {
    // root type
    firstName: string; // String!
    lastName: string; // String!
  };
  AccountTransactionDetail: {
    // root type
    billId?: string | null; // String
    calculatedBalance?: number | null; // Float
    date: string; // String!
    description: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    value: number; // Float!
  };
  AccountTransactionsDetails: {
    // root type
    details: NexusGenRootTypes['AccountTransactionDetail'][]; // [AccountTransactionDetail!]!
  };
  AddAccountAccessResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    nextStep?: NexusGenEnums['AddAccountAccessNextSection'] | null; // AddAccountAccessNextSection
    success: boolean; // Boolean!
    title?: string | null; // String
  };
  AddAccountToCartResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddBundleOperationResponse: {
    // root type
    bundles?: NexusGenRootTypes['AddBundlesResponse'][] | null; // [AddBundlesResponse!]
    cart?: NexusGenRootTypes['Cart'] | null; // Cart
    cartId?: string | null; // String
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddBundlesResponse: {
    // root type
    bundleId: string; // String!
    categoryId: string; // String!
    categoryName: string; // String!
    isAffected: boolean; // Boolean!
    items: NexusGenRootTypes['AddBundlesResponseItem'][]; // [AddBundlesResponseItem!]!
  };
  AddBundlesResponseItem: {
    // root type
    itemId: string; // String!
    offerId: string; // String!
  };
  AddConnectionPromiseLineResponse: {
    // root type
    code: number; // Int!
    connectionPromiseId?: string | null; // String
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddItemsToBundleResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddLineAccessResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    nextStep?: NexusGenEnums['AddLineAccessNextSection'] | null; // AddLineAccessNextSection
    success: boolean; // Boolean!
    title?: string | null; // String
  };
  AddWalletPaymentMethodResponse: {
    // root type
    addWalletPaymentMethodResponse?:
      | NexusGenRootTypes['RestOfAddWalletPaymentMethodResponse']
      | null; // RestOfAddWalletPaymentMethodResponse
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddonOfferDetail: {
    // root type
    associatedPriceRules?: NexusGenRootTypes['AssociatedPriceRule'][] | null; // [AssociatedPriceRule!]
    bundleId: string; // String!
    category?: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    categoryIdentifier?: string | null; // String
    contentKey?: string | null; // String
    contractTerm?: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    description?: string | null; // String
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId?: string | null; // String
    group?: NexusGenRootTypes['Group'] | null; // Group
    id: string; // String!
    images?: NexusGenRootTypes['Image'][] | null; // [Image!]
    isAccountLevel: boolean; // Boolean!
    isGrandfathered?: boolean | null; // Boolean
    name: string; // String!
    offerId?: string | null; // String
    price?: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics?: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productFeatures?: NexusGenRootTypes['ProductFeature'] | null; // ProductFeature
    productSpecifications?: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    productType?: string | null; // String
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    stock?: NexusGenRootTypes['Stock'] | null; // Stock
    supportedDestinations?: string[] | null; // [String!]
  };
  AddonsProducts: {
    // root type
    accessoryBundles?: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
    insuranceBundles?: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
    vasBundles?: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
  };
  AddressDetail: {
    // root type
    addressLine1: string; // String!
    addressLine2?: string | null; // String
    addressLine3?: string | null; // String
    addressLine4?: string | null; // String
    elid: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
  };
  AddressResponse: {};
  AddressSuggestion: {
    // root type
    elid: string; // String!
    label: string; // String!
  };
  AirpointsDeleteResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AirpointsResponse: {
    // root type
    airpointsNumber: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    status: string; // String!
  };
  AirpointsUpdateResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AssociatedPriceRule: {
    // root type
    description: string; // String!
    price: NexusGenRootTypes['Price']; // Price!
    pricePointID: string; // String!
    ruleType: NexusGenEnums['RuleType']; // RuleType!
    sources: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  AssociatedUser: {
    // root type
    businessName?: string | null; // String
    email: string; // String!
    entityID: string; // String!
    firstName?: string | null; // String
    isPending?: boolean | null; // Boolean
    lastName?: string | null; // String
    role?: string | null; // String
    type: NexusGenEnums['AccessType']; // AccessType!
  };
  Auth: {
    // root type
    isAuthenticated: boolean; // Boolean!
    isGuest: boolean; // Boolean!
  };
  AuthenticatedInfoResponse: {
    // root type
    hasSparkId: boolean; // Boolean!
    isGuest: boolean; // Boolean!
    isLoggedIn: boolean; // Boolean!
    profile?: NexusGenRootTypes['ProfileInfo'] | null; // ProfileInfo
  };
  AutoTopupDetails: {
    // root type
    topupSettings: NexusGenRootTypes['TopupSettings'][]; // [TopupSettings!]!
  };
  AutoTopupResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AvailableNumbersResponse: {
    // root type
    code: number; // Int!
    lineNumber?: string | null; // String
    lineNumberReservationChunkIndex: number; // Int!
    lineNumberReservationChunks: NexusGenRootTypes['LineNumberReservation'][][]; // [[LineNumberReservation!]!]!
    lineNumberReservations: NexusGenRootTypes['LineNumberReservation'][]; // [LineNumberReservation!]!
    lineNumbers: string[]; // [String!]!
    message: string; // String!
    pagingId: string; // String!
    reservationId: string; // String!
    success: boolean; // Boolean!
  };
  BalanceInformationMessage: {
    // root type
    otherCtas?: NexusGenRootTypes['OperationTypeCtaDetails'][] | null; // [OperationTypeCtaDetails!]
    primary: string; // String!
    primaryCta: NexusGenRootTypes['OperationTypeCtaDetails']; // OperationTypeCtaDetails!
    secondary?: string | null; // String
    secondaryCta?: NexusGenRootTypes['OperationTypeCtaDetails'] | null; // OperationTypeCtaDetails
    status?: NexusGenEnums['BalanceMessageStatus'] | null; // BalanceMessageStatus
    tertiary?: string | null; // String
  };
  BankAccountDetail: {
    // root type
    accountName: string; // String!
    accountNumber: string; // String!
    bankName: string; // String!
    bankType: NexusGenEnums['PaymentMethodBankType']; // PaymentMethodBankType!
  };
  BaseOfferDetail: {
    // root type
    associatedPriceRules?: NexusGenRootTypes['AssociatedPriceRule'][] | null; // [AssociatedPriceRule!]
    category?: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    contentKey?: string | null; // String
    contractTerm?: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    description?: string | null; // String
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId?: string | null; // String
    group?: NexusGenRootTypes['Group'] | null; // Group
    id: string; // String!
    images?: NexusGenRootTypes['Image'][] | null; // [Image!]
    isGrandfathered?: boolean | null; // Boolean
    name: string; // String!
    offerId?: string | null; // String
    price?: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics?: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productFeatures?: NexusGenRootTypes['ProductFeature'] | null; // ProductFeature
    productSpecifications?: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    productType?: string | null; // String
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    stock?: NexusGenRootTypes['Stock'] | null; // Stock
    supportedDestinations?: string[] | null; // [String!]
  };
  BillBreakdown: {
    // root type
    billId: string; // String!
    charges: NexusGenRootTypes['BillBreakdownCharge'][]; // [BillBreakdownCharge!]!
    date: string; // String!
    title: string; // String!
  };
  BillBreakdownCharge: {
    // root type
    type: string; // String!
    value: number; // Float!
  };
  BillSummary: {
    // root type
    bills: NexusGenRootTypes['BillBreakdown'][]; // [BillBreakdown!]!
  };
  BiometricProgressResponse: {
    // root type
    infoBanner?: NexusGenEnums['BiometricProgressInfoBanner'] | null; // BiometricProgressInfoBanner
    isContinueEnabled: boolean; // Boolean!
    showResend: boolean; // Boolean!
    steps: NexusGenRootTypes['BiometricProgressStep'][]; // [BiometricProgressStep!]!
  };
  BiometricProgressStep: {
    // root type
    label: string; // String!
    status: NexusGenEnums['BiometricProgressStepStatus']; // BiometricProgressStepStatus!
    stepId: string; // String!
  };
  BroadbandDiagnostics: {
    // root type
    modemModel: string; // String!
    results?: NexusGenRootTypes['BroadbandDiagnosticsResult'][] | null; // [BroadbandDiagnosticsResult!]
    testSuiteCompleted?: boolean | null; // Boolean
    testSuiteType?: NexusGenEnums['BroadbandDiagnosticsTestSuiteType'] | null; // BroadbandDiagnosticsTestSuiteType
  };
  BroadbandDiagnosticsAvailableCTA: {
    // root type
    ctaType: NexusGenEnums['BroadbandDiagnosticsCtaType']; // BroadbandDiagnosticsCtaType!
    label: string; // String!
    webAction?: string | null; // String
  };
  BroadbandDiagnosticsResult: {
    // root type
    availableCTAs: NexusGenRootTypes['BroadbandDiagnosticsAvailableCTA'][]; // [BroadbandDiagnosticsAvailableCTA!]!
    desc?: string | null; // String
    diagnosticSummaryCode?: string | null; // String
    testExecuted: boolean; // Boolean!
    testLabel: string; // String!
    testPassed: boolean; // Boolean!
    testType: NexusGenEnums['BroadbandDiagnosticsTestType']; // BroadbandDiagnosticsTestType!
    title?: string | null; // String
  };
  BroadbandDiagnosticsResultsResponse: {
    // root type
    broadbandDiagnostics?: NexusGenRootTypes['BroadbandDiagnostics'] | null; // BroadbandDiagnostics
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  BroadbandTroubleshooterAvailableCTA: {
    // root type
    label: string; // String!
    type: NexusGenEnums['BroadbandTroubleshooterCTAType']; // BroadbandTroubleshooterCTAType!
    webCTA?: string | null; // String
  };
  BroadbandTroubleshooterBody: {
    // root type
    componentType?:
      | NexusGenEnums['BroadbandTroubleshooterComponentType']
      | null; // BroadbandTroubleshooterComponentType
    copy?: string | null; // String
  };
  BroadbandTroubleshooterGallery: {
    // root type
    url?: string | null; // String
  };
  BroadbandTroubleshooterResultsResponse: {
    // root type
    diagnosticSummaryCode: string; // String!
    helpSteps: NexusGenRootTypes['BroadbandTroubleshooterStep'][]; // [BroadbandTroubleshooterStep!]!
    initialStep: string; // String!
    modemImage?: string | null; // String
    modemManufacturer?: string | null; // String
    modemSerialNumber?: string | null; // String
    stepForModemModel: string; // String!
  };
  BroadbandTroubleshooterStep: {
    // root type
    bodyList?: NexusGenRootTypes['BroadbandTroubleshooterBody'][] | null; // [BroadbandTroubleshooterBody!]
    ctaList: NexusGenRootTypes['BroadbandTroubleshooterAvailableCTA'][]; // [BroadbandTroubleshooterAvailableCTA!]!
    ctaTitle?: string | null; // String
    imageList?: NexusGenRootTypes['BroadbandTroubleshooterGallery'][] | null; // [BroadbandTroubleshooterGallery!]
    stepId: string; // String!
    title?: string | null; // String
  };
  Bundle: {
    // root type
    bundleId: string; // String!
    categoryId?: string | null; // String
    isLineNumberRequired?: boolean | null; // Boolean
    items?: NexusGenRootTypes['Item'][] | null; // [Item!]
    lineNumber?: string | null; // String
    offerIds: string[]; // [String!]!
  };
  CRMAttributes: {
    // root type
    legalCategory?: string | null; // String
    lineOfBusiness?: string | null; // String
    segment?: string | null; // String
  };
  CardDetail: {
    // root type
    brand?: NexusGenEnums['CardBrand'] | null; // CardBrand
    cardName?: string | null; // String
    cardType: string; // String!
    creditCardType: NexusGenEnums['PaymentMethodCardType']; // PaymentMethodCardType!
    expiryMonth: number; // Int!
    expiryYear: number; // Int!
    maskedCardNumber: string; // String!
  };
  CardDisplaySurchargeResponse: {
    // root type
    amex: string; // String!
    dinersClub: string; // String!
    displayText: string[]; // [String!]!
    masterCard: string; // String!
    operationType: string; // String!
    visa: string; // String!
  };
  Cart: {
    // root type
    accountNumber?: string | null; // String
    auth: NexusGenRootTypes['Auth']; // Auth!
    bundles?: NexusGenRootTypes['Bundle'][] | null; // [Bundle!]
    cartId: string; // String!
    id: string; // String!
    isAccountNumberRequired: boolean; // Boolean!
    segment?: string | null; // String
    shippableItems?: NexusGenRootTypes['Item'][] | null; // [Item!]
    summaries?: NexusGenRootTypes['Summary'][] | null; // [Summary!]
  };
  CartExistingMpdLine: {
    // root type
    currentDiscountPercentage: NexusGenRootTypes['Discount']; // Discount!
    currentPrice: number; // Float!
    description: string; // String!
    existingDiscountPercentage: NexusGenRootTypes['Discount']; // Discount!
    lineNumber: string; // String!
    updatedPrice: number; // Float!
  };
  CartPrice: {
    // root type
    taxExclusiveValue: number; // Float!
    value: number; // Float!
  };
  CartView: {
    // root type
    cart?: NexusGenRootTypes['Cart'] | null; // Cart
    id: string; // ID!
    mandatoryAction?: NexusGenEnums['CartViewMandatoryAction'] | null; // CartViewMandatoryAction
    screen: NexusGenEnums['CartViewScreen']; // CartViewScreen!
  };
  Category: {
    // root type
    iconName: string; // String!
    label: string; // String!
    url?: string | null; // String
  };
  CheckoutDataFieldEntry: {
    // root type
    name: string; // String!
    value?: string | null; // String
  };
  CheckoutDataResponse: {
    // root type
    id: string; // ID!
    sections: NexusGenRootTypes['CheckoutDataSection'][]; // [CheckoutDataSection!]!
  };
  CheckoutDataSection: {
    // root type
    sectionId: string; // String!
    steps: NexusGenRootTypes['CheckoutDataStep'][]; // [CheckoutDataStep!]!
  };
  CheckoutDataStep: {
    // root type
    entries: NexusGenRootTypes['CheckoutDataFieldEntry'][]; // [CheckoutDataFieldEntry!]!
    offerContainerId?: string | null; // String
    stepId: string; // String!
    stepPath: string; // String!
  };
  CheckoutField: {
    // root type
    component: NexusGenEnums['CheckoutFieldComponent']; // CheckoutFieldComponent!
    componentViewId?: string | null; // String
    componentViewName?: string | null; // String
    contentKey?: string | null; // String
    customItems?: string[] | null; // [String!]
    dataRef?: NexusGenRootTypes['CheckoutFieldDataRef'][] | null; // [CheckoutFieldDataRef!]
    defaultValue?: string | null; // String
    fieldType: NexusGenEnums['CheckoutFieldComponent']; // CheckoutFieldComponent!
    filterDate?: string | null; // String
    infoLayerContentKey?: string | null; // String
    key: string; // String!
    label?: string | null; // String
    maximumRule?: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    minimumRule?: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    name: string; // String!
    options?: NexusGenRootTypes['CheckoutFieldOption'][] | null; // [CheckoutFieldOption!]
    parent?: NexusGenRootTypes['Parent'] | null; // Parent
    placeholder?: string | null; // String
    regionId?: string | null; // String
    required: boolean; // Boolean!
    shouldHideWhenSingleOption: boolean; // Boolean!
    shouldMask: boolean; // Boolean!
    showInSummary: boolean; // Boolean!
    summaryLabel?: string | null; // String
    summaryTemplate?: string | null; // String
    validationRule?: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    visibilityExpression?: string | null; // String
  };
  CheckoutFieldDataRef: {
    // root type
    id: string; // String!
    text: string; // String!
  };
  CheckoutFieldOption: {
    // root type
    iconName?: string | null; // String
    label: string; // String!
    sublabel?: string | null; // String
    value: string; // String!
    visibility: boolean; // Boolean!
  };
  CheckoutSection: {
    // root type
    descriptionContentKey?: string | null; // String
    name?: string | null; // String
    sectionId: string; // String!
    steps: NexusGenRootTypes['CheckoutStep'][]; // [CheckoutStep!]!
  };
  CheckoutStep: {
    // root type
    bundleId?: string | null; // String
    fields: NexusGenRootTypes['CheckoutField'][]; // [CheckoutField!]!
    itemId?: string | null; // String
    name?: string | null; // String
    nameExpression?: string | null; // String
    stepId: string; // String!
    stepPath: string; // String!
  };
  CheckoutStructureQueryResponse: {
    // root type
    id: string; // String!
    sections: NexusGenRootTypes['CheckoutSection'][]; // [CheckoutSection!]!
  };
  Color: {
    // root type
    name: string; // String!
    primaryColor: string; // String!
    value: string; // String!
  };
  ConnectionPromiseLine: {
    // root type
    connectionPromiseId: string; // String!
    lineNumber: string; // String!
    primaryLine: boolean; // Boolean!
  };
  ConnectionPromiseLinesResponse: {
    // root type
    lines?: NexusGenRootTypes['ConnectionPromiseLine'][] | null; // [ConnectionPromiseLine!]
  };
  ContentAsset: {
    // root type
    content: NexusGenRootTypes['ContentDetails'][]; // [ContentDetails!]!
  };
  ContentAssets: {
    // root type
    assets: NexusGenRootTypes['ContentAsset'][]; // [ContentAsset!]!
  };
  ContentDetails: {
    // root type
    assetType: NexusGenEnums['AssetType']; // AssetType!
    format: NexusGenEnums['ContentFormatType']; // ContentFormatType!
    linkName?: string | null; // String
    text?: string | null; // String
    type?: NexusGenEnums['ContentType'] | null; // ContentType
  };
  ContentJourneyDetails: {
    // root type
    key: string; // String!
    type: NexusGenEnums['ContentJourneyKeys']; // ContentJourneyKeys!
    url?: string | null; // String
    value?: string | null; // String
  };
  ContractTerm: {
    // root type
    description?: string | null; // String
    name?: string | null; // String
    unit: NexusGenEnums['ContractTermUnit']; // ContractTermUnit!
    value: number; // Int!
  };
  CreditCard: {
    // root type
    cardIssuer?: string | null; // String
    cardName?: string | null; // String
    ccId?: string | null; // String
    expiryMonth?: string | null; // String
    expiryYear?: string | null; // String
    lastFourDigits?: string | null; // String
  };
  CreditCardBillPaymentResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  CreditCardTopupResponse: {
    // root type
    availableBalance?: number | null; // Float
    code: number; // Int!
    message: string; // String!
    receiptNumber?: string | null; // String
    reservedBalance?: number | null; // Float
    success: boolean; // Boolean!
  };
  CtaOverrideDetail: {
    // root type
    data?: string | null; // String
    label?: string | null; // String
    relatesTo?: string | null; // String
    segment?: NexusGenEnums['SegmentType'] | null; // SegmentType
    sortOrder?: number | null; // Int
    style?: NexusGenEnums['StyleType'] | null; // StyleType
    type: string; // String!
  };
  CurrentBalance: {
    // root type
    due?: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    overdue?: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
  };
  DeleteAutoPayBillResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteAutoTopupResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteBundleResponse: {
    // root type
    cart: NexusGenRootTypes['Cart']; // Cart!
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteConnectionPromiseLineResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteItemFromBundleResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteUserPreferenceChannelResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DestinationCode: {
    // root type
    isoAlpha3: string; // String!
  };
  Destinations: {
    // root type
    destinationCode: NexusGenRootTypes['DestinationCode']; // DestinationCode!
    destinationName: string; // String!
    network?: string | null; // String
    rates: NexusGenRootTypes['Rate'][]; // [Rate!]!
    zone: string; // String!
  };
  DeviceGalleryFilter: {
    // root type
    filterId: string; // String!
    name: string; // String!
    options: NexusGenRootTypes['DeviceGalleryFilterOption'][]; // [DeviceGalleryFilterOption!]!
  };
  DeviceGalleryFilterOption: {
    // root type
    count: number; // Int!
    label: string; // String!
    optionId: string; // String!
  };
  DeviceGalleryProduct: {
    // root type
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    brand?: string | null; // String
    colors?: NexusGenRootTypes['Color'][] | null; // [Color!]
    description?: string | null; // String
    discountText?: string | null; // String
    effectivePrice?: number | null; // Float
    effectivePriceExcludingTax?: number | null; // Float
    groupId?: string | null; // String
    ifpId?: string | null; // String
    imageUrl?: string | null; // String
    isFeatured?: boolean | null; // Boolean
    launchDate?: string | null; // String
    name: string; // String!
    offerId: string; // String!
    planId?: string | null; // String
    priceType?: string | null; // String
    startPricePoint?: number | null; // Float
    tag?: string | null; // String
  };
  Discount: {
    // root type
    appliedValue: number; // Float!
    discountCategory: string; // String!
    discountedValue: number; // Float!
  };
  DisplaySurchargeResponse: {
    // root type
    surchargeValues: NexusGenRootTypes['CardDisplaySurchargeResponse'][]; // [CardDisplaySurchargeResponse!]!
  };
  EligibleLine: {
    // root type
    accountNumber: string; // String!
    lineNumber: string; // String!
    offerId: string; // String!
    offerName: string; // String!
  };
  Entitlement: {
    // root type
    contentKey?: string | null; // String
    iconUrl?: string | null; // String
    longDescription?: string | null; // String
    name: string; // String!
    quantity?: string | null; // String
    shortDescription?: string | null; // String
    sortOrder?: number | null; // Int
    type?: string | null; // String
  };
  ExtrasDetail: {
    // root type
    category?: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    contentKey?: string | null; // String
    description?: string | null; // String
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    id: string; // String!
    name: string; // String!
    price?: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics?: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    supportedDestinations?: string[] | null; // [String!]
  };
  ExtrasResponse: {
    // root type
    extrasCategories?: NexusGenRootTypes['extrasCategory'][] | null; // [extrasCategory!]
    notifications?: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
  };
  FieldRule: {
    // root type
    expression: string; // String!
    message?: string | null; // String
  };
  FooterContentResponse: {
    // root type
    footerLegalLinks: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
    footerLinkMenu: NexusGenRootTypes['FooterMenuItem'][]; // [FooterMenuItem!]!
    footerSocialMediaLinks: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
  };
  FooterLinkItem: {
    // root type
    iconName?: string | null; // String
    id: string; // String!
    label: string; // String!
    url: string; // String!
  };
  FooterMenuItem: {
    // root type
    heading: string; // String!
    id: string; // String!
    items: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
    url: string; // String!
  };
  GalleryProductResponse: {
    // root type
    filters: NexusGenRootTypes['DeviceGalleryFilter'][]; // [DeviceGalleryFilter!]!
    products: NexusGenRootTypes['DeviceGalleryProduct'][]; // [DeviceGalleryProduct!]!
    subcategories: NexusGenRootTypes['Subcategory'][]; // [Subcategory!]!
    subcategoryId: string; // String!
  };
  Group: {
    // root type
    description?: string | null; // String
    groupId?: string | null; // String
    groupImages?: NexusGenRootTypes['Image'][] | null; // [Image!]
    id: string; // String!
    images?: NexusGenRootTypes['Image'][] | null; // [Image!]
    isDefault?: boolean | null; // Boolean
    name: string; // String!
    sortOrder?: number | null; // Int
  };
  HeaderContent: {
    // root type
    businessCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    businessCategoriesDesktop: NexusGenRootTypes['Category'][]; // [Category!]!
    personalCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    personalCategoriesDesktop: NexusGenRootTypes['Category'][]; // [Category!]!
  };
  IfpOfferDetail: {
    // root type
    description?: string | null; // String
    id: string; // String!
    name: string; // String!
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  Image: {
    // root type
    defaultUrl?: string | null; // String
    description?: string | null; // String
    id?: string | null; // String
    imageId?: string | null; // String
    sortOrder?: number | null; // Int
    standardUrl?: string | null; // String
    thumbnailUrl?: string | null; // String
    tinyUrl?: string | null; // String
    type?: NexusGenEnums['ImageType'] | null; // ImageType
    zoomUrl?: string | null; // String
  };
  InitiateCheckoutResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  Item: {
    // root type
    action?: NexusGenEnums['CartItemAction'] | null; // CartItemAction
    balanceManagement?: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    basePrice?: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    billingFrequency?: NexusGenEnums['BillingFrequency'] | null; // BillingFrequency
    categories: string[]; // [String!]!
    contractTerm?: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    dealText: string; // String!
    description?: string | null; // String
    discountPrice?: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    effectivePrice?: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    frequencyPeriod?: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
    frequencyType?: NexusGenEnums['FrequencyType'] | null; // FrequencyType
    frequencyValue?: number | null; // Int
    imageUrl?: string | null; // String
    isIncluded?: boolean | null; // Boolean
    itemId: string; // String!
    offerId: string; // String!
    productOfferingId: string; // String!
    quantity: number; // Int!
    removable?: boolean | null; // Boolean
    shouldHide?: boolean | null; // Boolean
    title: string; // String!
  };
  KeyFloatValuePair: {
    // root type
    key: string; // String!
    value: number; // Float!
  };
  KeyIntegerValuePair: {
    // root type
    key: string; // String!
    value: number; // Int!
  };
  KeyStingValuePair: {
    // root type
    key: string; // String!
    value: string; // String!
  };
  LabelFloatValuePair: {
    // root type
    label: string; // String!
    value: number; // Float!
  };
  LabelIntegerValuePair: {
    // root type
    label: string; // String!
    value: number; // Int!
  };
  LabelStringValuePair: {
    // root type
    label: string; // String!
    value: string; // String!
  };
  LastBill: {
    // root type
    billDate?: string | null; // String
  };
  LastPayment: {
    // root type
    paymentAmount?: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    paymentDate?: string | null; // String
  };
  Line: {
    // root type
    lineNumber: string; // String!
  };
  LineAllowanceCountry: {
    // root type
    code: string; // String!
    name: string; // String!
    network?: string | null; // String
  };
  LineAllowanceDataStackAllowance: {
    // root type
    capLimit: number; // Float!
    endDateTime: string; // String!
    id: string; // String!
    remainingVolume: number; // Float!
    startDateTime: string; // String!
    status: NexusGenEnums['LineAllowanceEntitlementStatus']; // LineAllowanceEntitlementStatus!
    usedVolume?: number | null; // Float
    volumeType: NexusGenEnums['LineAllowanceVolumeType']; // LineAllowanceVolumeType!
  };
  LineAllowanceRolloverDetails: {
    // root type
    rolloverAllowances?:
      | NexusGenRootTypes['LineAllowanceRolloverDetailsRolloverAllowance'][]
      | null; // [LineAllowanceRolloverDetailsRolloverAllowance!]
  };
  LineAllowanceRolloverDetailsRolloverAllowance: {
    // root type
    remainingAmount: number; // Float!
    remainingUnit: string; // String!
    rolloverExpiry?:
      | NexusGenRootTypes['LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry'][]
      | null; // [LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry!]
    rolloverPriority?: number | null; // Int
    rolloverStatus?: string | null; // String
    rolloverType?: string | null; // String
    usageType: string; // String!
  };
  LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry: {
    // root type
    expiryAmount: number; // Float!
    expiryAmountUnit: string; // String!
    expiryDate: string; // String!
  };
  LineAllowanceSharePlanDetails: {
    // root type
    groupId?: string | null; // String
    lines?: NexusGenRootTypes['LineAllowanceSharePlanLineDetails'][] | null; // [LineAllowanceSharePlanLineDetails!]
    type?:
      | NexusGenEnums['LineAllowanceSharePlanLineDetailSharePlanType']
      | null; // LineAllowanceSharePlanLineDetailSharePlanType
  };
  LineAllowanceSharePlanLineDetails: {
    // root type
    lineNumber: string; // String!
    planName?: string | null; // String
    serviceId: string; // String!
    sharerType?:
      | NexusGenEnums['LineAllowanceSharePlanLineDetailSharerType']
      | null; // LineAllowanceSharePlanLineDetailSharerType
    type: NexusGenEnums['LineAllowanceSharePlanLineDetailSharePlanType']; // LineAllowanceSharePlanLineDetailSharePlanType!
  };
  LineAllowanceSpeedAllowancesDetails: {
    // root type
    allowanceRemainingAmount?: number | null; // Float
    allowanceRemainingUnit?: string | null; // String
    allowanceType?: string | null; // String
    capLimit?: number | null; // Float
    expiryDateTime?: string | null; // String
    offerId?: string | null; // String
    productName?: string | null; // String
    status: NexusGenEnums['LineAllowanceSpeedAllowancesDetailStatus']; // LineAllowanceSpeedAllowancesDetailStatus!
    unitType?: string | null; // String
  };
  LineAllowancesExtraDetails: {
    // root type
    allowedCount?: number | null; // Int
    availableCount?: number | null; // Int
    billingFrequencyCode?: string | null; // String
    billingFrequencyName?: string | null; // String
    contractRenewalType?: string | null; // String
    contractTermFrequency?: string | null; // String
    contractTermNumber?: number | null; // Int
    countries?: NexusGenRootTypes['LineAllowanceCountry'][] | null; // [LineAllowanceCountry!]
    displayPriority?: number | null; // Int
    entitlements?: NexusGenRootTypes['LineEntitlementDetails'][] | null; // [LineEntitlementDetails!]
    offerId: string; // String!
    periodEndDate?: string | null; // String
    prepaidBasePlanValuePack: boolean; // Boolean!
    price?: number | null; // Float
    priceType?: string | null; // String
    productId: string; // String!
    productInstanceId: string; // String!
    productName: string; // String!
    renewable?: boolean | null; // Boolean
    renewalFrequency?: string | null; // String
    renewalState?: NexusGenEnums['LineAllowanceExtraDetailRenewalState'] | null; // LineAllowanceExtraDetailRenewalState
    status: string; // String!
    subscriptionTermName?: string | null; // String
    subtype: NexusGenEnums['LineAllowanceExtraDetailSubtype']; // LineAllowanceExtraDetailSubtype!
    type: string; // String!
    usageType?: string | null; // String
  };
  LineAllowancesType: {
    // root type
    dataStackAllowances?:
      | NexusGenRootTypes['LineAllowanceDataStackAllowance'][]
      | null; // [LineAllowanceDataStackAllowance!]
    entitlements?: NexusGenRootTypes['LineEntitlementDetails'][] | null; // [LineEntitlementDetails!]
    extras?: NexusGenRootTypes['LineAllowancesExtraDetails'][] | null; // [LineAllowancesExtraDetails!]
    rolloverDetails?: NexusGenRootTypes['LineAllowanceRolloverDetails'] | null; // LineAllowanceRolloverDetails
    sharePlanDetails?:
      | NexusGenRootTypes['LineAllowanceSharePlanDetails']
      | null; // LineAllowanceSharePlanDetails
    speedAllowances?:
      | NexusGenRootTypes['LineAllowanceSpeedAllowancesDetails']
      | null; // LineAllowanceSpeedAllowancesDetails
  };
  LineDetails: {
    // root type
    autoTopupDetails?: NexusGenRootTypes['AutoTopupDetails'] | null; // AutoTopupDetails
  };
  LineEntitlementDetails: {
    // root type
    description?: string | null; // String
    detailedDescription?: string | null; // String
    displayPriority?: number | null; // Int
    entitlementQuantityUnit?:
      | NexusGenEnums['LineEntitlementQuantityUnit']
      | null; // LineEntitlementQuantityUnit
    id: string; // String!
    name: string; // String!
    quantity?: number | null; // Float
    subtype?: string | null; // String
    throttleMessage?: string | null; // String
    unlimited: boolean; // Boolean!
    usageType: string; // String!
  };
  LineNumberReservation: {
    // root type
    lineNumber: string; // String!
    reservationId: string; // String!
  };
  LinePlan: {
    // root type
    balanceManagement: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    contractEndDate?: string | null; // String
    customerSegment: NexusGenEnums['CustomerSegment']; // CustomerSegment!
    legalCategory?: string | null; // String
    lineOfBusiness: string; // String!
    offerId?: string | null; // String
    planType: string; // String!
    price: number; // Float!
    productId: string; // String!
    productName: string; // String!
    showPricesIncludingGST: boolean; // Boolean!
  };
  LineResource: {
    // root type
    isLineAccessAllowed: boolean; // Boolean!
    lineType?: NexusGenEnums['LineType'] | null; // LineType
  };
  LineShareGroupCapMember: {
    // root type
    capValue?: string | null; // String
    isUncapped: boolean; // Boolean!
    serviceId: string; // String!
    status: string; // String!
    type: NexusGenEnums['LineShareGroupCapMemberType']; // LineShareGroupCapMemberType!
    unit?: NexusGenEnums['LineShareGroupCapMemberUnit'] | null; // LineShareGroupCapMemberUnit
    usedValue?: string | null; // String
  };
  LineShareGroupCaps: {
    // root type
    id: string; // String!
    members: NexusGenRootTypes['LineShareGroupCapMember'][]; // [LineShareGroupCapMember!]!
    name: string; // String!
    totalData: NexusGenRootTypes['LineShareTotalData']; // LineShareTotalData!
  };
  LineShareTotalData: {
    // root type
    unit: NexusGenEnums['LineShareGroupCapMemberUnit']; // LineShareGroupCapMemberUnit!
    value: number; // Float!
  };
  LineSpendHistoryContributingProduct: {
    // root type
    chargeEndDateTime?: string | null; // String
    chargeStartDateTime: string; // String!
    offerId?: string | null; // String
    periodSpend: number; // Float!
    productEndDateTime?: string | null; // String
    productName: string; // String!
  };
  LineSpendHistoryDetailResponse: {
    // root type
    breakdownType: NexusGenEnums['LineSpendHistoryBreakdownType']; // LineSpendHistoryBreakdownType!
    contributingProducts: NexusGenRootTypes['LineSpendHistoryContributingProduct'][]; // [LineSpendHistoryContributingProduct!]!
    endDateTime: string; // String!
    gstInclusive: boolean; // Boolean!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    periodSpend: number; // Float!
    startDateTime: string; // String!
    unbilled: boolean; // Boolean!
  };
  LineSpendHistoryPeriodBreakdownDetail: {
    // root type
    breakdownType: NexusGenEnums['LineSpendHistoryBreakdownType']; // LineSpendHistoryBreakdownType!
    periodBreakdownId?: string | null; // String
    periodSpend: number; // Float!
  };
  LineSpendHistoryResponse: {
    // root type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    averagePeriodSpend: number; // Float!
    endDateTime: string; // String!
    gstInclusive: boolean; // Boolean!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    startDateTime: string; // String!
    summarisedPeriods: NexusGenRootTypes['LineSpendHistorySummarisedPeriodSpend'][]; // [LineSpendHistorySummarisedPeriodSpend!]!
  };
  LineSpendHistorySummarisedPeriodSpend: {
    // root type
    endDateTime: string; // String!
    periodBreakdown: NexusGenRootTypes['LineSpendHistoryPeriodBreakdownDetail'][]; // [LineSpendHistoryPeriodBreakdownDetail!]!
    periodSpend: number; // Float!
    startDateTime: string; // String!
    unbilled: boolean; // Boolean!
  };
  LineSubscription: {
    // root type
    accountNumber: string; // String!
    assetStartDate: string; // String!
    autoRenew?: NexusGenEnums['LineSubscriptionAutoRenew'] | null; // LineSubscriptionAutoRenew
    bundleOffer?: NexusGenRootTypes['LineSubscriptionBundleOffer'] | null; // LineSubscriptionBundleOffer
    ctas?: NexusGenRootTypes['SubscriptionCta'][] | null; // [SubscriptionCta!]
    lineNumber: string; // String!
    lockTtl?: number | null; // Int
    nextRenewalDate?: string | null; // String
    offer: NexusGenRootTypes['LineSubscriptionOffer']; // LineSubscriptionOffer!
    status: NexusGenRootTypes['SubscriptionStatus']; // SubscriptionStatus!
    subscriptionEndDate?: string | null; // String
    username?: string | null; // String
  };
  LineSubscriptionActivation: {
    // root type
    activationUrl: string; // String!
    lockTtl?: number | null; // Int
  };
  LineSubscriptionBundleOffer: {
    // root type
    bundleOfferId: string; // String!
    name?: string | null; // String
    productInstanceId: string; // String!
  };
  LineSubscriptionOffer: {
    // root type
    name: string; // String!
    offerId: string; // String!
    productInstanceId: string; // String!
  };
  LineSubscriptions: {
    // root type
    accountNumber: string; // String!
    assetStartDate: string; // String!
    bundleOffer?: NexusGenRootTypes['LineSubscriptionsBundleOffer'] | null; // LineSubscriptionsBundleOffer
    lineNumber: string; // String!
    offer: NexusGenRootTypes['LineSubscriptionsOffer']; // LineSubscriptionsOffer!
    status: NexusGenRootTypes['LineSubscriptionsStatus']; // LineSubscriptionsStatus!
  };
  LineSubscriptionsBundleOffer: {
    // root type
    bundleOfferId: string; // String!
    name?: string | null; // String
    productInstanceId: string; // String!
  };
  LineSubscriptionsOffer: {
    // root type
    name: string; // String!
    offerId: string; // String!
    productInstanceId: string; // String!
  };
  LineSubscriptionsStatus: {
    // root type
    label?: string | null; // String
    type: NexusGenEnums['LineSubscriptionStatus']; // LineSubscriptionStatus!
  };
  LineSummary: {
    // root type
    accountNumber: string; // String!
    balanceManagement: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    lineNumber: string; // String!
    offerId: string; // String!
    offerName: string; // String!
    packageId?: string | null; // String
    parentLine?: string | null; // String
    planType?: string | null; // String
    secondaryLineNumbers: string[]; // [String!]!
    status: string; // String!
    type?: NexusGenEnums['LineType'] | null; // LineType
  };
  LineUsage: {
    // root type
    billingStatus?: NexusGenEnums['LineUsageBillingStatus'] | null; // LineUsageBillingStatus
    cap?: NexusGenRootTypes['LineUsageCap'] | null; // LineUsageCap
    category: NexusGenEnums['LineUsageCategory']; // LineUsageCategory!
    expiry?: NexusGenRootTypes['LineUsageExpiry'][] | null; // [LineUsageExpiry!]
    name?: string | null; // String
    nextRenewalDate?: string | null; // String
    priority?: number | null; // Int
    productId?: string | null; // String
    productName?: string | null; // String
    remaining?: NexusGenRootTypes['LineUsageCap'] | null; // LineUsageCap
    renewal?: NexusGenEnums['LineUsageRenewal'] | null; // LineUsageRenewal
    roaming?: boolean | null; // Boolean
    rolloverData?: NexusGenRootTypes['LineUsageExpiry'] | null; // LineUsageExpiry
    rolloverExpiry?: NexusGenRootTypes['LineUsageExpiry'][] | null; // [LineUsageExpiry!]
    types: string[]; // [String!]!
    uncapped: boolean; // Boolean!
    used: NexusGenRootTypes['LineUsageUsed']; // LineUsageUsed!
  };
  LineUsageCap: {
    // root type
    unit: NexusGenEnums['LineUsageCapUnit']; // LineUsageCapUnit!
    value: number; // Float!
  };
  LineUsageExpiry: {
    // root type
    date: string; // String!
    unit?: NexusGenEnums['LineUsageCapUnit'] | null; // LineUsageCapUnit
    value?: number | null; // Float
  };
  LineUsageHistory: {
    // root type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    averageGroupPeriodUsage?:
      | NexusGenRootTypes['LineUsageHistoryPeriodUsage']
      | null; // LineUsageHistoryPeriodUsage
    averagePeriodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
    endDateTime: string; // String!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    sharerType: NexusGenEnums['LineUsageHistorySharerType']; // LineUsageHistorySharerType!
    startDateTime: string; // String!
    summarisedPeriods: NexusGenRootTypes['LineUsageHistorySummaryPeriod'][]; // [LineUsageHistorySummaryPeriod!]!
  };
  LineUsageHistoryDetail: {
    // root type
    breakdownType: NexusGenEnums['LineUsageHistoryPeriodBreakdownType']; // LineUsageHistoryPeriodBreakdownType!
    contributingProducts: NexusGenRootTypes['LineUsageHistoryDetailContributingProducts'][]; // [LineUsageHistoryDetailContributingProducts!]!
    endDateTime: string; // String!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    periodGroupUsage?:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']
      | null; // LineUsageHistoryDetailPeriodUsage
    periodUsage: NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']; // LineUsageHistoryDetailPeriodUsage!
    startDateTime: string; // String!
    unbilled?: boolean | null; // Boolean
  };
  LineUsageHistoryDetailContributingProducts: {
    // root type
    acquisitionDate: string; // String!
    offerId?: string | null; // String
    periodGroupLimit?:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodLimit']
      | null; // LineUsageHistoryDetailPeriodLimit
    periodGroupRemaining?:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodRemaining']
      | null; // LineUsageHistoryDetailPeriodRemaining
    periodGroupUsage?:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']
      | null; // LineUsageHistoryDetailPeriodUsage
    periodLimit?: NexusGenRootTypes['LineUsageHistoryDetailPeriodLimit'] | null; // LineUsageHistoryDetailPeriodLimit
    periodRemaining?:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodRemaining']
      | null; // LineUsageHistoryDetailPeriodRemaining
    periodUsage: NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']; // LineUsageHistoryDetailPeriodUsage!
    productName: string; // String!
  };
  LineUsageHistoryDetailPeriodLimit: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryDetailPeriodRemaining: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryDetailPeriodUsage: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodBreakdown: {
    // root type
    breakdownType: NexusGenEnums['LineUsageHistoryPeriodBreakdownType']; // LineUsageHistoryPeriodBreakdownType!
    periodBreakdownId?: string | null; // String
    periodGroupLimit?: NexusGenRootTypes['LineUsageHistoryPeriodLimit'] | null; // LineUsageHistoryPeriodLimit
    periodGroupRemaining?:
      | NexusGenRootTypes['LineUsageHistoryPeriodRemaining']
      | null; // LineUsageHistoryPeriodRemaining
    periodGroupUsage?: NexusGenRootTypes['LineUsageHistoryPeriodUsage'] | null; // LineUsageHistoryPeriodUsage
    periodLimit?: NexusGenRootTypes['LineUsageHistoryPeriodLimit'] | null; // LineUsageHistoryPeriodLimit
    periodRemaining?:
      | NexusGenRootTypes['LineUsageHistoryPeriodRemaining']
      | null; // LineUsageHistoryPeriodRemaining
    periodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
  };
  LineUsageHistoryPeriodLimit: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodRemaining: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodUsage: {
    // root type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistorySummaryPeriod: {
    // root type
    endDateTime: string; // String!
    periodBreakdown?:
      | NexusGenRootTypes['LineUsageHistoryPeriodBreakdown'][]
      | null; // [LineUsageHistoryPeriodBreakdown!]
    periodGroupUsage?: NexusGenRootTypes['LineUsageHistoryPeriodUsage'] | null; // LineUsageHistoryPeriodUsage
    periodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
    startDateTime: string; // String!
    unbilled?: boolean | null; // Boolean
  };
  LineUsageSummary: {
    // root type
    displayName?: string | null; // String
    groupProfile?: string | null; // String
    lineNumber: string; // String!
    messagePrimary?: string | null; // String
    messageSecondary?: string | null; // String
    messageStatus?: NexusGenEnums['LineUsageMessageStatus'] | null; // LineUsageMessageStatus
    messageTertiary?: string | null; // String
    productIcon?: NexusGenEnums['ProductIconType'] | null; // ProductIconType
    topUpBuyExtra?: NexusGenEnums['TopUpBuyExtraType'] | null; // TopUpBuyExtraType
  };
  LineUsageTransactions: {
    // root type
    transactions: NexusGenRootTypes['UsageTransactions'][]; // [UsageTransactions!]!
  };
  LineUsageUsed: {
    // root type
    bySharer?: number | null; // Float
    unit: NexusGenEnums['LineUsageCapUnit']; // LineUsageCapUnit!
    value: number; // Float!
  };
  Location: {
    // root type
    address: NexusGenRootTypes['AddressResponse']; // AddressResponse!
  };
  MobileType: {
    // root type
    isValidMobile: boolean; // Boolean!
  };
  MonthlyPaymentSetup: {
    // root type
    accountDetails?: NexusGenRootTypes['AccountDetails'] | null; // AccountDetails
    creditCard?: NexusGenRootTypes['CreditCard'] | null; // CreditCard
    description?: string | null; // String
    status?: string | null; // String
    type?: NexusGenEnums['MonthlyPaymentSetupType'] | null; // MonthlyPaymentSetupType
    upcomingPayment?: NexusGenRootTypes['UpcomingPayment'] | null; // UpcomingPayment
  };
  MpdPromotionsBundle: {
    // root type
    id: string; // String!
    items: NexusGenRootTypes['MpdPromotionsBundleItem'][]; // [MpdPromotionsBundleItem!]!
  };
  MpdPromotionsBundleItem: {
    // root type
    id: string; // String!
    price: NexusGenRootTypes['MpdPromotionsPrice'][]; // [MpdPromotionsPrice!]!
    productOfferingId: string; // String!
  };
  MpdPromotionsPrice: {
    // root type
    basePrice: number; // Float!
    discount?: NexusGenRootTypes['Discount'] | null; // Discount
    effectivePrice: number; // Float!
  };
  MpdPromotionsResponse: {
    // root type
    bundles: NexusGenRootTypes['MpdPromotionsBundle'][]; // [MpdPromotionsBundle!]!
    price: NexusGenRootTypes['MpdPromotionsPrice'][]; // [MpdPromotionsPrice!]!
  };
  Mutation: {};
  NewCardBillPaymentResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  NextBill: {
    // root type
    billDate?: string | null; // String
  };
  NotificationPreference: {
    // root type
    channels: NexusGenRootTypes['PreferenceChannel'][]; // [PreferenceChannel!]!
    entityID: string; // String!
    id: string; // ID!
    line?: string | null; // String
  };
  Notifications: {
    // root type
    recommendationId: string; // String!
    text: string; // String!
    title?: string | null; // String
    type: NexusGenEnums['NotificationType']; // NotificationType!
  };
  OfferDetailCategory: {
    // root type
    categoryId?: string | null; // String
    id: string; // String!
  };
  OperatingHours: {
    // root type
    close?: string | null; // String
    day: string; // String!
    open?: string | null; // String
  };
  OperationTypeCtaDetails: {
    // root type
    code?: NexusGenEnums['CtaCode'] | null; // CtaCode
    label: string; // String!
  };
  OrderFeasibility: {
    // root type
    feasibilityReason: NexusGenEnums['FeasibilityReason']; // FeasibilityReason!
    orderFeasible: boolean; // Boolean!
  };
  Parent: {
    // root type
    key: string; // String!
    name: string; // String!
    value: string; // String!
  };
  PaymentAmount: {
    // root type
    amount?: number | null; // Float
    crDr?: NexusGenEnums['CreditDebitMarker'] | null; // CreditDebitMarker
  };
  PaymentMethod: {
    // root type
    associations?: NexusGenRootTypes['PaymentMethodAssociation'][] | null; // [PaymentMethodAssociation!]
    bankAccountDetail?: NexusGenRootTypes['BankAccountDetail'] | null; // BankAccountDetail
    cardDetail?: NexusGenRootTypes['CardDetail'] | null; // CardDetail
    isPreferred: boolean; // Boolean!
    paymentMethodId: string; // String!
    personalisedName?: string | null; // String
    source?: NexusGenEnums['PaymentMethodSource'] | null; // PaymentMethodSource
    type: NexusGenEnums['PaymentMethodType']; // PaymentMethodType!
  };
  PaymentMethodAssociation: {
    // root type
    accessType: NexusGenEnums['PaymentMethodAccessType']; // PaymentMethodAccessType!
    accountNumber?: string | null; // String
    lineNumber?: string | null; // String
    paymentMethodId: string; // String!
    type: NexusGenEnums['PaymentMethodAssociationType']; // PaymentMethodAssociationType!
  };
  PlanOfferDetail: {
    // root type
    category?: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    description?: string | null; // String
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    id: string; // String!
    images?: NexusGenRootTypes['Image'][] | null; // [Image!]
    name: string; // String!
    price?: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics?: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  PlanProductOffers: {
    // root type
    notifications?: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  PlansMpdComparisonBundle: {
    // root type
    id: string; // String!
    items: NexusGenRootTypes['PlansMpdComparisonItem'][]; // [PlansMpdComparisonItem!]!
    lineNumber?: string | null; // String
  };
  PlansMpdComparisonDiscount: {
    // root type
    appliedValue?: number | null; // Float
    discountType?: string | null; // String
  };
  PlansMpdComparisonExistingPlan: {
    // root type
    currentPrice: NexusGenRootTypes['PlansMpdComparisonPrice']; // PlansMpdComparisonPrice!
    name: string; // String!
    productOfferingId: string; // String!
    updatedPrice: NexusGenRootTypes['PlansMpdComparisonPrice']; // PlansMpdComparisonPrice!
  };
  PlansMpdComparisonItem: {
    // root type
    action: string; // String!
    name: string; // String!
    price?: NexusGenRootTypes['PlansMpdComparisonPrice'] | null; // PlansMpdComparisonPrice
    productOfferingId: string; // String!
  };
  PlansMpdComparisonPrice: {
    // root type
    basePrice: number; // Float!
    discount?: NexusGenRootTypes['PlansMpdComparisonDiscount'] | null; // PlansMpdComparisonDiscount
    effectivePrice: number; // Float!
    period: string; // String!
    priceType: string; // String!
  };
  PlansMpdComparisonResponse: {
    // root type
    bundles?: NexusGenRootTypes['PlansMpdComparisonBundle'][] | null; // [PlansMpdComparisonBundle!]
    cartId: string; // String!
    discountChanged: boolean; // Boolean!
    existingPlans?:
      | NexusGenRootTypes['PlansMpdComparisonExistingPlan'][]
      | null; // [PlansMpdComparisonExistingPlan!]
  };
  PointOfInterestContact: {
    // root type
    name?: string | null; // String
    role?: string | null; // String
  };
  PointOfInterestOperatingHours: {
    // root type
    close?: string | null; // String
    day: NexusGenEnums['PointOfInterestDayOfWeek']; // PointOfInterestDayOfWeek!
    open?: string | null; // String
  };
  PointsOfInterestOutage: {
    // root type
    category: string; // String!
    description?: string | null; // String
    displayName: string; // String!
    endDateTime?: string | null; // String
    latitude: number; // Float!
    longitude: number; // Float!
    outageType: NexusGenEnums['PointsOfInterestOutageType']; // PointsOfInterestOutageType!
    serviceAffected: NexusGenEnums['ServicesAffectedByOutageType']; // ServicesAffectedByOutageType!
    startDateTime?: string | null; // String
    status?: NexusGenEnums['OutageStatus'] | null; // OutageStatus
  };
  PointsOfInterestResponse: {
    // root type
    addressLine1?: string | null; // String
    addressLine2?: string | null; // String
    city?: string | null; // String
    contacts?: NexusGenRootTypes['PointOfInterestContact'][] | null; // [PointOfInterestContact!]
    directions?: string | null; // String
    displayName: string; // String!
    distanceFromLocation?: number | null; // Float
    emailAddress?: string | null; // String
    featured: boolean; // Boolean!
    image?: string | null; // String
    isRecyclingOffered: boolean; // Boolean!
    isStore: boolean; // Boolean!
    isWifiAvailable: boolean; // Boolean!
    latitude: number; // Float!
    longitude: number; // Float!
    operatingHours?:
      | NexusGenRootTypes['PointOfInterestOperatingHours'][]
      | null; // [PointOfInterestOperatingHours!]
    phoneNumber?: string | null; // String
    suburb?: string | null; // String
  };
  PoliPayBillResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    poliPayResponse?: NexusGenRootTypes['RestOfPoliPayBillResponse'] | null; // RestOfPoliPayBillResponse
    success: boolean; // Boolean!
  };
  PreferenceChannel: {
    // root type
    entityID: string; // String!
    id: string; // ID!
    isActive?: boolean | null; // Boolean
    status?: string | null; // String
    type?: NexusGenEnums['ChannelType'] | null; // ChannelType
    value?: string | null; // String
  };
  PreferenceTopic: {
    // root type
    description?: string | null; // String
    entityID: string; // String!
    group: string; // String!
    name: string; // String!
  };
  PrepaidBalance: {
    // root type
    balance: number; // Float!
    balanceExpiryDate?: string | null; // String
    detailMessage?: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
    lastTopUpAmount?: number | null; // Float
    lastTopUpDate?: string | null; // String
    lineNumber: string; // String!
    retrievalDate?: string | null; // String
    summaryMessage?: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
  };
  Price: {
    // root type
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    description?: string | null; // String
    effectivePrice?: number | null; // Float
    effectivePriceExcludingTax?: number | null; // Float
    frequency?: NexusGenRootTypes['PriceFrequency'] | null; // PriceFrequency
    length?: number | null; // Int
    priceType: string; // String!
    taxPercentage?: string | null; // String
  };
  PriceFrequency: {
    // root type
    period: NexusGenEnums['FrequencyPeriod']; // FrequencyPeriod!
    value: number; // Int!
  };
  PrimaryCategory: {
    // root type
    id: string; // String!
    name: string; // String!
  };
  ProductCharacteristic: {
    // root type
    addedInCart?: boolean | null; // Boolean
    balanceManagement?: NexusGenEnums['ProductBalanaceManagementType'] | null; // ProductBalanaceManagementType
    basePlanOfferId?: string | null; // String
    entitledEntity?: NexusGenEnums['EntitledEntityType'] | null; // EntitledEntityType
    isDeferrable?: boolean | null; // Boolean
    isFeatured?: boolean | null; // Boolean
    isIncluded?: boolean | null; // Boolean
    isShippable?: boolean | null; // Boolean
    partnerId?: string | null; // String
    soldSeparately?: boolean | null; // Boolean
  };
  ProductDetailsPlan: {
    // root type
    contractTerm?: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    ctaOverrides?: NexusGenRootTypes['CtaOverrideDetail'][] | null; // [CtaOverrideDetail!]
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    group?: NexusGenRootTypes['Group'] | null; // Group
    planCategories?: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    planDetails: NexusGenRootTypes['ProductDetailsPlanDetail']; // ProductDetailsPlanDetail!
    planImages?: NexusGenRootTypes['Image'][] | null; // [Image!]
    price: NexusGenRootTypes['ProductDetailsPlanPrice']; // ProductDetailsPlanPrice!
    productCharacteristics?: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productSpecification?: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  ProductDetailsPlanDetail: {
    // root type
    categoryIdentifiers?: string[] | null; // [String!]
    contentKey?: string | null; // String
    description?: string | null; // String
    externalId?: string | null; // String
    planId: string; // String!
    planName: string; // String!
    productType?: string | null; // String
  };
  ProductDetailsPlanPrice: {
    // root type
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    discountDiscription?: string | null; // String
    discountPrice?: string | null; // String
    priceFrequency?: number | null; // Float
    pricePeriod?: string | null; // String
    priceType: string; // String!
  };
  ProductDetailsResponse: {
    // root type
    code: number; // Int!
    description?: string | null; // String
    id: string; // String!
    isCategoryContainer: boolean; // Boolean!
    message: string; // String!
    name: string; // String!
    plans: NexusGenRootTypes['ProductDetailsPlan'][]; // [ProductDetailsPlan!]!
    subCategories?: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    success: boolean; // Boolean!
  };
  ProductDetailsSubCategory: {
    // root type
    defaultSelected?: boolean | null; // Boolean
    id: string; // String!
    name: string; // String!
    sortOrder?: number | null; // Int
    subCategories?: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    visibility?: boolean | null; // Boolean
  };
  ProductFeature: {
    // root type
    band?: string | null; // String
    brand?: string | null; // String
    color?: string | null; // String
    colorHex?: string | null; // String
    primaryColor?: string | null; // String
    storage?: string | null; // String
  };
  ProductOfferDetailsResponse: {
    // root type
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  ProductOfferImage: {
    // root type
    offerId: string; // String!
    url?: string | null; // String
  };
  ProductSpecification: {
    // root type
    name: string; // String!
    sortOrder?: number | null; // Int
    values: NexusGenRootTypes['ProductSpecificationValue'][]; // [ProductSpecificationValue!]!
  };
  ProductSpecificationGroup: {
    // root type
    group: string; // String!
    specifications: NexusGenRootTypes['ProductVariantSpecification'][]; // [ProductVariantSpecification!]!
  };
  ProductVariantAssociatedPriceRule: {
    // root type
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    description: string; // String!
    effectivePrice?: number | null; // Float
    effectivePriceExcludingTax?: number | null; // Float
    priceFrequencyPeriod?: string | null; // String
    priceFrequencyValue?: number | null; // Int
    priceLength?: number | null; // Int
    pricePointID: string; // String!
    priceType: string; // String!
    ruleType: string; // String!
    sources: NexusGenRootTypes['ProductVariantOfferDetail'][]; // [ProductVariantOfferDetail!]!
  };
  ProductVariantAssociatedPrices: {
    // root type
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    effectivePrice?: number | null; // Float
    effectivePriceExcludingTax?: number | null; // Float
    priceFrequencyPeriod?: string | null; // String
    priceFrequencyValue?: number | null; // Int
    priceLength?: number | null; // Int
    priceType: string; // String!
  };
  ProductVariantOfferDetail: {
    // root type
    associatedPriceRules?:
      | NexusGenRootTypes['ProductVariantAssociatedPriceRule'][]
      | null; // [ProductVariantAssociatedPriceRule!]
    associatedPrices?:
      | NexusGenRootTypes['ProductVariantAssociatedPrices'][]
      | null; // [ProductVariantAssociatedPrices!]
    basePrice?: number | null; // Float
    basePriceExcludingTax?: number | null; // Float
    brand?: string | null; // String
    color?: string | null; // String
    colorHex?: string | null; // String
    description: string; // String!
    effectivePrice?: number | null; // Float
    effectivePriceExcludingTax?: number | null; // Float
    entitlements?: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId?: string | null; // String
    groupDescription?: string | null; // String
    groupId?: string | null; // String
    groupName?: string | null; // String
    id: string; // String!
    images?: NexusGenRootTypes['Image'][] | null; // [Image!]
    isDefault?: boolean | null; // Boolean
    isDeferrable?: boolean | null; // Boolean
    isEligibilityCheckRequired?: boolean | null; // Boolean
    isShippable?: boolean | null; // Boolean
    name: string; // String!
    priceFrequencyPeriod?: string | null; // String
    priceFrequencyValue?: number | null; // Int
    priceLength?: number | null; // Int
    priceType?: string | null; // String
    primaryCategory?: NexusGenRootTypes['PrimaryCategory'] | null; // PrimaryCategory
    productSpecificationGroups?:
      | NexusGenRootTypes['ProductSpecificationGroup'][]
      | null; // [ProductSpecificationGroup!]
    promotions?: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    soldSeparately?: boolean | null; // Boolean
    stock?: NexusGenRootTypes['Stock'] | null; // Stock
    storage?: string | null; // String
  };
  ProductVariantSpecification: {
    // root type
    group?: string | null; // String
    name: string; // String!
    sortOrder?: number | null; // Int
    value: string; // String!
  };
  ProductVariantsResponse: {
    // root type
    offerDetails: NexusGenRootTypes['ProductVariantOfferDetail'][]; // [ProductVariantOfferDetail!]!
  };
  ProfileInfo: {
    // root type
    businessName?: string | null; // String
    csrTNumber?: string | null; // String
    displayName: string; // String!
    email: string; // String!
    firstName?: string | null; // String
    isVerified: boolean; // Boolean!
    lastLogin: string; // String!
    lastName?: string | null; // String
    loginOption: string; // String!
    mfaOption: NexusGenEnums['mfaOption']; // mfaOption!
    origin: NexusGenEnums['Origin']; // Origin!
    sparkID: string; // String!
  };
  Promotion: {
    // root type
    contentKey?: string | null; // String
    iconUrl?: string | null; // String
    longDescription?: string | null; // String
    name: string; // String!
    productType: NexusGenEnums['ProductType']; // ProductType!
    shortDescription?: string | null; // String
    sortOrder?: number | null; // Int
  };
  Query: {};
  Rate: {
    // root type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    data: string; // String!
    dataOverage: string; // String!
    moc: string; // String!
    mtc: string; // String!
    text: string; // String!
  };
  RelatedAddonsResponse: {
    // root type
    addonAction: NexusGenEnums['AddonAction']; // AddonAction!
    addonsCart?: NexusGenRootTypes['Cart'] | null; // Cart
    addonsProducts?: NexusGenRootTypes['AddonsProducts'] | null; // AddonsProducts
  };
  RelatedPlansResponse: {
    // root type
    bundles: NexusGenRootTypes['RelatedPlansResponseBundle'][]; // [RelatedPlansResponseBundle!]!
  };
  RelatedPlansResponseBundle: {
    // root type
    id: string; // String!
    offerDetails: NexusGenRootTypes['PlanOfferDetail'][]; // [PlanOfferDetail!]!
  };
  Resource: {
    // root type
    account?: NexusGenRootTypes['AccountResource'] | null; // AccountResource
    isNumberIdentified: boolean; // Boolean!
    line?: NexusGenRootTypes['LineResource'] | null; // LineResource
  };
  RestOfAddWalletPaymentMethodResponse: {
    // root type
    isDuplicate?: boolean | null; // Boolean
    paymentMethodId: string; // String!
    source?: NexusGenEnums['PaymentMethodSource'] | null; // PaymentMethodSource
  };
  RestOfPoliPayBillResponse: {
    // root type
    redirectUrl: string; // String!
    token: string; // String!
  };
  RevokeAccessResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  RoamingRatesResponse: {
    // root type
    destinations: NexusGenRootTypes['Destinations'][]; // [Destinations!]!
  };
  SaveCheckoutStepResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  ServiceProvider: {
    // root type
    name: string; // String!
    serviceProviderId: string; // String!
  };
  Stock: {
    // root type
    status: NexusGenEnums['StatusType']; // StatusType!
    storeStatus: NexusGenEnums['StatusType']; // StatusType!
    warehouseStatus: NexusGenEnums['StatusType']; // StatusType!
  };
  Store: {
    // root type
    address?: string | null; // String
    id: string; // String!
    inStock: boolean; // Boolean!
    name: string; // String!
    operatingHours?: NexusGenRootTypes['OperatingHours'][] | null; // [OperatingHours!]
    phoneNumber?: string | null; // String
    storeImage?: string | null; // String
  };
  StoreList: {
    // root type
    storeList?: NexusGenRootTypes['Store'][] | null; // [Store!]
  };
  Subcategory: {
    // root type
    categoryId: string; // String!
    defaultSelected?: string | null; // String
    name: string; // String!
    sortOrder?: number | null; // Int
    visibility?: boolean | null; // Boolean
  };
  SubmitOrderResponse: {
    // root type
    code: number; // Int!
    confirmationEmailId?: string | null; // String
    message: string; // String!
    orderNumber?: string | null; // String
    success: boolean; // Boolean!
  };
  SubmitOrderSSResponse: {
    // root type
    code: number; // Int!
    confirmationEmailId?: string | null; // String
    message: string; // String!
    orderNumber?: string | null; // String
    success: boolean; // Boolean!
  };
  SubmitRecommendationResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  SubscriptionComparisonOffer: {
    // root type
    brand?: string | null; // String
    iconUrl?: string | null; // String
    isIncluded?: boolean | null; // Boolean
    offerId: string; // String!
    offerName: string; // String!
    price?: NexusGenRootTypes['SubscriptionsComparisonOfferPrice'] | null; // SubscriptionsComparisonOfferPrice
  };
  SubscriptionCta: {
    // root type
    label: string; // String!
    type: NexusGenEnums['LineSubscriptionCta']; // LineSubscriptionCta!
    webLink?: string | null; // String
  };
  SubscriptionOffer: {
    // root type
    accountNumbers?: string[] | null; // [String!]
    ctas?: NexusGenRootTypes['SubscriptionOfferCta'][] | null; // [SubscriptionOfferCta!]
    lineNumbers?: string[] | null; // [String!]
    name: string; // String!
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  SubscriptionOfferCta: {
    // root type
    ctaType: NexusGenEnums['SubscriptionOfferCtaType']; // SubscriptionOfferCtaType!
    label: string; // String!
  };
  SubscriptionProductOffers: {
    // root type
    notifications?: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  SubscriptionStatus: {
    // root type
    label?: string | null; // String
    type: NexusGenEnums['LineSubscriptionStatus']; // LineSubscriptionStatus!
  };
  SubscriptionsComparisonCtas: {
    // root type
    type: NexusGenEnums['SubscriptionComparisonCTAType']; // SubscriptionComparisonCTAType!
  };
  SubscriptionsComparisonOfferPrice: {
    // root type
    basePrice?: number | null; // Float
    description?: string | null; // String
    frequencyPeriod?: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
  };
  SubscriptionsComparisonWithOfferDetailsResponse: {
    // root type
    comparisons: NexusGenRootTypes['SubscriptionsComparisons'][]; // [SubscriptionsComparisons!]!
  };
  SubscriptionsComparisons: {
    // root type
    available?: NexusGenRootTypes['SubscriptionComparisonOffer'] | null; // SubscriptionComparisonOffer
    ctas?: NexusGenRootTypes['SubscriptionsComparisonCtas'][] | null; // [SubscriptionsComparisonCtas!]
    recommendationId: string; // String!
    unavailable?: NexusGenRootTypes['SubscriptionComparisonOffer'] | null; // SubscriptionComparisonOffer
  };
  Summary: {
    // root type
    billingFrequency?: NexusGenEnums['BillingFrequency'] | null; // BillingFrequency
    discount?: number | null; // Float
    frequencyPeriod?: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
    frequencyType: NexusGenEnums['FrequencyType']; // FrequencyType!
    frequencyValue?: number | null; // Int
    gst: number; // Float!
    subtotal: number; // Float!
    taxExclusiveDiscount?: number | null; // Float
    taxExclusiveSubtotal: number; // Float!
    taxExclusiveTotal: number; // Float!
    total: number; // Float!
  };
  TopupCardDetails: {
    // root type
    lastFourDigits: string; // String!
  };
  TopupSettings: {
    // root type
    cardDetails: NexusGenRootTypes['TopupCardDetails']; // TopupCardDetails!
    monthlyTopupLimit?: number | null; // Float
    nextPaymentDate?: string | null; // String
    thresholdAmount?: number | null; // Float
    topupAmount: number; // Float!
  };
  Transaction: {
    // root type
    currentBalance: number; // Float!
    description: string; // String!
    isDebit: boolean; // Boolean!
    startDateTime: string; // String!
    type: string; // String!
    value: number; // Float!
  };
  UpcomingPayment: {
    // root type
    paymentAmount?: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    paymentDate?: string | null; // String
    paymentFrequency?: string | null; // String
    paymentMethodId?: string | null; // String
  };
  UpdateConnectionPromiseLineResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdateNameResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdatePreferenceChannelResponse: {
    // root type
    channelPreference?: NexusGenRootTypes['PreferenceChannel'] | null; // PreferenceChannel
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdateSmartCapResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpfrontPaymentItem: {
    // root type
    description: string; // String!
    imagePath: string; // String!
    itemId: string; // String!
    price: number; // Float!
    title: string; // String!
  };
  UpfrontPaymentResponse: {
    // root type
    items: NexusGenRootTypes['UpfrontPaymentItem'][]; // [UpfrontPaymentItem!]!
    monthlyIfpAmount: number; // Float!
    requiredUpfrontAmount: number; // Float!
  };
  UsageTransactions: {
    // root type
    currentBalance: number; // Float!
    description: string; // String!
    endDateTime: string; // String!
    isDebit: boolean; // Boolean!
    previousBalance: number; // Float!
    startDateTime: string; // String!
    transactionType: NexusGenEnums['UsageTransactionType']; // UsageTransactionType!
    type: string; // String!
    value: number; // Float!
  };
  User: {};
  UserProfile: {
    // root type
    attributes: NexusGenRootTypes['UserProfileAttribute']; // UserProfileAttribute!
    profileInfo: NexusGenRootTypes['UserProfileInfo']; // UserProfileInfo!
    social?: NexusGenRootTypes['UserProfileSocial'] | null; // UserProfileSocial
  };
  UserProfileAttribute: {
    // root type
    access?: NexusGenRootTypes['UserProfileAttributeAccess'] | null; // UserProfileAttributeAccess
    authState?: string | null; // String
    line?: NexusGenRootTypes['UserProfileAttributeLine'] | null; // UserProfileAttributeLine
    loginOption?: string | null; // String
    multiFactorAuthType?: string | null; // String
    product?: NexusGenRootTypes['UserProfileAttributeProduct'] | null; // UserProfileAttributeProduct
    rememberMe?: boolean | null; // Boolean
    sparkCRM?: NexusGenRootTypes['CRMAttributes'] | null; // CRMAttributes
  };
  UserProfileAttributeAccess: {
    // root type
    numberOfAccess?: string | null; // String
    numberOfAccount?: string | null; // String
    numberOfPostpaidMobile?: string | null; // String
    numberOfPrepaidMobile?: string | null; // String
  };
  UserProfileAttributeLine: {
    // root type
    customer?: NexusGenRootTypes['UserProfileAttributeLineCustomer'] | null; // UserProfileAttributeLineCustomer
    product?: NexusGenRootTypes['UserProfileAttributeLineProduct'] | null; // UserProfileAttributeLineProduct
  };
  UserProfileAttributeLineCustomer: {
    // root type
    legalCategory?: string | null; // String
    lineOfBusiness?: string | null; // String
    segment?: string | null; // String
  };
  UserProfileAttributeLineProduct: {
    // root type
    servicePlanID?: string | null; // String
    servicePlanName?: string | null; // String
    servicePlanType?: string | null; // String
  };
  UserProfileAttributeProduct: {
    // root type
    numberOfBroadband?: string | null; // String
    numberOfLandline?: string | null; // String
    numberOfPostpaidMobile?: string | null; // String
    numberOfPrepaidMobile?: string | null; // String
    numberOfProduct?: string | null; // String
    productTypes?: string | null; // String
  };
  UserProfileInfo: {
    // root type
    profileID: string; // String!
  };
  UserProfileSocial: {
    // root type
    apple?: string | null; // String
    facebook?: string | null; // String
    google?: string | null; // String
  };
  VoucherResponse: {
    // root type
    availableBalance?: number | null; // Float
    receiptNumber?: string | null; // String
    redeemedAmount: number; // Float!
    reservedBalance?: number | null; // Float
  };
  VoucherTopupResponse: {
    // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    voucherResponse?: NexusGenRootTypes['VoucherResponse'] | null; // VoucherResponse
  };
  extrasCategory: {
    // root type
    defaultSelected?: boolean | null; // Boolean
    description?: string | null; // String
    id: string; // String!
    isCategoryContainer?: boolean | null; // Boolean
    name: string; // String!
    offers?: NexusGenRootTypes['ExtrasDetail'][] | null; // [ExtrasDetail!]
    sortOrder?: number | null; // Int
    subCategories?: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    visibility?: boolean | null; // Boolean
  };
}

export interface NexusGenInterfaces {
  A2PCustomerShortcodeBase:
    | NexusGenRootTypes['A2PCustomerShortcode']
    | NexusGenRootTypes['A2PCustomerShortcodeListItem'];
  A2PResponsePeriod:
    | NexusGenRootTypes['A2PAdminOverview']
    | NexusGenRootTypes['A2PAdminShortcodesOverview']
    | NexusGenRootTypes['A2PCustomerOverview']
    | NexusGenRootTypes['A2PCustomerUsage'];
  BaseOfferDetailInterface:
    | NexusGenRootTypes['BaseOfferDetail']
    | NexusGenRootTypes['AddonOfferDetail'];
  GenericMutationResponse:
    | NexusGenRootTypes['A2PAddContentProviderResponse']
    | NexusGenRootTypes['A2PAddServiceRequestResponse']
    | NexusGenRootTypes['A2PStatusResponse']
    | NexusGenRootTypes['A2PModifyShortcodeResponse']
    | NexusGenRootTypes['AddAccountAccessResponse']
    | NexusGenRootTypes['AddAccountToCartResponse']
    | NexusGenRootTypes['AirpointsUpdateResponse']
    | NexusGenRootTypes['AddWalletPaymentMethodResponse']
    | NexusGenRootTypes['AddBundleOperationResponse']
    | NexusGenRootTypes['AddConnectionPromiseLineResponse']
    | NexusGenRootTypes['AddItemsToBundleResponse']
    | NexusGenRootTypes['AddLineAccessResponse']
    | NexusGenRootTypes['AirpointsDeleteResponse']
    | NexusGenRootTypes['DeleteAutoTopupResponse']
    | NexusGenRootTypes['DeleteBundleResponse']
    | NexusGenRootTypes['DeleteConnectionPromiseLineResponse']
    | NexusGenRootTypes['DeleteItemFromBundleResponse']
    | NexusGenRootTypes['InitiateCheckoutResponse']
    | NexusGenRootTypes['PoliPayBillResponse']
    | NexusGenRootTypes['CreditCardBillPaymentResponse']
    | NexusGenRootTypes['NewCardBillPaymentResponse']
    | NexusGenRootTypes['VoucherTopupResponse']
    | NexusGenRootTypes['DeleteAutoPayBillResponse']
    | NexusGenRootTypes['DeleteUserPreferenceChannelResponse']
    | NexusGenRootTypes['RevokeAccessResponse']
    | NexusGenRootTypes['BroadbandDiagnosticsResultsResponse']
    | NexusGenRootTypes['SaveCheckoutStepResponse']
    | NexusGenRootTypes['AutoTopupResponse']
    | NexusGenRootTypes['CreditCardTopupResponse']
    | NexusGenRootTypes['SubmitOrderResponse']
    | NexusGenRootTypes['SubmitOrderSSResponse']
    | NexusGenRootTypes['SubmitRecommendationResponse']
    | NexusGenRootTypes['UpdateConnectionPromiseLineResponse']
    | NexusGenRootTypes['UpdateNameResponse']
    | NexusGenRootTypes['UpdatePreferenceChannelResponse']
    | NexusGenRootTypes['UpdateSmartCapResponse'];
  Node:
    | NexusGenRootTypes['NotificationPreference']
    | NexusGenRootTypes['PreferenceChannel'];
  ProductSpecificationValue: NexusGenRootTypes['ProductVariantSpecification'];
}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes &
  NexusGenScalars &
  NexusGenEnums;

export interface NexusGenFieldTypes {
  A2PAddContentProviderResponse: {
    // field return type
    code: number; // Int!
    contentProviderId: string | null; // String
    message: string; // String!
    success: boolean; // Boolean!
  };
  A2PAddServiceRequestResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    serviceRequestId: string | null; // String
    success: boolean; // Boolean!
  };
  A2PAdminOverview: {
    // field return type
    dateTimeEnd: string | null; // String
    dateTimeStart: string | null; // String
    interval: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length: number | null; // Int
    pendingShortcodesCount: number; // Int!
    suspendedShortcodesCount: number; // Int!
    totalCustomersCount: number; // Int!
    totalShortcodesCount: number; // Int!
  };
  A2PAdminShortcodeItem: {
    // field return type
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: number; // Int!
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    sentSmsCount: number; // Int!
    shortCodeNumber: number; // Int!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    totalSmsCount: number; // Int!
    type: NexusGenEnums['A2PShortcodeType']; // A2PShortcodeType!
  };
  A2PAdminShortcodesOverview: {
    // field return type
    activeShortcodesCount: number; // Int!
    dateTimeEnd: string | null; // String
    dateTimeStart: string | null; // String
    interval: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length: number | null; // Int
    pendingShortcodesCount: number; // Int!
    suspendedShortcodesCount: number; // Int!
    totalShortcodesCount: number; // Int!
  };
  A2PCustomerContentProvider: {
    // field return type
    contentProviderId: number; // Int!
    contentProviderName: string; // String!
    ctas: NexusGenEnums['A2PCustomerContentProviderCTA'][]; // [A2PCustomerContentProviderCTA!]!
    customerCareUrl: string | null; // String
    customerName: string; // String!
    customerNumber: string; // String!
    helpdeskEmail: string | null; // String
    phoneNumber: string | null; // String
  };
  A2PCustomerOverview: {
    // field return type
    dateTimeEnd: string | null; // String
    dateTimeStart: string | null; // String
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    interval: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length: number | null; // Int
    sentSmsCount: number; // Int!
    totalSmsCount: number; // Int!
  };
  A2PCustomerServiceRequest: {
    // field return type
    assignedShortcodeNumber: string | null; // String
    contentProviderId: number; // Int!
    dateTimeCreated: string; // String!
    dateTimeModified: string; // String!
    messageType: NexusGenEnums['A2PCustomerServiceProviderMessageType']; // A2PCustomerServiceProviderMessageType!
    requestedShortcodeNumber: string | null; // String
    serviceRequestId: string; // String!
    status: NexusGenEnums['A2PCustomerServiceProviderStatus']; // A2PCustomerServiceProviderStatus!
  };
  A2PCustomerShortcode: {
    // field return type
    carriers: NexusGenEnums['A2PServiceRequestCarrier'][]; // [A2PServiceRequestCarrier!]!
    contentProviderId: number; // Int!
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: string; // String!
    expectedMessageVolume: NexusGenEnums['A2PServiceRequestMessageVolume']; // A2PServiceRequestMessageVolume!
    firstName: string; // String!
    jobTitle: string; // String!
    lastName: string; // String!
    messageType: NexusGenEnums['A2PServiceRequestMessageType']; // A2PServiceRequestMessageType!
    messageUsage: NexusGenEnums['A2PServiceRequestMessageUsage']; // A2PServiceRequestMessageUsage!
    mobileOriginatingMessageExample: string; // String!
    mobileTerminatingMessageExample: string; // String!
    predictedPeakTimeDescription: string; // String!
    preferredNumber: string | null; // String
    serviceComplianceDescription: string; // String!
    serviceDescription: string; // String!
    serviceEndDateTime: string; // String!
    serviceMarketingChannels: string[]; // [String!]!
    serviceName: string; // String!
    shortCodeNumber: number; // Int!
    signature: string; // String!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PCustomerShortcodeListItem: {
    // field return type
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: string; // String!
    shortCodeNumber: number; // Int!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    type: NexusGenEnums['A2PShortcodeType'] | null; // A2PShortcodeType
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PCustomerUsage: {
    // field return type
    dateTimeEnd: string | null; // String
    dateTimeStart: string | null; // String
    interval: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length: number | null; // Int
    series: NexusGenRootTypes['A2PCustomerUsageItem'][]; // [A2PCustomerUsageItem!]!
  };
  A2PCustomerUsageItem: {
    // field return type
    dateTimeEnd: string; // String!
    dateTimeStart: string; // String!
    deliveredSmsCount: number; // Int!
    failedSmsCount: number; // Int!
    sentSmsCount: number; // Int!
    totalSmsCount: number; // Int!
  };
  A2PModifyShortcodeResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  A2POrganisationDetails: {
    // field return type
    adminOverview: NexusGenRootTypes['A2PAdminOverview']; // A2PAdminOverview!
    adminShortcodes: NexusGenRootTypes['A2PAdminShortcodeItem'][]; // [A2PAdminShortcodeItem!]!
    adminShortcodesOverview: NexusGenRootTypes['A2PAdminShortcodesOverview']; // A2PAdminShortcodesOverview!
    contentProviders: NexusGenRootTypes['A2PCustomerContentProvider'][]; // [A2PCustomerContentProvider!]!
    customerNumber: string | null; // String
    overview: NexusGenRootTypes['A2PCustomerOverview']; // A2PCustomerOverview!
    serviceRequests: NexusGenRootTypes['A2PCustomerServiceRequest'][]; // [A2PCustomerServiceRequest!]!
    shortcode: NexusGenRootTypes['A2PCustomerShortcode']; // A2PCustomerShortcode!
    shortcodes: NexusGenRootTypes['A2PCustomerShortcodeListItem'][]; // [A2PCustomerShortcodeListItem!]!
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PStatusResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    status: boolean; // Boolean!
    success: boolean; // Boolean!
  };
  AccountAccessInformation: {
    // field return type
    accountNumber: string | null; // String
    associatedUsers: NexusGenRootTypes['AssociatedUser'][]; // [AssociatedUser!]!
    balanceManagement: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    displayName: string | null; // String
    lines: NexusGenRootTypes['Line'][]; // [Line!]!
    statusText: string | null; // String
  };
  AccountAssociatedProduct: {
    // field return type
    assetId: string | null; // String
    ifpEligible: boolean; // Boolean!
    lineNumber: string | null; // String
    offerId: string | null; // String
    offerName: string | null; // String
    productInstanceId: string | null; // String
  };
  AccountBalance: {
    // field return type
    accountNumber: string; // String!
    currentBalance: NexusGenRootTypes['CurrentBalance'] | null; // CurrentBalance
    currentBillCycle: number | null; // Int
    detailMessage: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
    firstName: string | null; // String
    lastBill: NexusGenRootTypes['LastBill'] | null; // LastBill
    lastName: string | null; // String
    lastPayment: NexusGenRootTypes['LastPayment'] | null; // LastPayment
    monthlyPaymentSetup: NexusGenRootTypes['MonthlyPaymentSetup'][] | null; // [MonthlyPaymentSetup!]
    nextBill: NexusGenRootTypes['NextBill'] | null; // NextBill
    summaryMessage: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
  };
  AccountDetails: {
    // field return type
    accountName: string | null; // String
    accountNumber: string | null; // String
    accountNumberSuffix: string | null; // String
    bank: string | null; // String
    bankNumber: string | null; // String
    branchName: string | null; // String
    branchNumber: string | null; // String
  };
  AccountList: {
    // field return type
    accountId: string; // String!
    accountNumber: string; // String!
    balanceManagement: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    businessName: string | null; // String
    customerNumber: string; // String!
    customerSegment: string; // String!
    firstName: string | null; // String
    inCollections: boolean; // Boolean!
    lastName: string | null; // String
    products: NexusGenRootTypes['AccountAssociatedProduct'][] | null; // [AccountAssociatedProduct!]
    segment: NexusGenEnums['Segment']; // Segment!
    status: string; // String!
  };
  AccountResource: {
    // field return type
    hasBusinessName: boolean | null; // Boolean
    isAccountAccessAllowed: boolean; // Boolean!
    isPasswordProtected: boolean | null; // Boolean
  };
  AccountSummary: {
    // field return type
    firstName: string; // String!
    lastName: string; // String!
  };
  AccountTransactionDetail: {
    // field return type
    billId: string | null; // String
    calculatedBalance: number | null; // Float
    date: string; // String!
    description: string; // String!
    type: NexusGenEnums['TransactionType']; // TransactionType!
    value: number; // Float!
  };
  AccountTransactionsDetails: {
    // field return type
    details: NexusGenRootTypes['AccountTransactionDetail'][]; // [AccountTransactionDetail!]!
  };
  AddAccountAccessResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    nextStep: NexusGenEnums['AddAccountAccessNextSection'] | null; // AddAccountAccessNextSection
    success: boolean; // Boolean!
    title: string | null; // String
  };
  AddAccountToCartResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddBundleOperationResponse: {
    // field return type
    bundles: NexusGenRootTypes['AddBundlesResponse'][] | null; // [AddBundlesResponse!]
    cart: NexusGenRootTypes['Cart'] | null; // Cart
    cartId: string | null; // String
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddBundlesResponse: {
    // field return type
    bundleId: string; // String!
    categoryId: string; // String!
    categoryName: string; // String!
    isAffected: boolean; // Boolean!
    items: NexusGenRootTypes['AddBundlesResponseItem'][]; // [AddBundlesResponseItem!]!
  };
  AddBundlesResponseItem: {
    // field return type
    itemId: string; // String!
    offerId: string; // String!
  };
  AddConnectionPromiseLineResponse: {
    // field return type
    code: number; // Int!
    connectionPromiseId: string | null; // String
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddItemsToBundleResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddLineAccessResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    nextStep: NexusGenEnums['AddLineAccessNextSection'] | null; // AddLineAccessNextSection
    success: boolean; // Boolean!
    title: string | null; // String
  };
  AddWalletPaymentMethodResponse: {
    // field return type
    addWalletPaymentMethodResponse:
      | NexusGenRootTypes['RestOfAddWalletPaymentMethodResponse']
      | null; // RestOfAddWalletPaymentMethodResponse
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AddonOfferDetail: {
    // field return type
    associatedPriceRules: NexusGenRootTypes['AssociatedPriceRule'][] | null; // [AssociatedPriceRule!]
    bundleId: string; // String!
    category: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    categoryIdentifier: string | null; // String
    contentKey: string | null; // String
    contractTerm: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    description: string | null; // String
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId: string | null; // String
    group: NexusGenRootTypes['Group'] | null; // Group
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    isAccountLevel: boolean; // Boolean!
    isGrandfathered: boolean | null; // Boolean
    name: string; // String!
    offerId: string | null; // String
    price: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productFeatures: NexusGenRootTypes['ProductFeature'] | null; // ProductFeature
    productSpecifications: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    productType: string | null; // String
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    stock: NexusGenRootTypes['Stock'] | null; // Stock
    supportedDestinations: string[] | null; // [String!]
  };
  AddonsProducts: {
    // field return type
    accessoryBundles: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
    insuranceBundles: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
    vasBundles: NexusGenRootTypes['AddonOfferDetail'][] | null; // [AddonOfferDetail!]
  };
  AddressDetail: {
    // field return type
    addressLine1: string; // String!
    addressLine2: string | null; // String
    addressLine3: string | null; // String
    addressLine4: string | null; // String
    elid: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
  };
  AddressResponse: {
    // field return type
    detail: NexusGenRootTypes['AddressDetail']; // AddressDetail!
    suggestions: NexusGenRootTypes['AddressSuggestion'][]; // [AddressSuggestion!]!
  };
  AddressSuggestion: {
    // field return type
    elid: string; // String!
    label: string; // String!
  };
  AirpointsDeleteResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AirpointsResponse: {
    // field return type
    airpointsNumber: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    status: string; // String!
  };
  AirpointsUpdateResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AssociatedPriceRule: {
    // field return type
    description: string; // String!
    price: NexusGenRootTypes['Price']; // Price!
    pricePointID: string; // String!
    ruleType: NexusGenEnums['RuleType']; // RuleType!
    sources: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  AssociatedUser: {
    // field return type
    businessName: string | null; // String
    email: string; // String!
    entityID: string; // String!
    firstName: string | null; // String
    isPending: boolean | null; // Boolean
    lastName: string | null; // String
    role: string | null; // String
    type: NexusGenEnums['AccessType']; // AccessType!
  };
  Auth: {
    // field return type
    isAuthenticated: boolean; // Boolean!
    isGuest: boolean; // Boolean!
  };
  AuthenticatedInfoResponse: {
    // field return type
    hasSparkId: boolean; // Boolean!
    isGuest: boolean; // Boolean!
    isLoggedIn: boolean; // Boolean!
    profile: NexusGenRootTypes['ProfileInfo'] | null; // ProfileInfo
  };
  AutoTopupDetails: {
    // field return type
    topupSettings: NexusGenRootTypes['TopupSettings'][]; // [TopupSettings!]!
  };
  AutoTopupResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  AvailableNumbersResponse: {
    // field return type
    code: number; // Int!
    lineNumber: string | null; // String
    lineNumberReservationChunkIndex: number; // Int!
    lineNumberReservationChunks: NexusGenRootTypes['LineNumberReservation'][][]; // [[LineNumberReservation!]!]!
    lineNumberReservations: NexusGenRootTypes['LineNumberReservation'][]; // [LineNumberReservation!]!
    lineNumbers: string[]; // [String!]!
    message: string; // String!
    pagingId: string; // String!
    reservationId: string; // String!
    success: boolean; // Boolean!
  };
  BalanceInformationMessage: {
    // field return type
    otherCtas: NexusGenRootTypes['OperationTypeCtaDetails'][] | null; // [OperationTypeCtaDetails!]
    primary: string; // String!
    primaryCta: NexusGenRootTypes['OperationTypeCtaDetails']; // OperationTypeCtaDetails!
    secondary: string | null; // String
    secondaryCta: NexusGenRootTypes['OperationTypeCtaDetails'] | null; // OperationTypeCtaDetails
    status: NexusGenEnums['BalanceMessageStatus'] | null; // BalanceMessageStatus
    tertiary: string | null; // String
  };
  BankAccountDetail: {
    // field return type
    accountName: string; // String!
    accountNumber: string; // String!
    bankName: string; // String!
    bankType: NexusGenEnums['PaymentMethodBankType']; // PaymentMethodBankType!
  };
  BaseOfferDetail: {
    // field return type
    associatedPriceRules: NexusGenRootTypes['AssociatedPriceRule'][] | null; // [AssociatedPriceRule!]
    category: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    contentKey: string | null; // String
    contractTerm: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    description: string | null; // String
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId: string | null; // String
    group: NexusGenRootTypes['Group'] | null; // Group
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    isGrandfathered: boolean | null; // Boolean
    name: string; // String!
    offerId: string | null; // String
    price: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productFeatures: NexusGenRootTypes['ProductFeature'] | null; // ProductFeature
    productSpecifications: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    productType: string | null; // String
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    stock: NexusGenRootTypes['Stock'] | null; // Stock
    supportedDestinations: string[] | null; // [String!]
  };
  BillBreakdown: {
    // field return type
    billId: string; // String!
    charges: NexusGenRootTypes['BillBreakdownCharge'][]; // [BillBreakdownCharge!]!
    date: string; // String!
    title: string; // String!
  };
  BillBreakdownCharge: {
    // field return type
    type: string; // String!
    value: number; // Float!
  };
  BillSummary: {
    // field return type
    bills: NexusGenRootTypes['BillBreakdown'][]; // [BillBreakdown!]!
  };
  BiometricProgressResponse: {
    // field return type
    infoBanner: NexusGenEnums['BiometricProgressInfoBanner'] | null; // BiometricProgressInfoBanner
    isContinueEnabled: boolean; // Boolean!
    showResend: boolean; // Boolean!
    steps: NexusGenRootTypes['BiometricProgressStep'][]; // [BiometricProgressStep!]!
  };
  BiometricProgressStep: {
    // field return type
    label: string; // String!
    status: NexusGenEnums['BiometricProgressStepStatus']; // BiometricProgressStepStatus!
    stepId: string; // String!
  };
  BroadbandDiagnostics: {
    // field return type
    modemModel: string; // String!
    results: NexusGenRootTypes['BroadbandDiagnosticsResult'][] | null; // [BroadbandDiagnosticsResult!]
    testSuiteCompleted: boolean | null; // Boolean
    testSuiteType: NexusGenEnums['BroadbandDiagnosticsTestSuiteType'] | null; // BroadbandDiagnosticsTestSuiteType
  };
  BroadbandDiagnosticsAvailableCTA: {
    // field return type
    ctaType: NexusGenEnums['BroadbandDiagnosticsCtaType']; // BroadbandDiagnosticsCtaType!
    label: string; // String!
    webAction: string | null; // String
  };
  BroadbandDiagnosticsResult: {
    // field return type
    availableCTAs: NexusGenRootTypes['BroadbandDiagnosticsAvailableCTA'][]; // [BroadbandDiagnosticsAvailableCTA!]!
    desc: string | null; // String
    diagnosticSummaryCode: string | null; // String
    testExecuted: boolean; // Boolean!
    testLabel: string; // String!
    testPassed: boolean; // Boolean!
    testType: NexusGenEnums['BroadbandDiagnosticsTestType']; // BroadbandDiagnosticsTestType!
    title: string | null; // String
  };
  BroadbandDiagnosticsResultsResponse: {
    // field return type
    broadbandDiagnostics: NexusGenRootTypes['BroadbandDiagnostics'] | null; // BroadbandDiagnostics
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  BroadbandTroubleshooterAvailableCTA: {
    // field return type
    label: string; // String!
    type: NexusGenEnums['BroadbandTroubleshooterCTAType']; // BroadbandTroubleshooterCTAType!
    webCTA: string | null; // String
  };
  BroadbandTroubleshooterBody: {
    // field return type
    componentType: NexusGenEnums['BroadbandTroubleshooterComponentType'] | null; // BroadbandTroubleshooterComponentType
    copy: string | null; // String
  };
  BroadbandTroubleshooterGallery: {
    // field return type
    url: string | null; // String
  };
  BroadbandTroubleshooterResultsResponse: {
    // field return type
    diagnosticSummaryCode: string; // String!
    helpSteps: NexusGenRootTypes['BroadbandTroubleshooterStep'][]; // [BroadbandTroubleshooterStep!]!
    initialStep: string; // String!
    modemImage: string | null; // String
    modemManufacturer: string | null; // String
    modemSerialNumber: string | null; // String
    stepForModemModel: string; // String!
  };
  BroadbandTroubleshooterStep: {
    // field return type
    bodyList: NexusGenRootTypes['BroadbandTroubleshooterBody'][] | null; // [BroadbandTroubleshooterBody!]
    ctaList: NexusGenRootTypes['BroadbandTroubleshooterAvailableCTA'][]; // [BroadbandTroubleshooterAvailableCTA!]!
    ctaTitle: string | null; // String
    imageList: NexusGenRootTypes['BroadbandTroubleshooterGallery'][] | null; // [BroadbandTroubleshooterGallery!]
    stepId: string; // String!
    title: string | null; // String
  };
  Bundle: {
    // field return type
    bundleId: string; // String!
    categoryId: string | null; // String
    filteredItems: NexusGenRootTypes['Item'][]; // [Item!]!
    isLineNumberRequired: boolean | null; // Boolean
    items: NexusGenRootTypes['Item'][] | null; // [Item!]
    lineNumber: string | null; // String
    offerIds: string[]; // [String!]!
  };
  CRMAttributes: {
    // field return type
    legalCategory: string | null; // String
    lineOfBusiness: string | null; // String
    segment: string | null; // String
  };
  CardDetail: {
    // field return type
    brand: NexusGenEnums['CardBrand'] | null; // CardBrand
    cardName: string | null; // String
    cardType: string; // String!
    creditCardType: NexusGenEnums['PaymentMethodCardType']; // PaymentMethodCardType!
    expiryMonth: number; // Int!
    expiryYear: number; // Int!
    maskedCardNumber: string; // String!
  };
  CardDisplaySurchargeResponse: {
    // field return type
    amex: string; // String!
    dinersClub: string; // String!
    displayText: string[]; // [String!]!
    masterCard: string; // String!
    operationType: string; // String!
    visa: string; // String!
  };
  Cart: {
    // field return type
    accountNumber: string | null; // String
    auth: NexusGenRootTypes['Auth']; // Auth!
    bundles: NexusGenRootTypes['Bundle'][] | null; // [Bundle!]
    cartId: string; // String!
    id: string; // String!
    isAccountNumberRequired: boolean; // Boolean!
    productOfferImages: NexusGenRootTypes['ProductOfferImage'][] | null; // [ProductOfferImage!]
    segment: string | null; // String
    shippableItems: NexusGenRootTypes['Item'][] | null; // [Item!]
    summaries: NexusGenRootTypes['Summary'][] | null; // [Summary!]
  };
  CartExistingMpdLine: {
    // field return type
    currentDiscountPercentage: NexusGenRootTypes['Discount']; // Discount!
    currentPrice: number; // Float!
    description: string; // String!
    existingDiscountPercentage: NexusGenRootTypes['Discount']; // Discount!
    lineNumber: string; // String!
    updatedPrice: number; // Float!
  };
  CartPrice: {
    // field return type
    taxExclusiveValue: number; // Float!
    value: number; // Float!
  };
  CartView: {
    // field return type
    cart: NexusGenRootTypes['Cart'] | null; // Cart
    id: string; // ID!
    mandatoryAction: NexusGenEnums['CartViewMandatoryAction'] | null; // CartViewMandatoryAction
    screen: NexusGenEnums['CartViewScreen']; // CartViewScreen!
  };
  Category: {
    // field return type
    iconName: string; // String!
    label: string; // String!
    url: string | null; // String
  };
  CheckoutDataFieldEntry: {
    // field return type
    name: string; // String!
    value: string | null; // String
  };
  CheckoutDataResponse: {
    // field return type
    id: string; // ID!
    sections: NexusGenRootTypes['CheckoutDataSection'][]; // [CheckoutDataSection!]!
  };
  CheckoutDataSection: {
    // field return type
    sectionId: string; // String!
    steps: NexusGenRootTypes['CheckoutDataStep'][]; // [CheckoutDataStep!]!
  };
  CheckoutDataStep: {
    // field return type
    entries: NexusGenRootTypes['CheckoutDataFieldEntry'][]; // [CheckoutDataFieldEntry!]!
    offerContainerId: string | null; // String
    stepId: string; // String!
    stepPath: string; // String!
  };
  CheckoutField: {
    // field return type
    component: NexusGenEnums['CheckoutFieldComponent']; // CheckoutFieldComponent!
    componentViewId: string | null; // String
    componentViewName: string | null; // String
    contentKey: string | null; // String
    customItems: string[] | null; // [String!]
    dataRef: NexusGenRootTypes['CheckoutFieldDataRef'][] | null; // [CheckoutFieldDataRef!]
    defaultValue: string | null; // String
    fieldType: NexusGenEnums['CheckoutFieldComponent']; // CheckoutFieldComponent!
    filterDate: string | null; // String
    infoLayerContentKey: string | null; // String
    key: string; // String!
    label: string | null; // String
    maximumRule: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    minimumRule: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    name: string; // String!
    options: NexusGenRootTypes['CheckoutFieldOption'][] | null; // [CheckoutFieldOption!]
    parent: NexusGenRootTypes['Parent'] | null; // Parent
    placeholder: string | null; // String
    regionId: string | null; // String
    required: boolean; // Boolean!
    shouldHideWhenSingleOption: boolean; // Boolean!
    shouldMask: boolean; // Boolean!
    showInSummary: boolean; // Boolean!
    summaryLabel: string | null; // String
    summaryTemplate: string | null; // String
    validationRule: NexusGenRootTypes['FieldRule'] | null; // FieldRule
    visibilityExpression: string | null; // String
  };
  CheckoutFieldDataRef: {
    // field return type
    id: string; // String!
    text: string; // String!
  };
  CheckoutFieldOption: {
    // field return type
    iconName: string | null; // String
    label: string; // String!
    sublabel: string | null; // String
    value: string; // String!
    visibility: boolean; // Boolean!
  };
  CheckoutSection: {
    // field return type
    descriptionContentKey: string | null; // String
    name: string | null; // String
    sectionId: string; // String!
    steps: NexusGenRootTypes['CheckoutStep'][]; // [CheckoutStep!]!
  };
  CheckoutStep: {
    // field return type
    bundleId: string | null; // String
    fields: NexusGenRootTypes['CheckoutField'][]; // [CheckoutField!]!
    itemId: string | null; // String
    name: string | null; // String
    nameExpression: string | null; // String
    stepId: string; // String!
    stepPath: string; // String!
  };
  CheckoutStructureQueryResponse: {
    // field return type
    id: string; // String!
    sections: NexusGenRootTypes['CheckoutSection'][]; // [CheckoutSection!]!
  };
  Color: {
    // field return type
    name: string; // String!
    primaryColor: string; // String!
    value: string; // String!
  };
  ConnectionPromiseLine: {
    // field return type
    connectionPromiseId: string; // String!
    lineNumber: string; // String!
    primaryLine: boolean; // Boolean!
  };
  ConnectionPromiseLinesResponse: {
    // field return type
    lines: NexusGenRootTypes['ConnectionPromiseLine'][] | null; // [ConnectionPromiseLine!]
  };
  ContentAsset: {
    // field return type
    content: NexusGenRootTypes['ContentDetails'][]; // [ContentDetails!]!
  };
  ContentAssets: {
    // field return type
    assets: NexusGenRootTypes['ContentAsset'][]; // [ContentAsset!]!
  };
  ContentDetails: {
    // field return type
    assetType: NexusGenEnums['AssetType']; // AssetType!
    format: NexusGenEnums['ContentFormatType']; // ContentFormatType!
    linkName: string | null; // String
    text: string | null; // String
    type: NexusGenEnums['ContentType'] | null; // ContentType
  };
  ContentJourneyDetails: {
    // field return type
    key: string; // String!
    type: NexusGenEnums['ContentJourneyKeys']; // ContentJourneyKeys!
    url: string | null; // String
    value: string | null; // String
  };
  ContractTerm: {
    // field return type
    description: string | null; // String
    name: string | null; // String
    unit: NexusGenEnums['ContractTermUnit']; // ContractTermUnit!
    value: number; // Int!
  };
  CreditCard: {
    // field return type
    cardIssuer: string | null; // String
    cardName: string | null; // String
    ccId: string | null; // String
    expiryMonth: string | null; // String
    expiryYear: string | null; // String
    lastFourDigits: string | null; // String
  };
  CreditCardBillPaymentResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  CreditCardTopupResponse: {
    // field return type
    availableBalance: number | null; // Float
    code: number; // Int!
    message: string; // String!
    receiptNumber: string | null; // String
    reservedBalance: number | null; // Float
    success: boolean; // Boolean!
  };
  CtaOverrideDetail: {
    // field return type
    data: string | null; // String
    label: string | null; // String
    relatesTo: string | null; // String
    segment: NexusGenEnums['SegmentType'] | null; // SegmentType
    sortOrder: number | null; // Int
    style: NexusGenEnums['StyleType'] | null; // StyleType
    type: string; // String!
  };
  CurrentBalance: {
    // field return type
    due: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    overdue: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
  };
  DeleteAutoPayBillResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteAutoTopupResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteBundleResponse: {
    // field return type
    cart: NexusGenRootTypes['Cart']; // Cart!
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteConnectionPromiseLineResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteItemFromBundleResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DeleteUserPreferenceChannelResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  DestinationCode: {
    // field return type
    isoAlpha3: string; // String!
  };
  Destinations: {
    // field return type
    destinationCode: NexusGenRootTypes['DestinationCode']; // DestinationCode!
    destinationName: string; // String!
    network: string | null; // String
    rates: NexusGenRootTypes['Rate'][]; // [Rate!]!
    zone: string; // String!
  };
  DeviceGalleryFilter: {
    // field return type
    filterId: string; // String!
    name: string; // String!
    options: NexusGenRootTypes['DeviceGalleryFilterOption'][]; // [DeviceGalleryFilterOption!]!
  };
  DeviceGalleryFilterOption: {
    // field return type
    count: number; // Int!
    label: string; // String!
    optionId: string; // String!
  };
  DeviceGalleryProduct: {
    // field return type
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    brand: string | null; // String
    colors: NexusGenRootTypes['Color'][] | null; // [Color!]
    description: string | null; // String
    discountText: string | null; // String
    effectivePrice: number | null; // Float
    effectivePriceExcludingTax: number | null; // Float
    groupId: string | null; // String
    ifpId: string | null; // String
    imageUrl: string | null; // String
    isFeatured: boolean | null; // Boolean
    launchDate: string | null; // String
    name: string; // String!
    offerId: string; // String!
    planId: string | null; // String
    priceType: string | null; // String
    startPricePoint: number | null; // Float
    tag: string | null; // String
  };
  Discount: {
    // field return type
    appliedValue: number; // Float!
    discountCategory: string; // String!
    discountedValue: number; // Float!
  };
  DisplaySurchargeResponse: {
    // field return type
    surchargeValues: NexusGenRootTypes['CardDisplaySurchargeResponse'][]; // [CardDisplaySurchargeResponse!]!
  };
  EligibleLine: {
    // field return type
    accountNumber: string; // String!
    lineNumber: string; // String!
    offerId: string; // String!
    offerName: string; // String!
  };
  Entitlement: {
    // field return type
    contentKey: string | null; // String
    iconUrl: string | null; // String
    longDescription: string | null; // String
    name: string; // String!
    quantity: string | null; // String
    shortDescription: string | null; // String
    sortOrder: number | null; // Int
    type: string | null; // String
  };
  ExtrasDetail: {
    // field return type
    category: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    contentKey: string | null; // String
    description: string | null; // String
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    id: string; // String!
    name: string; // String!
    price: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    supportedDestinations: string[] | null; // [String!]
  };
  ExtrasResponse: {
    // field return type
    extrasCategories: NexusGenRootTypes['extrasCategory'][] | null; // [extrasCategory!]
    notifications: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
  };
  FieldRule: {
    // field return type
    expression: string; // String!
    message: string | null; // String
  };
  FooterContentResponse: {
    // field return type
    footerLegalLinks: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
    footerLinkMenu: NexusGenRootTypes['FooterMenuItem'][]; // [FooterMenuItem!]!
    footerSocialMediaLinks: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
  };
  FooterLinkItem: {
    // field return type
    iconName: string | null; // String
    id: string; // String!
    label: string; // String!
    url: string; // String!
  };
  FooterMenuItem: {
    // field return type
    heading: string; // String!
    id: string; // String!
    items: NexusGenRootTypes['FooterLinkItem'][]; // [FooterLinkItem!]!
    url: string; // String!
  };
  GalleryProductResponse: {
    // field return type
    filters: NexusGenRootTypes['DeviceGalleryFilter'][]; // [DeviceGalleryFilter!]!
    products: NexusGenRootTypes['DeviceGalleryProduct'][]; // [DeviceGalleryProduct!]!
    subcategories: NexusGenRootTypes['Subcategory'][]; // [Subcategory!]!
    subcategoryId: string; // String!
  };
  Group: {
    // field return type
    description: string | null; // String
    groupId: string | null; // String
    groupImages: NexusGenRootTypes['Image'][] | null; // [Image!]
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    isDefault: boolean | null; // Boolean
    name: string; // String!
    sortOrder: number | null; // Int
  };
  HeaderContent: {
    // field return type
    businessCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    businessCategoriesDesktop: NexusGenRootTypes['Category'][]; // [Category!]!
    personalCategories: NexusGenRootTypes['Category'][]; // [Category!]!
    personalCategoriesDesktop: NexusGenRootTypes['Category'][]; // [Category!]!
  };
  IfpOfferDetail: {
    // field return type
    description: string | null; // String
    id: string; // String!
    name: string; // String!
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  Image: {
    // field return type
    defaultUrl: string | null; // String
    description: string | null; // String
    id: string | null; // String
    imageId: string | null; // String
    sortOrder: number | null; // Int
    standardUrl: string | null; // String
    thumbnailUrl: string | null; // String
    tinyUrl: string | null; // String
    type: NexusGenEnums['ImageType'] | null; // ImageType
    zoomUrl: string | null; // String
  };
  InitiateCheckoutResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  Item: {
    // field return type
    action: NexusGenEnums['CartItemAction'] | null; // CartItemAction
    balanceManagement: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    basePrice: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    billingFrequency: NexusGenEnums['BillingFrequency'] | null; // BillingFrequency
    categories: string[]; // [String!]!
    contractTerm: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    dealText: string; // String!
    description: string | null; // String
    discountPrice: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    effectivePrice: NexusGenRootTypes['CartPrice'] | null; // CartPrice
    frequencyPeriod: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
    frequencyType: NexusGenEnums['FrequencyType'] | null; // FrequencyType
    frequencyValue: number | null; // Int
    imageUrl: string | null; // String
    isIncluded: boolean | null; // Boolean
    itemId: string; // String!
    offerId: string; // String!
    productOfferingId: string; // String!
    quantity: number; // Int!
    removable: boolean | null; // Boolean
    shouldHide: boolean | null; // Boolean
    title: string; // String!
  };
  KeyFloatValuePair: {
    // field return type
    key: string; // String!
    value: number; // Float!
  };
  KeyIntegerValuePair: {
    // field return type
    key: string; // String!
    value: number; // Int!
  };
  KeyStingValuePair: {
    // field return type
    key: string; // String!
    value: string; // String!
  };
  LabelFloatValuePair: {
    // field return type
    label: string; // String!
    value: number; // Float!
  };
  LabelIntegerValuePair: {
    // field return type
    label: string; // String!
    value: number; // Int!
  };
  LabelStringValuePair: {
    // field return type
    label: string; // String!
    value: string; // String!
  };
  LastBill: {
    // field return type
    billDate: string | null; // String
  };
  LastPayment: {
    // field return type
    paymentAmount: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    paymentDate: string | null; // String
  };
  Line: {
    // field return type
    allowances: NexusGenRootTypes['LineAllowancesType']; // LineAllowancesType!
    associatedUsers: NexusGenRootTypes['AssociatedUser'][]; // [AssociatedUser!]!
    balanceManagement: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
    changeExtraFeasibility: NexusGenRootTypes['OrderFeasibility']; // OrderFeasibility!
    changePlanFeasibility: NexusGenRootTypes['OrderFeasibility']; // OrderFeasibility!
    displayName: string | null; // String
    group: NexusGenRootTypes['LineShareGroupCaps']; // LineShareGroupCaps!
    groupCapUnit: NexusGenEnums['LineSoftCapUnit'] | null; // LineSoftCapUnit
    groupCapValue: number | null; // Int
    groupID: string | null; // String
    groupProfile: string | null; // String
    lineNumber: string; // String!
    plan: NexusGenRootTypes['LinePlan']; // LinePlan!
    planProductOffers: NexusGenRootTypes['PlanProductOffers']; // PlanProductOffers!
    serviceType: NexusGenEnums['LineServiceType']; // LineServiceType!
    spendHistory: NexusGenRootTypes['LineSpendHistoryResponse']; // LineSpendHistoryResponse!
    spendHistoryDetail: NexusGenRootTypes['LineSpendHistoryDetailResponse']; // LineSpendHistoryDetailResponse!
    subscription: NexusGenRootTypes['LineSubscription']; // LineSubscription!
    subscriptionActivation: NexusGenRootTypes['LineSubscriptionActivation']; // LineSubscriptionActivation!
    subscriptionProductOffers: NexusGenRootTypes['SubscriptionProductOffers']; // SubscriptionProductOffers!
    summary: NexusGenRootTypes['LineSummary']; // LineSummary!
    usageHistory: NexusGenRootTypes['LineUsageHistory']; // LineUsageHistory!
    usageHistoryDetail: NexusGenRootTypes['LineUsageHistoryDetail']; // LineUsageHistoryDetail!
    usages: NexusGenRootTypes['LineUsage'][]; // [LineUsage!]!
    usageSummary: NexusGenRootTypes['LineUsageSummary'] | null; // LineUsageSummary
    usageTransactions: NexusGenRootTypes['LineUsageTransactions']; // LineUsageTransactions!
  };
  LineAllowanceCountry: {
    // field return type
    code: string; // String!
    name: string; // String!
    network: string | null; // String
  };
  LineAllowanceDataStackAllowance: {
    // field return type
    capLimit: number; // Float!
    endDateTime: string; // String!
    id: string; // String!
    remainingVolume: number; // Float!
    startDateTime: string; // String!
    status: NexusGenEnums['LineAllowanceEntitlementStatus']; // LineAllowanceEntitlementStatus!
    usedVolume: number | null; // Float
    volumeType: NexusGenEnums['LineAllowanceVolumeType']; // LineAllowanceVolumeType!
  };
  LineAllowanceRolloverDetails: {
    // field return type
    rolloverAllowances:
      | NexusGenRootTypes['LineAllowanceRolloverDetailsRolloverAllowance'][]
      | null; // [LineAllowanceRolloverDetailsRolloverAllowance!]
  };
  LineAllowanceRolloverDetailsRolloverAllowance: {
    // field return type
    remainingAmount: number; // Float!
    remainingUnit: string; // String!
    rolloverExpiry:
      | NexusGenRootTypes['LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry'][]
      | null; // [LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry!]
    rolloverPriority: number | null; // Int
    rolloverStatus: string | null; // String
    rolloverType: string | null; // String
    usageType: string; // String!
  };
  LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry: {
    // field return type
    expiryAmount: number; // Float!
    expiryAmountUnit: string; // String!
    expiryDate: string; // String!
  };
  LineAllowanceSharePlanDetails: {
    // field return type
    groupId: string | null; // String
    lines: NexusGenRootTypes['LineAllowanceSharePlanLineDetails'][] | null; // [LineAllowanceSharePlanLineDetails!]
    type: NexusGenEnums['LineAllowanceSharePlanLineDetailSharePlanType'] | null; // LineAllowanceSharePlanLineDetailSharePlanType
  };
  LineAllowanceSharePlanLineDetails: {
    // field return type
    lineNumber: string; // String!
    planName: string | null; // String
    serviceId: string; // String!
    sharerType:
      | NexusGenEnums['LineAllowanceSharePlanLineDetailSharerType']
      | null; // LineAllowanceSharePlanLineDetailSharerType
    type: NexusGenEnums['LineAllowanceSharePlanLineDetailSharePlanType']; // LineAllowanceSharePlanLineDetailSharePlanType!
  };
  LineAllowanceSpeedAllowancesDetails: {
    // field return type
    allowanceRemainingAmount: number | null; // Float
    allowanceRemainingUnit: string | null; // String
    allowanceType: string | null; // String
    capLimit: number | null; // Float
    expiryDateTime: string | null; // String
    offerId: string | null; // String
    productName: string | null; // String
    status: NexusGenEnums['LineAllowanceSpeedAllowancesDetailStatus']; // LineAllowanceSpeedAllowancesDetailStatus!
    unitType: string | null; // String
  };
  LineAllowancesExtraDetails: {
    // field return type
    allowedCount: number | null; // Int
    availableCount: number | null; // Int
    billingFrequencyCode: string | null; // String
    billingFrequencyName: string | null; // String
    contractRenewalType: string | null; // String
    contractTermFrequency: string | null; // String
    contractTermNumber: number | null; // Int
    countries: NexusGenRootTypes['LineAllowanceCountry'][] | null; // [LineAllowanceCountry!]
    displayPriority: number | null; // Int
    entitlements: NexusGenRootTypes['LineEntitlementDetails'][] | null; // [LineEntitlementDetails!]
    offerId: string; // String!
    periodEndDate: string | null; // String
    prepaidBasePlanValuePack: boolean; // Boolean!
    price: number | null; // Float
    priceType: string | null; // String
    productId: string; // String!
    productInstanceId: string; // String!
    productName: string; // String!
    renewable: boolean | null; // Boolean
    renewalFrequency: string | null; // String
    renewalState: NexusGenEnums['LineAllowanceExtraDetailRenewalState'] | null; // LineAllowanceExtraDetailRenewalState
    status: string; // String!
    subscriptionTermName: string | null; // String
    subtype: NexusGenEnums['LineAllowanceExtraDetailSubtype']; // LineAllowanceExtraDetailSubtype!
    type: string; // String!
    usageType: string | null; // String
  };
  LineAllowancesType: {
    // field return type
    dataStackAllowances:
      | NexusGenRootTypes['LineAllowanceDataStackAllowance'][]
      | null; // [LineAllowanceDataStackAllowance!]
    entitlements: NexusGenRootTypes['LineEntitlementDetails'][] | null; // [LineEntitlementDetails!]
    extras: NexusGenRootTypes['LineAllowancesExtraDetails'][] | null; // [LineAllowancesExtraDetails!]
    rolloverDetails: NexusGenRootTypes['LineAllowanceRolloverDetails'] | null; // LineAllowanceRolloverDetails
    sharePlanDetails: NexusGenRootTypes['LineAllowanceSharePlanDetails'] | null; // LineAllowanceSharePlanDetails
    speedAllowances:
      | NexusGenRootTypes['LineAllowanceSpeedAllowancesDetails']
      | null; // LineAllowanceSpeedAllowancesDetails
  };
  LineDetails: {
    // field return type
    autoTopupDetails: NexusGenRootTypes['AutoTopupDetails'] | null; // AutoTopupDetails
  };
  LineEntitlementDetails: {
    // field return type
    description: string | null; // String
    detailedDescription: string | null; // String
    displayPriority: number | null; // Int
    entitlementQuantityUnit:
      | NexusGenEnums['LineEntitlementQuantityUnit']
      | null; // LineEntitlementQuantityUnit
    id: string; // String!
    name: string; // String!
    quantity: number | null; // Float
    subtype: string | null; // String
    throttleMessage: string | null; // String
    unlimited: boolean; // Boolean!
    usageType: string; // String!
  };
  LineNumberReservation: {
    // field return type
    lineNumber: string; // String!
    reservationId: string; // String!
  };
  LinePlan: {
    // field return type
    balanceManagement: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    contractEndDate: string | null; // String
    customerSegment: NexusGenEnums['CustomerSegment']; // CustomerSegment!
    legalCategory: string | null; // String
    lineOfBusiness: string; // String!
    offerId: string | null; // String
    planType: string; // String!
    price: number; // Float!
    productId: string; // String!
    productName: string; // String!
    showPricesIncludingGST: boolean; // Boolean!
  };
  LineResource: {
    // field return type
    isLineAccessAllowed: boolean; // Boolean!
    lineType: NexusGenEnums['LineType'] | null; // LineType
  };
  LineShareGroupCapMember: {
    // field return type
    capValue: string | null; // String
    isUncapped: boolean; // Boolean!
    serviceId: string; // String!
    status: string; // String!
    type: NexusGenEnums['LineShareGroupCapMemberType']; // LineShareGroupCapMemberType!
    unit: NexusGenEnums['LineShareGroupCapMemberUnit'] | null; // LineShareGroupCapMemberUnit
    usedValue: string | null; // String
  };
  LineShareGroupCaps: {
    // field return type
    id: string; // String!
    members: NexusGenRootTypes['LineShareGroupCapMember'][]; // [LineShareGroupCapMember!]!
    name: string; // String!
    totalData: NexusGenRootTypes['LineShareTotalData']; // LineShareTotalData!
  };
  LineShareTotalData: {
    // field return type
    unit: NexusGenEnums['LineShareGroupCapMemberUnit']; // LineShareGroupCapMemberUnit!
    value: number; // Float!
  };
  LineSpendHistoryContributingProduct: {
    // field return type
    chargeEndDateTime: string | null; // String
    chargeStartDateTime: string; // String!
    offerId: string | null; // String
    periodSpend: number; // Float!
    productEndDateTime: string | null; // String
    productName: string; // String!
  };
  LineSpendHistoryDetailResponse: {
    // field return type
    breakdownType: NexusGenEnums['LineSpendHistoryBreakdownType']; // LineSpendHistoryBreakdownType!
    contributingProducts: NexusGenRootTypes['LineSpendHistoryContributingProduct'][]; // [LineSpendHistoryContributingProduct!]!
    endDateTime: string; // String!
    gstInclusive: boolean; // Boolean!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    periodSpend: number; // Float!
    startDateTime: string; // String!
    unbilled: boolean; // Boolean!
  };
  LineSpendHistoryPeriodBreakdownDetail: {
    // field return type
    breakdownType: NexusGenEnums['LineSpendHistoryBreakdownType']; // LineSpendHistoryBreakdownType!
    periodBreakdownId: string | null; // String
    periodSpend: number; // Float!
  };
  LineSpendHistoryResponse: {
    // field return type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    averagePeriodSpend: number; // Float!
    endDateTime: string; // String!
    gstInclusive: boolean; // Boolean!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    startDateTime: string; // String!
    summarisedPeriods: NexusGenRootTypes['LineSpendHistorySummarisedPeriodSpend'][]; // [LineSpendHistorySummarisedPeriodSpend!]!
  };
  LineSpendHistorySummarisedPeriodSpend: {
    // field return type
    endDateTime: string; // String!
    periodBreakdown: NexusGenRootTypes['LineSpendHistoryPeriodBreakdownDetail'][]; // [LineSpendHistoryPeriodBreakdownDetail!]!
    periodSpend: number; // Float!
    startDateTime: string; // String!
    unbilled: boolean; // Boolean!
  };
  LineSubscription: {
    // field return type
    accountNumber: string; // String!
    assetStartDate: string; // String!
    autoRenew: NexusGenEnums['LineSubscriptionAutoRenew'] | null; // LineSubscriptionAutoRenew
    bundleOffer: NexusGenRootTypes['LineSubscriptionBundleOffer'] | null; // LineSubscriptionBundleOffer
    ctas: NexusGenRootTypes['SubscriptionCta'][] | null; // [SubscriptionCta!]
    lineNumber: string; // String!
    lockTtl: number | null; // Int
    nextRenewalDate: string | null; // String
    offer: NexusGenRootTypes['LineSubscriptionOffer']; // LineSubscriptionOffer!
    status: NexusGenRootTypes['SubscriptionStatus']; // SubscriptionStatus!
    subscriptionEndDate: string | null; // String
    username: string | null; // String
  };
  LineSubscriptionActivation: {
    // field return type
    activationUrl: string; // String!
    lockTtl: number | null; // Int
  };
  LineSubscriptionBundleOffer: {
    // field return type
    bundleOfferId: string; // String!
    name: string | null; // String
    productInstanceId: string; // String!
  };
  LineSubscriptionOffer: {
    // field return type
    name: string; // String!
    offerId: string; // String!
    productInstanceId: string; // String!
  };
  LineSubscriptions: {
    // field return type
    accountNumber: string; // String!
    assetStartDate: string; // String!
    bundleOffer: NexusGenRootTypes['LineSubscriptionsBundleOffer'] | null; // LineSubscriptionsBundleOffer
    lineNumber: string; // String!
    offer: NexusGenRootTypes['LineSubscriptionsOffer']; // LineSubscriptionsOffer!
    status: NexusGenRootTypes['LineSubscriptionsStatus']; // LineSubscriptionsStatus!
  };
  LineSubscriptionsBundleOffer: {
    // field return type
    bundleOfferId: string; // String!
    name: string | null; // String
    productInstanceId: string; // String!
  };
  LineSubscriptionsOffer: {
    // field return type
    name: string; // String!
    offerId: string; // String!
    productInstanceId: string; // String!
  };
  LineSubscriptionsStatus: {
    // field return type
    label: string | null; // String
    type: NexusGenEnums['LineSubscriptionStatus']; // LineSubscriptionStatus!
  };
  LineSummary: {
    // field return type
    accountNumber: string; // String!
    balanceManagement: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    lineNumber: string; // String!
    offerId: string; // String!
    offerName: string; // String!
    packageId: string | null; // String
    parentLine: string | null; // String
    planType: string | null; // String
    secondaryLineNumbers: string[]; // [String!]!
    status: string; // String!
    type: NexusGenEnums['LineType'] | null; // LineType
  };
  LineUsage: {
    // field return type
    billingStatus: NexusGenEnums['LineUsageBillingStatus'] | null; // LineUsageBillingStatus
    cap: NexusGenRootTypes['LineUsageCap'] | null; // LineUsageCap
    category: NexusGenEnums['LineUsageCategory']; // LineUsageCategory!
    expiry: NexusGenRootTypes['LineUsageExpiry'][] | null; // [LineUsageExpiry!]
    name: string | null; // String
    nextRenewalDate: string | null; // String
    priority: number | null; // Int
    productId: string | null; // String
    productName: string | null; // String
    remaining: NexusGenRootTypes['LineUsageCap'] | null; // LineUsageCap
    renewal: NexusGenEnums['LineUsageRenewal'] | null; // LineUsageRenewal
    roaming: boolean | null; // Boolean
    rolloverData: NexusGenRootTypes['LineUsageExpiry'] | null; // LineUsageExpiry
    rolloverExpiry: NexusGenRootTypes['LineUsageExpiry'][] | null; // [LineUsageExpiry!]
    types: string[]; // [String!]!
    uncapped: boolean; // Boolean!
    used: NexusGenRootTypes['LineUsageUsed']; // LineUsageUsed!
  };
  LineUsageCap: {
    // field return type
    unit: NexusGenEnums['LineUsageCapUnit']; // LineUsageCapUnit!
    value: number; // Float!
  };
  LineUsageExpiry: {
    // field return type
    date: string; // String!
    unit: NexusGenEnums['LineUsageCapUnit'] | null; // LineUsageCapUnit
    value: number | null; // Float
  };
  LineUsageHistory: {
    // field return type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    averageGroupPeriodUsage:
      | NexusGenRootTypes['LineUsageHistoryPeriodUsage']
      | null; // LineUsageHistoryPeriodUsage
    averagePeriodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
    endDateTime: string; // String!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    sharerType: NexusGenEnums['LineUsageHistorySharerType']; // LineUsageHistorySharerType!
    startDateTime: string; // String!
    summarisedPeriods: NexusGenRootTypes['LineUsageHistorySummaryPeriod'][]; // [LineUsageHistorySummaryPeriod!]!
  };
  LineUsageHistoryDetail: {
    // field return type
    breakdownType: NexusGenEnums['LineUsageHistoryPeriodBreakdownType']; // LineUsageHistoryPeriodBreakdownType!
    contributingProducts: NexusGenRootTypes['LineUsageHistoryDetailContributingProducts'][]; // [LineUsageHistoryDetailContributingProducts!]!
    endDateTime: string; // String!
    interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
    periodGroupUsage:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']
      | null; // LineUsageHistoryDetailPeriodUsage
    periodUsage: NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']; // LineUsageHistoryDetailPeriodUsage!
    startDateTime: string; // String!
    unbilled: boolean | null; // Boolean
  };
  LineUsageHistoryDetailContributingProducts: {
    // field return type
    acquisitionDate: string; // String!
    offerId: string | null; // String
    periodGroupLimit:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodLimit']
      | null; // LineUsageHistoryDetailPeriodLimit
    periodGroupRemaining:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodRemaining']
      | null; // LineUsageHistoryDetailPeriodRemaining
    periodGroupUsage:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']
      | null; // LineUsageHistoryDetailPeriodUsage
    periodLimit: NexusGenRootTypes['LineUsageHistoryDetailPeriodLimit'] | null; // LineUsageHistoryDetailPeriodLimit
    periodRemaining:
      | NexusGenRootTypes['LineUsageHistoryDetailPeriodRemaining']
      | null; // LineUsageHistoryDetailPeriodRemaining
    periodUsage: NexusGenRootTypes['LineUsageHistoryDetailPeriodUsage']; // LineUsageHistoryDetailPeriodUsage!
    productName: string; // String!
  };
  LineUsageHistoryDetailPeriodLimit: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryDetailPeriodRemaining: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryDetailPeriodUsage: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodBreakdown: {
    // field return type
    breakdownType: NexusGenEnums['LineUsageHistoryPeriodBreakdownType']; // LineUsageHistoryPeriodBreakdownType!
    periodBreakdownId: string | null; // String
    periodGroupLimit: NexusGenRootTypes['LineUsageHistoryPeriodLimit'] | null; // LineUsageHistoryPeriodLimit
    periodGroupRemaining:
      | NexusGenRootTypes['LineUsageHistoryPeriodRemaining']
      | null; // LineUsageHistoryPeriodRemaining
    periodGroupUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage'] | null; // LineUsageHistoryPeriodUsage
    periodLimit: NexusGenRootTypes['LineUsageHistoryPeriodLimit'] | null; // LineUsageHistoryPeriodLimit
    periodRemaining:
      | NexusGenRootTypes['LineUsageHistoryPeriodRemaining']
      | null; // LineUsageHistoryPeriodRemaining
    periodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
  };
  LineUsageHistoryPeriodLimit: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodRemaining: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistoryPeriodUsage: {
    // field return type
    unit: NexusGenEnums['LineUsageHistoryPeriodUsageUnit']; // LineUsageHistoryPeriodUsageUnit!
    value: number; // Float!
  };
  LineUsageHistorySummaryPeriod: {
    // field return type
    endDateTime: string; // String!
    periodBreakdown:
      | NexusGenRootTypes['LineUsageHistoryPeriodBreakdown'][]
      | null; // [LineUsageHistoryPeriodBreakdown!]
    periodGroupUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage'] | null; // LineUsageHistoryPeriodUsage
    periodUsage: NexusGenRootTypes['LineUsageHistoryPeriodUsage']; // LineUsageHistoryPeriodUsage!
    startDateTime: string; // String!
    unbilled: boolean | null; // Boolean
  };
  LineUsageSummary: {
    // field return type
    displayName: string | null; // String
    groupProfile: string | null; // String
    lineNumber: string; // String!
    messagePrimary: string | null; // String
    messageSecondary: string | null; // String
    messageStatus: NexusGenEnums['LineUsageMessageStatus'] | null; // LineUsageMessageStatus
    messageTertiary: string | null; // String
    productIcon: NexusGenEnums['ProductIconType'] | null; // ProductIconType
    topUpBuyExtra: NexusGenEnums['TopUpBuyExtraType'] | null; // TopUpBuyExtraType
  };
  LineUsageTransactions: {
    // field return type
    transactions: NexusGenRootTypes['UsageTransactions'][]; // [UsageTransactions!]!
  };
  LineUsageUsed: {
    // field return type
    bySharer: number | null; // Float
    unit: NexusGenEnums['LineUsageCapUnit']; // LineUsageCapUnit!
    value: number; // Float!
  };
  Location: {
    // field return type
    address: NexusGenRootTypes['AddressResponse']; // AddressResponse!
    outages: NexusGenRootTypes['PointsOfInterestOutage'][]; // [PointsOfInterestOutage!]!
    pointsOfInterest: NexusGenRootTypes['PointsOfInterestResponse'][]; // [PointsOfInterestResponse!]!
  };
  MobileType: {
    // field return type
    isValidMobile: boolean; // Boolean!
  };
  MonthlyPaymentSetup: {
    // field return type
    accountDetails: NexusGenRootTypes['AccountDetails'] | null; // AccountDetails
    creditCard: NexusGenRootTypes['CreditCard'] | null; // CreditCard
    description: string | null; // String
    status: string | null; // String
    type: NexusGenEnums['MonthlyPaymentSetupType'] | null; // MonthlyPaymentSetupType
    upcomingPayment: NexusGenRootTypes['UpcomingPayment'] | null; // UpcomingPayment
  };
  MpdPromotionsBundle: {
    // field return type
    id: string; // String!
    items: NexusGenRootTypes['MpdPromotionsBundleItem'][]; // [MpdPromotionsBundleItem!]!
  };
  MpdPromotionsBundleItem: {
    // field return type
    id: string; // String!
    price: NexusGenRootTypes['MpdPromotionsPrice'][]; // [MpdPromotionsPrice!]!
    productOfferingId: string; // String!
  };
  MpdPromotionsPrice: {
    // field return type
    basePrice: number; // Float!
    discount: NexusGenRootTypes['Discount'] | null; // Discount
    effectivePrice: number; // Float!
  };
  MpdPromotionsResponse: {
    // field return type
    bundles: NexusGenRootTypes['MpdPromotionsBundle'][]; // [MpdPromotionsBundle!]!
    price: NexusGenRootTypes['MpdPromotionsPrice'][]; // [MpdPromotionsPrice!]!
  };
  Mutation: {
    // field return type
    a2pAddContentProvider: NexusGenRootTypes['A2PAddContentProviderResponse']; // A2PAddContentProviderResponse!
    a2pAddServiceRequest: NexusGenRootTypes['A2PAddServiceRequestResponse']; // A2PAddServiceRequestResponse!
    a2pDeleteContentProvider: NexusGenRootTypes['A2PStatusResponse']; // A2PStatusResponse!
    a2pModifyContentProvider: NexusGenRootTypes['A2PStatusResponse']; // A2PStatusResponse!
    a2pModifyShortcode: NexusGenRootTypes['A2PModifyShortcodeResponse']; // A2PModifyShortcodeResponse!
    addAccountAccess: NexusGenRootTypes['AddAccountAccessResponse']; // AddAccountAccessResponse!
    addAccountToCart: NexusGenRootTypes['AddAccountToCartResponse']; // AddAccountToCartResponse!
    addAirpoints: NexusGenRootTypes['AirpointsUpdateResponse']; // AirpointsUpdateResponse!
    addBankAccountToWallet: NexusGenRootTypes['AddWalletPaymentMethodResponse']; // AddWalletPaymentMethodResponse!
    addBundles: NexusGenRootTypes['AddBundleOperationResponse']; // AddBundleOperationResponse!
    addConnectionPromiseLine: NexusGenRootTypes['AddConnectionPromiseLineResponse']; // AddConnectionPromiseLineResponse!
    addCreditCardToWallet: NexusGenRootTypes['AddWalletPaymentMethodResponse']; // AddWalletPaymentMethodResponse!
    addItemsToBundle: NexusGenRootTypes['AddItemsToBundleResponse']; // AddItemsToBundleResponse!
    addLineAccess: NexusGenRootTypes['AddLineAccessResponse']; // AddLineAccessResponse!
    deleteAirpoints: NexusGenRootTypes['AirpointsDeleteResponse']; // AirpointsDeleteResponse!
    deleteAutoTopup: NexusGenRootTypes['DeleteAutoTopupResponse']; // DeleteAutoTopupResponse!
    deleteBundle: NexusGenRootTypes['DeleteBundleResponse']; // DeleteBundleResponse!
    deleteConnectionPromiseLine: NexusGenRootTypes['DeleteConnectionPromiseLineResponse']; // DeleteConnectionPromiseLineResponse!
    deleteItemFromBundle: NexusGenRootTypes['DeleteItemFromBundleResponse']; // DeleteItemFromBundleResponse!
    initiateCheckout: NexusGenRootTypes['InitiateCheckoutResponse']; // InitiateCheckoutResponse!
    initiatePOLi: NexusGenRootTypes['PoliPayBillResponse']; // PoliPayBillResponse!
    initiateTopPOLi: NexusGenRootTypes['PoliPayBillResponse']; // PoliPayBillResponse!
    processCCPaymentWithRegisteredCard: NexusGenRootTypes['CreditCardBillPaymentResponse']; // CreditCardBillPaymentResponse!
    processNewCardBillPaymentWithRegistration: NexusGenRootTypes['NewCardBillPaymentResponse']; // NewCardBillPaymentResponse!
    processNewCardOneoffBillPayment: NexusGenRootTypes['NewCardBillPaymentResponse']; // NewCardBillPaymentResponse!
    processVoucherPayment: NexusGenRootTypes['VoucherTopupResponse']; // VoucherTopupResponse!
    removeExistingMonthlyPayment: NexusGenRootTypes['DeleteAutoPayBillResponse']; // DeleteAutoPayBillResponse!
    removeUserPreferenceChannel: NexusGenRootTypes['DeleteUserPreferenceChannelResponse']; // DeleteUserPreferenceChannelResponse!
    revokeAccess: NexusGenRootTypes['RevokeAccessResponse']; // RevokeAccessResponse!
    runBroadbandDiagnostics: NexusGenRootTypes['BroadbandDiagnosticsResultsResponse']; // BroadbandDiagnosticsResultsResponse!
    saveCheckoutStep: NexusGenRootTypes['SaveCheckoutStepResponse']; // SaveCheckoutStepResponse!
    setPrepaidAutoTopup: NexusGenRootTypes['AutoTopupResponse']; // AutoTopupResponse!
    submitCCtopupPayment: NexusGenRootTypes['CreditCardTopupResponse']; // CreditCardTopupResponse!
    submitOrder: NexusGenRootTypes['SubmitOrderResponse']; // SubmitOrderResponse!
    submitOrderSS: NexusGenRootTypes['SubmitOrderSSResponse']; // SubmitOrderSSResponse!
    submitRecommendation: NexusGenRootTypes['SubmitRecommendationResponse']; // SubmitRecommendationResponse!
    updateCartAccount: NexusGenRootTypes['Cart']; // Cart!
    updateCartUser: NexusGenRootTypes['CartView']; // CartView!
    updateConnectionPromiseLine: NexusGenRootTypes['UpdateConnectionPromiseLineResponse']; // UpdateConnectionPromiseLineResponse!
    updateName: NexusGenRootTypes['UpdateNameResponse']; // UpdateNameResponse!
    updatePreferenceChannel: NexusGenRootTypes['UpdatePreferenceChannelResponse']; // UpdatePreferenceChannelResponse!
    updateSmartCap: NexusGenRootTypes['UpdateSmartCapResponse']; // UpdateSmartCapResponse!
  };
  NewCardBillPaymentResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  NextBill: {
    // field return type
    billDate: string | null; // String
  };
  NotificationPreference: {
    // field return type
    channels: NexusGenRootTypes['PreferenceChannel'][]; // [PreferenceChannel!]!
    entityID: string; // String!
    id: string; // ID!
    line: string | null; // String
  };
  Notifications: {
    // field return type
    recommendationId: string; // String!
    text: string; // String!
    title: string | null; // String
    type: NexusGenEnums['NotificationType']; // NotificationType!
  };
  OfferDetailCategory: {
    // field return type
    categoryId: string | null; // String
    id: string; // String!
  };
  OperatingHours: {
    // field return type
    close: string | null; // String
    day: string; // String!
    open: string | null; // String
  };
  OperationTypeCtaDetails: {
    // field return type
    code: NexusGenEnums['CtaCode'] | null; // CtaCode
    label: string; // String!
  };
  OrderFeasibility: {
    // field return type
    feasibilityReason: NexusGenEnums['FeasibilityReason']; // FeasibilityReason!
    orderFeasible: boolean; // Boolean!
  };
  Parent: {
    // field return type
    key: string; // String!
    name: string; // String!
    value: string; // String!
  };
  PaymentAmount: {
    // field return type
    amount: number | null; // Float
    crDr: NexusGenEnums['CreditDebitMarker'] | null; // CreditDebitMarker
  };
  PaymentMethod: {
    // field return type
    associations: NexusGenRootTypes['PaymentMethodAssociation'][] | null; // [PaymentMethodAssociation!]
    bankAccountDetail: NexusGenRootTypes['BankAccountDetail'] | null; // BankAccountDetail
    cardDetail: NexusGenRootTypes['CardDetail'] | null; // CardDetail
    isPreferred: boolean; // Boolean!
    paymentMethodId: string; // String!
    personalisedName: string | null; // String
    source: NexusGenEnums['PaymentMethodSource'] | null; // PaymentMethodSource
    type: NexusGenEnums['PaymentMethodType']; // PaymentMethodType!
  };
  PaymentMethodAssociation: {
    // field return type
    accessType: NexusGenEnums['PaymentMethodAccessType']; // PaymentMethodAccessType!
    accountNumber: string | null; // String
    lineNumber: string | null; // String
    paymentMethodId: string; // String!
    type: NexusGenEnums['PaymentMethodAssociationType']; // PaymentMethodAssociationType!
  };
  PlanOfferDetail: {
    // field return type
    category: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    description: string | null; // String
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    name: string; // String!
    price: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  PlanProductOffers: {
    // field return type
    notifications: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  PlansMpdComparisonBundle: {
    // field return type
    id: string; // String!
    items: NexusGenRootTypes['PlansMpdComparisonItem'][]; // [PlansMpdComparisonItem!]!
    lineNumber: string | null; // String
  };
  PlansMpdComparisonDiscount: {
    // field return type
    appliedValue: number | null; // Float
    discountType: string | null; // String
  };
  PlansMpdComparisonExistingPlan: {
    // field return type
    currentPrice: NexusGenRootTypes['PlansMpdComparisonPrice']; // PlansMpdComparisonPrice!
    name: string; // String!
    productOfferingId: string; // String!
    updatedPrice: NexusGenRootTypes['PlansMpdComparisonPrice']; // PlansMpdComparisonPrice!
  };
  PlansMpdComparisonItem: {
    // field return type
    action: string; // String!
    name: string; // String!
    price: NexusGenRootTypes['PlansMpdComparisonPrice'] | null; // PlansMpdComparisonPrice
    productOfferingId: string; // String!
  };
  PlansMpdComparisonPrice: {
    // field return type
    basePrice: number; // Float!
    discount: NexusGenRootTypes['PlansMpdComparisonDiscount'] | null; // PlansMpdComparisonDiscount
    effectivePrice: number; // Float!
    period: string; // String!
    priceType: string; // String!
  };
  PlansMpdComparisonResponse: {
    // field return type
    bundles: NexusGenRootTypes['PlansMpdComparisonBundle'][] | null; // [PlansMpdComparisonBundle!]
    cartId: string; // String!
    discountChanged: boolean; // Boolean!
    existingPlans: NexusGenRootTypes['PlansMpdComparisonExistingPlan'][] | null; // [PlansMpdComparisonExistingPlan!]
  };
  PointOfInterestContact: {
    // field return type
    name: string | null; // String
    role: string | null; // String
  };
  PointOfInterestOperatingHours: {
    // field return type
    close: string | null; // String
    day: NexusGenEnums['PointOfInterestDayOfWeek']; // PointOfInterestDayOfWeek!
    open: string | null; // String
  };
  PointsOfInterestOutage: {
    // field return type
    category: string; // String!
    description: string | null; // String
    displayName: string; // String!
    endDateTime: string | null; // String
    latitude: number; // Float!
    longitude: number; // Float!
    outageType: NexusGenEnums['PointsOfInterestOutageType']; // PointsOfInterestOutageType!
    serviceAffected: NexusGenEnums['ServicesAffectedByOutageType']; // ServicesAffectedByOutageType!
    startDateTime: string | null; // String
    status: NexusGenEnums['OutageStatus'] | null; // OutageStatus
  };
  PointsOfInterestResponse: {
    // field return type
    addressLine1: string | null; // String
    addressLine2: string | null; // String
    city: string | null; // String
    contacts: NexusGenRootTypes['PointOfInterestContact'][] | null; // [PointOfInterestContact!]
    directions: string | null; // String
    displayName: string; // String!
    distanceFromLocation: number | null; // Float
    emailAddress: string | null; // String
    featured: boolean; // Boolean!
    image: string | null; // String
    isRecyclingOffered: boolean; // Boolean!
    isStore: boolean; // Boolean!
    isWifiAvailable: boolean; // Boolean!
    latitude: number; // Float!
    longitude: number; // Float!
    operatingHours: NexusGenRootTypes['PointOfInterestOperatingHours'][] | null; // [PointOfInterestOperatingHours!]
    phoneNumber: string | null; // String
    suburb: string | null; // String
  };
  PoliPayBillResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    poliPayResponse: NexusGenRootTypes['RestOfPoliPayBillResponse'] | null; // RestOfPoliPayBillResponse
    success: boolean; // Boolean!
  };
  PreferenceChannel: {
    // field return type
    entityID: string; // String!
    id: string; // ID!
    isActive: boolean | null; // Boolean
    status: string | null; // String
    type: NexusGenEnums['ChannelType'] | null; // ChannelType
    value: string | null; // String
  };
  PreferenceTopic: {
    // field return type
    description: string | null; // String
    entityID: string; // String!
    group: string; // String!
    name: string; // String!
    subtopics: NexusGenRootTypes['PreferenceTopic'][] | null; // [PreferenceTopic!]
  };
  PrepaidBalance: {
    // field return type
    balance: number; // Float!
    balanceExpiryDate: string | null; // String
    detailMessage: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
    lastTopUpAmount: number | null; // Float
    lastTopUpDate: string | null; // String
    lineNumber: string; // String!
    retrievalDate: string | null; // String
    summaryMessage: NexusGenRootTypes['BalanceInformationMessage'] | null; // BalanceInformationMessage
  };
  Price: {
    // field return type
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    description: string | null; // String
    effectivePrice: number | null; // Float
    effectivePriceExcludingTax: number | null; // Float
    frequency: NexusGenRootTypes['PriceFrequency'] | null; // PriceFrequency
    length: number | null; // Int
    priceType: string; // String!
    taxPercentage: string | null; // String
  };
  PriceFrequency: {
    // field return type
    period: NexusGenEnums['FrequencyPeriod']; // FrequencyPeriod!
    value: number; // Int!
  };
  PrimaryCategory: {
    // field return type
    id: string; // String!
    name: string; // String!
  };
  ProductCharacteristic: {
    // field return type
    addedInCart: boolean | null; // Boolean
    balanceManagement: NexusGenEnums['ProductBalanaceManagementType'] | null; // ProductBalanaceManagementType
    basePlanOfferId: string | null; // String
    entitledEntity: NexusGenEnums['EntitledEntityType'] | null; // EntitledEntityType
    isDeferrable: boolean | null; // Boolean
    isFeatured: boolean | null; // Boolean
    isIncluded: boolean | null; // Boolean
    isShippable: boolean | null; // Boolean
    partnerId: string | null; // String
    soldSeparately: boolean | null; // Boolean
  };
  ProductDetailsPlan: {
    // field return type
    contractTerm: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    ctaOverrides: NexusGenRootTypes['CtaOverrideDetail'][] | null; // [CtaOverrideDetail!]
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    group: NexusGenRootTypes['Group'] | null; // Group
    planCategories: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    planDetails: NexusGenRootTypes['ProductDetailsPlanDetail']; // ProductDetailsPlanDetail!
    planImages: NexusGenRootTypes['Image'][] | null; // [Image!]
    price: NexusGenRootTypes['ProductDetailsPlanPrice']; // ProductDetailsPlanPrice!
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productSpecification: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
  };
  ProductDetailsPlanDetail: {
    // field return type
    categoryIdentifiers: string[] | null; // [String!]
    contentKey: string | null; // String
    description: string | null; // String
    externalId: string | null; // String
    planId: string; // String!
    planName: string; // String!
    productType: string | null; // String
  };
  ProductDetailsPlanPrice: {
    // field return type
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    discountDiscription: string | null; // String
    discountPrice: string | null; // String
    priceFrequency: number | null; // Float
    pricePeriod: string | null; // String
    priceType: string; // String!
  };
  ProductDetailsResponse: {
    // field return type
    code: number; // Int!
    description: string | null; // String
    id: string; // String!
    isCategoryContainer: boolean; // Boolean!
    message: string; // String!
    name: string; // String!
    plans: NexusGenRootTypes['ProductDetailsPlan'][]; // [ProductDetailsPlan!]!
    subCategories: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    success: boolean; // Boolean!
  };
  ProductDetailsSubCategory: {
    // field return type
    defaultSelected: boolean | null; // Boolean
    id: string; // String!
    name: string; // String!
    sortOrder: number | null; // Int
    subCategories: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    visibility: boolean | null; // Boolean
  };
  ProductFeature: {
    // field return type
    band: string | null; // String
    brand: string | null; // String
    color: string | null; // String
    colorHex: string | null; // String
    primaryColor: string | null; // String
    storage: string | null; // String
  };
  ProductOfferDetailsResponse: {
    // field return type
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  ProductOfferImage: {
    // field return type
    offerId: string; // String!
    url: string | null; // String
  };
  ProductSpecification: {
    // field return type
    name: string; // String!
    sortOrder: number | null; // Int
    values: NexusGenRootTypes['ProductSpecificationValue'][]; // [ProductSpecificationValue!]!
  };
  ProductSpecificationGroup: {
    // field return type
    group: string; // String!
    specifications: NexusGenRootTypes['ProductVariantSpecification'][]; // [ProductVariantSpecification!]!
  };
  ProductVariantAssociatedPriceRule: {
    // field return type
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    description: string; // String!
    effectivePrice: number | null; // Float
    effectivePriceExcludingTax: number | null; // Float
    priceFrequencyPeriod: string | null; // String
    priceFrequencyValue: number | null; // Int
    priceLength: number | null; // Int
    pricePointID: string; // String!
    priceType: string; // String!
    ruleType: string; // String!
    sources: NexusGenRootTypes['ProductVariantOfferDetail'][]; // [ProductVariantOfferDetail!]!
  };
  ProductVariantAssociatedPrices: {
    // field return type
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    effectivePrice: number | null; // Float
    effectivePriceExcludingTax: number | null; // Float
    priceFrequencyPeriod: string | null; // String
    priceFrequencyValue: number | null; // Int
    priceLength: number | null; // Int
    priceType: string; // String!
  };
  ProductVariantOfferDetail: {
    // field return type
    associatedPriceRules:
      | NexusGenRootTypes['ProductVariantAssociatedPriceRule'][]
      | null; // [ProductVariantAssociatedPriceRule!]
    associatedPrices:
      | NexusGenRootTypes['ProductVariantAssociatedPrices'][]
      | null; // [ProductVariantAssociatedPrices!]
    basePrice: number | null; // Float
    basePriceExcludingTax: number | null; // Float
    brand: string | null; // String
    color: string | null; // String
    colorHex: string | null; // String
    description: string; // String!
    effectivePrice: number | null; // Float
    effectivePriceExcludingTax: number | null; // Float
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId: string | null; // String
    groupDescription: string | null; // String
    groupId: string | null; // String
    groupName: string | null; // String
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    isDefault: boolean | null; // Boolean
    isDeferrable: boolean | null; // Boolean
    isEligibilityCheckRequired: boolean | null; // Boolean
    isShippable: boolean | null; // Boolean
    name: string; // String!
    priceFrequencyPeriod: string | null; // String
    priceFrequencyValue: number | null; // Int
    priceLength: number | null; // Int
    priceType: string | null; // String
    primaryCategory: NexusGenRootTypes['PrimaryCategory'] | null; // PrimaryCategory
    productSpecificationGroups:
      | NexusGenRootTypes['ProductSpecificationGroup'][]
      | null; // [ProductSpecificationGroup!]
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    soldSeparately: boolean | null; // Boolean
    stock: NexusGenRootTypes['Stock'] | null; // Stock
    storage: string | null; // String
  };
  ProductVariantSpecification: {
    // field return type
    group: string | null; // String
    name: string; // String!
    sortOrder: number | null; // Int
    value: string; // String!
  };
  ProductVariantsResponse: {
    // field return type
    offerDetails: NexusGenRootTypes['ProductVariantOfferDetail'][]; // [ProductVariantOfferDetail!]!
  };
  ProfileInfo: {
    // field return type
    businessName: string | null; // String
    csrTNumber: string | null; // String
    displayName: string; // String!
    email: string; // String!
    firstName: string | null; // String
    isVerified: boolean; // Boolean!
    lastLogin: string; // String!
    lastName: string | null; // String
    loginOption: string; // String!
    mfaOption: NexusGenEnums['mfaOption']; // mfaOption!
    origin: NexusGenEnums['Origin']; // Origin!
    sparkID: string; // String!
  };
  Promotion: {
    // field return type
    contentKey: string | null; // String
    iconUrl: string | null; // String
    longDescription: string | null; // String
    name: string; // String!
    productType: NexusGenEnums['ProductType']; // ProductType!
    shortDescription: string | null; // String
    sortOrder: number | null; // Int
  };
  Query: {
    // field return type
    a2p: NexusGenRootTypes['A2POrganisationDetails']; // A2POrganisationDetails!
    accountBalance: NexusGenRootTypes['AccountBalance']; // AccountBalance!
    accountSummary: NexusGenRootTypes['AccountSummary']; // AccountSummary!
    airpoints: NexusGenRootTypes['AirpointsResponse']; // AirpointsResponse!
    authenticatedInfo: NexusGenRootTypes['AuthenticatedInfoResponse']; // AuthenticatedInfoResponse!
    availableNumbers: NexusGenRootTypes['AvailableNumbersResponse']; // AvailableNumbersResponse!
    biometricProgress: NexusGenRootTypes['BiometricProgressResponse']; // BiometricProgressResponse!
    cart: NexusGenRootTypes['Cart']; // Cart!
    cartView: NexusGenRootTypes['CartView']; // CartView!
    checkoutData: NexusGenRootTypes['CheckoutDataResponse']; // CheckoutDataResponse!
    checkoutStructure: NexusGenRootTypes['CheckoutStructureQueryResponse']; // CheckoutStructureQueryResponse!
    clickAndCollectStores: NexusGenRootTypes['StoreList']; // StoreList!
    contentAsset: NexusGenRootTypes['ContentAssets']; // ContentAssets!
    contentJourneyDetails: NexusGenRootTypes['ContentJourneyDetails'][]; // [ContentJourneyDetails!]!
    deviceGallery: NexusGenRootTypes['GalleryProductResponse']; // GalleryProductResponse!
    displaySurcharge: NexusGenRootTypes['DisplaySurchargeResponse']; // DisplaySurchargeResponse!
    existingMpdLines: NexusGenRootTypes['CartExistingMpdLine'][]; // [CartExistingMpdLine!]!
    extras: NexusGenRootTypes['ExtrasResponse']; // ExtrasResponse!
    footerContent: NexusGenRootTypes['FooterContentResponse']; // FooterContentResponse!
    headerContent: NexusGenRootTypes['HeaderContent']; // HeaderContent!
    lineDetails: NexusGenRootTypes['LineDetails']; // LineDetails!
    location: NexusGenRootTypes['Location']; // Location!
    marketingProfile: NexusGenRootTypes['UserProfile']; // UserProfile!
    me: NexusGenRootTypes['User']; // User!
    mobileType: NexusGenRootTypes['MobileType']; // MobileType!
    mpdPromotions: NexusGenRootTypes['MpdPromotionsResponse']; // MpdPromotionsResponse!
    node: NexusGenRootTypes['Node'] | null; // Node
    plansMpdComparison: NexusGenRootTypes['PlansMpdComparisonResponse']; // PlansMpdComparisonResponse!
    productDetails: NexusGenRootTypes['ProductDetailsResponse']; // ProductDetailsResponse!
    productOfferDetails: NexusGenRootTypes['ProductOfferDetailsResponse']; // ProductOfferDetailsResponse!
    productVariantsByGroupId: NexusGenRootTypes['ProductVariantsResponse']; // ProductVariantsResponse!
    relatedAddons: NexusGenRootTypes['RelatedAddonsResponse']; // RelatedAddonsResponse!
    relatedIfp: NexusGenRootTypes['IfpOfferDetail'][]; // [IfpOfferDetail!]!
    relatedPlans: NexusGenRootTypes['RelatedPlansResponse']; // RelatedPlansResponse!
    resource: NexusGenRootTypes['Resource']; // Resource!
    roamingRates: NexusGenRootTypes['RoamingRatesResponse']; // RoamingRatesResponse!
    serviceProvider: NexusGenRootTypes['ServiceProvider'] | null; // ServiceProvider
    subscriptionOffers: NexusGenRootTypes['SubscriptionOffer'][]; // [SubscriptionOffer!]!
    subscriptionsComparison: NexusGenRootTypes['SubscriptionsComparisonWithOfferDetailsResponse']; // SubscriptionsComparisonWithOfferDetailsResponse!
    troubleshooter: NexusGenRootTypes['BroadbandTroubleshooterResultsResponse']; // BroadbandTroubleshooterResultsResponse!
    upfrontPayment: NexusGenRootTypes['UpfrontPaymentResponse']; // UpfrontPaymentResponse!
  };
  Rate: {
    // field return type
    accountType: NexusGenEnums['BalanceManagement']; // BalanceManagement!
    data: string; // String!
    dataOverage: string; // String!
    moc: string; // String!
    mtc: string; // String!
    text: string; // String!
  };
  RelatedAddonsResponse: {
    // field return type
    addonAction: NexusGenEnums['AddonAction']; // AddonAction!
    addonsCart: NexusGenRootTypes['Cart'] | null; // Cart
    addonsProducts: NexusGenRootTypes['AddonsProducts'] | null; // AddonsProducts
  };
  RelatedPlansResponse: {
    // field return type
    bundles: NexusGenRootTypes['RelatedPlansResponseBundle'][]; // [RelatedPlansResponseBundle!]!
  };
  RelatedPlansResponseBundle: {
    // field return type
    id: string; // String!
    offerDetails: NexusGenRootTypes['PlanOfferDetail'][]; // [PlanOfferDetail!]!
  };
  Resource: {
    // field return type
    account: NexusGenRootTypes['AccountResource'] | null; // AccountResource
    isNumberIdentified: boolean; // Boolean!
    line: NexusGenRootTypes['LineResource'] | null; // LineResource
  };
  RestOfAddWalletPaymentMethodResponse: {
    // field return type
    isDuplicate: boolean | null; // Boolean
    paymentMethodId: string; // String!
    source: NexusGenEnums['PaymentMethodSource'] | null; // PaymentMethodSource
  };
  RestOfPoliPayBillResponse: {
    // field return type
    redirectUrl: string; // String!
    token: string; // String!
  };
  RevokeAccessResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  RoamingRatesResponse: {
    // field return type
    destinations: NexusGenRootTypes['Destinations'][]; // [Destinations!]!
  };
  SaveCheckoutStepResponse: {
    // field return type
    cart: NexusGenRootTypes['Cart']; // Cart!
    checkoutData: NexusGenRootTypes['CheckoutDataResponse']; // CheckoutDataResponse!
    checkoutStructure: NexusGenRootTypes['CheckoutStructureQueryResponse']; // CheckoutStructureQueryResponse!
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  ServiceProvider: {
    // field return type
    name: string; // String!
    serviceProviderId: string; // String!
  };
  Stock: {
    // field return type
    status: NexusGenEnums['StatusType']; // StatusType!
    storeStatus: NexusGenEnums['StatusType']; // StatusType!
    warehouseStatus: NexusGenEnums['StatusType']; // StatusType!
  };
  Store: {
    // field return type
    address: string | null; // String
    id: string; // String!
    inStock: boolean; // Boolean!
    name: string; // String!
    operatingHours: NexusGenRootTypes['OperatingHours'][] | null; // [OperatingHours!]
    phoneNumber: string | null; // String
    storeImage: string | null; // String
  };
  StoreList: {
    // field return type
    storeList: NexusGenRootTypes['Store'][] | null; // [Store!]
  };
  Subcategory: {
    // field return type
    categoryId: string; // String!
    defaultSelected: string | null; // String
    name: string; // String!
    sortOrder: number | null; // Int
    visibility: boolean | null; // Boolean
  };
  SubmitOrderResponse: {
    // field return type
    code: number; // Int!
    confirmationEmailId: string | null; // String
    message: string; // String!
    orderNumber: string | null; // String
    success: boolean; // Boolean!
  };
  SubmitOrderSSResponse: {
    // field return type
    code: number; // Int!
    confirmationEmailId: string | null; // String
    message: string; // String!
    orderNumber: string | null; // String
    success: boolean; // Boolean!
  };
  SubmitRecommendationResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  SubscriptionComparisonOffer: {
    // field return type
    brand: string | null; // String
    iconUrl: string | null; // String
    isIncluded: boolean | null; // Boolean
    offerId: string; // String!
    offerName: string; // String!
    price: NexusGenRootTypes['SubscriptionsComparisonOfferPrice'] | null; // SubscriptionsComparisonOfferPrice
  };
  SubscriptionCta: {
    // field return type
    label: string; // String!
    type: NexusGenEnums['LineSubscriptionCta']; // LineSubscriptionCta!
    webLink: string | null; // String
  };
  SubscriptionOffer: {
    // field return type
    accountNumbers: string[] | null; // [String!]
    ctas: NexusGenRootTypes['SubscriptionOfferCta'][] | null; // [SubscriptionOfferCta!]
    lineNumbers: string[] | null; // [String!]
    name: string; // String!
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  SubscriptionOfferCta: {
    // field return type
    ctaType: NexusGenEnums['SubscriptionOfferCtaType']; // SubscriptionOfferCtaType!
    label: string; // String!
  };
  SubscriptionProductOffers: {
    // field return type
    notifications: NexusGenRootTypes['Notifications'][] | null; // [Notifications!]
    offerDetails: NexusGenRootTypes['BaseOfferDetail'][]; // [BaseOfferDetail!]!
  };
  SubscriptionStatus: {
    // field return type
    label: string | null; // String
    type: NexusGenEnums['LineSubscriptionStatus']; // LineSubscriptionStatus!
  };
  SubscriptionsComparisonCtas: {
    // field return type
    type: NexusGenEnums['SubscriptionComparisonCTAType']; // SubscriptionComparisonCTAType!
  };
  SubscriptionsComparisonOfferPrice: {
    // field return type
    basePrice: number | null; // Float
    description: string | null; // String
    frequencyPeriod: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
  };
  SubscriptionsComparisonWithOfferDetailsResponse: {
    // field return type
    comparisons: NexusGenRootTypes['SubscriptionsComparisons'][]; // [SubscriptionsComparisons!]!
  };
  SubscriptionsComparisons: {
    // field return type
    available: NexusGenRootTypes['SubscriptionComparisonOffer'] | null; // SubscriptionComparisonOffer
    ctas: NexusGenRootTypes['SubscriptionsComparisonCtas'][] | null; // [SubscriptionsComparisonCtas!]
    recommendationId: string; // String!
    unavailable: NexusGenRootTypes['SubscriptionComparisonOffer'] | null; // SubscriptionComparisonOffer
  };
  Summary: {
    // field return type
    billingFrequency: NexusGenEnums['BillingFrequency'] | null; // BillingFrequency
    discount: number | null; // Float
    frequencyPeriod: NexusGenEnums['FrequencyPeriod'] | null; // FrequencyPeriod
    frequencyType: NexusGenEnums['FrequencyType']; // FrequencyType!
    frequencyValue: number | null; // Int
    gst: number; // Float!
    subtotal: number; // Float!
    taxExclusiveDiscount: number | null; // Float
    taxExclusiveSubtotal: number; // Float!
    taxExclusiveTotal: number; // Float!
    total: number; // Float!
  };
  TopupCardDetails: {
    // field return type
    lastFourDigits: string; // String!
  };
  TopupSettings: {
    // field return type
    cardDetails: NexusGenRootTypes['TopupCardDetails']; // TopupCardDetails!
    monthlyTopupLimit: number | null; // Float
    nextPaymentDate: string | null; // String
    thresholdAmount: number | null; // Float
    topupAmount: number; // Float!
  };
  Transaction: {
    // field return type
    currentBalance: number; // Float!
    description: string; // String!
    isDebit: boolean; // Boolean!
    startDateTime: string; // String!
    type: string; // String!
    value: number; // Float!
  };
  UpcomingPayment: {
    // field return type
    paymentAmount: NexusGenRootTypes['PaymentAmount'] | null; // PaymentAmount
    paymentDate: string | null; // String
    paymentFrequency: string | null; // String
    paymentMethodId: string | null; // String
  };
  UpdateConnectionPromiseLineResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdateNameResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdatePreferenceChannelResponse: {
    // field return type
    channelPreference: NexusGenRootTypes['PreferenceChannel'] | null; // PreferenceChannel
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpdateSmartCapResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  UpfrontPaymentItem: {
    // field return type
    description: string; // String!
    imagePath: string; // String!
    itemId: string; // String!
    price: number; // Float!
    title: string; // String!
  };
  UpfrontPaymentResponse: {
    // field return type
    items: NexusGenRootTypes['UpfrontPaymentItem'][]; // [UpfrontPaymentItem!]!
    monthlyIfpAmount: number; // Float!
    requiredUpfrontAmount: number; // Float!
  };
  UsageTransactions: {
    // field return type
    currentBalance: number; // Float!
    description: string; // String!
    endDateTime: string; // String!
    isDebit: boolean; // Boolean!
    previousBalance: number; // Float!
    startDateTime: string; // String!
    transactionType: NexusGenEnums['UsageTransactionType']; // UsageTransactionType!
    type: string; // String!
    value: number; // Float!
  };
  User: {
    // field return type
    accessibleAccounts: NexusGenRootTypes['AccountAccessInformation'][]; // [AccountAccessInformation!]!
    accountBalance: NexusGenRootTypes['AccountBalance']; // AccountBalance!
    accountList: NexusGenRootTypes['AccountList'][]; // [AccountList!]!
    accounts: NexusGenRootTypes['AccountAccessInformation'][]; // [AccountAccessInformation!]!
    accountTransactions: NexusGenRootTypes['AccountTransactionsDetails']; // AccountTransactionsDetails!
    billSummary: NexusGenRootTypes['BillSummary']; // BillSummary!
    connectionPromise: NexusGenRootTypes['ConnectionPromiseLinesResponse']; // ConnectionPromiseLinesResponse!
    eligibleLines: NexusGenRootTypes['EligibleLine'][]; // [EligibleLine!]!
    line: NexusGenRootTypes['Line']; // Line!
    lines: NexusGenRootTypes['Line'][] | null; // [Line!]
    lineSummaries: NexusGenRootTypes['LineSummary'][]; // [LineSummary!]!
    notificationPreference: Array<
      NexusGenRootTypes['NotificationPreference'] | null
    >; // [NotificationPreference]!
    paymentMethods: NexusGenRootTypes['PaymentMethod'][]; // [PaymentMethod!]!
    preferenceTopics: NexusGenRootTypes['PreferenceTopic'][]; // [PreferenceTopic!]!
    prepaidBalance: NexusGenRootTypes['PrepaidBalance']; // PrepaidBalance!
    profile: NexusGenRootTypes['ProfileInfo']; // ProfileInfo!
    subscriptions: NexusGenRootTypes['LineSubscriptions'][]; // [LineSubscriptions!]!
    transactionList: NexusGenRootTypes['Transaction'][]; // [Transaction!]!
    usageSummary: NexusGenRootTypes['LineUsageSummary'][] | null; // [LineUsageSummary!]
  };
  UserProfile: {
    // field return type
    attributes: NexusGenRootTypes['UserProfileAttribute']; // UserProfileAttribute!
    profileInfo: NexusGenRootTypes['UserProfileInfo']; // UserProfileInfo!
    social: NexusGenRootTypes['UserProfileSocial'] | null; // UserProfileSocial
  };
  UserProfileAttribute: {
    // field return type
    access: NexusGenRootTypes['UserProfileAttributeAccess'] | null; // UserProfileAttributeAccess
    authState: string | null; // String
    line: NexusGenRootTypes['UserProfileAttributeLine'] | null; // UserProfileAttributeLine
    loginOption: string | null; // String
    multiFactorAuthType: string | null; // String
    product: NexusGenRootTypes['UserProfileAttributeProduct'] | null; // UserProfileAttributeProduct
    rememberMe: boolean | null; // Boolean
    sparkCRM: NexusGenRootTypes['CRMAttributes'] | null; // CRMAttributes
  };
  UserProfileAttributeAccess: {
    // field return type
    numberOfAccess: string | null; // String
    numberOfAccount: string | null; // String
    numberOfPostpaidMobile: string | null; // String
    numberOfPrepaidMobile: string | null; // String
  };
  UserProfileAttributeLine: {
    // field return type
    customer: NexusGenRootTypes['UserProfileAttributeLineCustomer'] | null; // UserProfileAttributeLineCustomer
    product: NexusGenRootTypes['UserProfileAttributeLineProduct'] | null; // UserProfileAttributeLineProduct
  };
  UserProfileAttributeLineCustomer: {
    // field return type
    legalCategory: string | null; // String
    lineOfBusiness: string | null; // String
    segment: string | null; // String
  };
  UserProfileAttributeLineProduct: {
    // field return type
    servicePlanID: string | null; // String
    servicePlanName: string | null; // String
    servicePlanType: string | null; // String
  };
  UserProfileAttributeProduct: {
    // field return type
    numberOfBroadband: string | null; // String
    numberOfLandline: string | null; // String
    numberOfPostpaidMobile: string | null; // String
    numberOfPrepaidMobile: string | null; // String
    numberOfProduct: string | null; // String
    productTypes: string | null; // String
  };
  UserProfileInfo: {
    // field return type
    profileID: string; // String!
  };
  UserProfileSocial: {
    // field return type
    apple: string | null; // String
    facebook: string | null; // String
    google: string | null; // String
  };
  VoucherResponse: {
    // field return type
    availableBalance: number | null; // Float
    receiptNumber: string | null; // String
    redeemedAmount: number; // Float!
    reservedBalance: number | null; // Float
  };
  VoucherTopupResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    voucherResponse: NexusGenRootTypes['VoucherResponse'] | null; // VoucherResponse
  };
  extrasCategory: {
    // field return type
    defaultSelected: boolean | null; // Boolean
    description: string | null; // String
    id: string; // String!
    isCategoryContainer: boolean | null; // Boolean
    name: string; // String!
    offers: NexusGenRootTypes['ExtrasDetail'][] | null; // [ExtrasDetail!]
    sortOrder: number | null; // Int
    subCategories: NexusGenRootTypes['ProductDetailsSubCategory'][] | null; // [ProductDetailsSubCategory!]
    visibility: boolean | null; // Boolean
  };
  A2PCustomerShortcodeBase: {
    // field return type
    ctas: NexusGenEnums['A2PShortcodeCTA'][]; // [A2PShortcodeCTA!]!
    customerName: string; // String!
    customerNumber: string; // String!
    shortCodeNumber: number; // Int!
    status: NexusGenEnums['A2PShortcodeStatus']; // A2PShortcodeStatus!
    usage: NexusGenRootTypes['A2PCustomerUsage']; // A2PCustomerUsage!
  };
  A2PResponsePeriod: {
    // field return type
    dateTimeEnd: string | null; // String
    dateTimeStart: string | null; // String
    interval: NexusGenEnums['A2POverviewInterval'] | null; // A2POverviewInterval
    length: number | null; // Int
  };
  BaseOfferDetailInterface: {
    // field return type
    associatedPriceRules: NexusGenRootTypes['AssociatedPriceRule'][] | null; // [AssociatedPriceRule!]
    category: NexusGenRootTypes['OfferDetailCategory'][] | null; // [OfferDetailCategory!]
    contentKey: string | null; // String
    contractTerm: NexusGenRootTypes['ContractTerm'] | null; // ContractTerm
    description: string | null; // String
    entitlements: NexusGenRootTypes['Entitlement'][] | null; // [Entitlement!]
    externalId: string | null; // String
    group: NexusGenRootTypes['Group'] | null; // Group
    id: string; // String!
    images: NexusGenRootTypes['Image'][] | null; // [Image!]
    isGrandfathered: boolean | null; // Boolean
    name: string; // String!
    offerId: string | null; // String
    price: NexusGenRootTypes['Price'] | null; // Price
    productCharacteristics: NexusGenRootTypes['ProductCharacteristic'] | null; // ProductCharacteristic
    productFeatures: NexusGenRootTypes['ProductFeature'] | null; // ProductFeature
    productSpecifications: NexusGenRootTypes['ProductSpecification'][] | null; // [ProductSpecification!]
    productType: string | null; // String
    promotions: NexusGenRootTypes['Promotion'][] | null; // [Promotion!]
    stock: NexusGenRootTypes['Stock'] | null; // Stock
    supportedDestinations: string[] | null; // [String!]
  };
  GenericMutationResponse: {
    // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  };
  Node: {
    // field return type
    id: string; // ID!
  };
  ProductSpecificationValue: {
    // field return type
    group: string | null; // String
    sortOrder: number | null; // Int
    value: string; // String!
  };
}

export interface NexusGenFieldTypeNames {
  A2PAddContentProviderResponse: {
    // field return type name
    code: 'Int';
    contentProviderId: 'String';
    message: 'String';
    success: 'Boolean';
  };
  A2PAddServiceRequestResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    serviceRequestId: 'String';
    success: 'Boolean';
  };
  A2PAdminOverview: {
    // field return type name
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    interval: 'A2POverviewInterval';
    length: 'Int';
    pendingShortcodesCount: 'Int';
    suspendedShortcodesCount: 'Int';
    totalCustomersCount: 'Int';
    totalShortcodesCount: 'Int';
  };
  A2PAdminShortcodeItem: {
    // field return type name
    ctas: 'A2PShortcodeCTA';
    customerName: 'String';
    customerNumber: 'Int';
    deliveredSmsCount: 'Int';
    failedSmsCount: 'Int';
    sentSmsCount: 'Int';
    shortCodeNumber: 'Int';
    status: 'A2PShortcodeStatus';
    totalSmsCount: 'Int';
    type: 'A2PShortcodeType';
  };
  A2PAdminShortcodesOverview: {
    // field return type name
    activeShortcodesCount: 'Int';
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    interval: 'A2POverviewInterval';
    length: 'Int';
    pendingShortcodesCount: 'Int';
    suspendedShortcodesCount: 'Int';
    totalShortcodesCount: 'Int';
  };
  A2PCustomerContentProvider: {
    // field return type name
    contentProviderId: 'Int';
    contentProviderName: 'String';
    ctas: 'A2PCustomerContentProviderCTA';
    customerCareUrl: 'String';
    customerName: 'String';
    customerNumber: 'String';
    helpdeskEmail: 'String';
    phoneNumber: 'String';
  };
  A2PCustomerOverview: {
    // field return type name
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    deliveredSmsCount: 'Int';
    failedSmsCount: 'Int';
    interval: 'A2POverviewInterval';
    length: 'Int';
    sentSmsCount: 'Int';
    totalSmsCount: 'Int';
  };
  A2PCustomerServiceRequest: {
    // field return type name
    assignedShortcodeNumber: 'String';
    contentProviderId: 'Int';
    dateTimeCreated: 'String';
    dateTimeModified: 'String';
    messageType: 'A2PCustomerServiceProviderMessageType';
    requestedShortcodeNumber: 'String';
    serviceRequestId: 'String';
    status: 'A2PCustomerServiceProviderStatus';
  };
  A2PCustomerShortcode: {
    // field return type name
    carriers: 'A2PServiceRequestCarrier';
    contentProviderId: 'Int';
    ctas: 'A2PShortcodeCTA';
    customerName: 'String';
    customerNumber: 'String';
    expectedMessageVolume: 'A2PServiceRequestMessageVolume';
    firstName: 'String';
    jobTitle: 'String';
    lastName: 'String';
    messageType: 'A2PServiceRequestMessageType';
    messageUsage: 'A2PServiceRequestMessageUsage';
    mobileOriginatingMessageExample: 'String';
    mobileTerminatingMessageExample: 'String';
    predictedPeakTimeDescription: 'String';
    preferredNumber: 'String';
    serviceComplianceDescription: 'String';
    serviceDescription: 'String';
    serviceEndDateTime: 'String';
    serviceMarketingChannels: 'String';
    serviceName: 'String';
    shortCodeNumber: 'Int';
    signature: 'String';
    status: 'A2PShortcodeStatus';
    usage: 'A2PCustomerUsage';
  };
  A2PCustomerShortcodeListItem: {
    // field return type name
    ctas: 'A2PShortcodeCTA';
    customerName: 'String';
    customerNumber: 'String';
    shortCodeNumber: 'Int';
    status: 'A2PShortcodeStatus';
    type: 'A2PShortcodeType';
    usage: 'A2PCustomerUsage';
  };
  A2PCustomerUsage: {
    // field return type name
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    interval: 'A2POverviewInterval';
    length: 'Int';
    series: 'A2PCustomerUsageItem';
  };
  A2PCustomerUsageItem: {
    // field return type name
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    deliveredSmsCount: 'Int';
    failedSmsCount: 'Int';
    sentSmsCount: 'Int';
    totalSmsCount: 'Int';
  };
  A2PModifyShortcodeResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  A2POrganisationDetails: {
    // field return type name
    adminOverview: 'A2PAdminOverview';
    adminShortcodes: 'A2PAdminShortcodeItem';
    adminShortcodesOverview: 'A2PAdminShortcodesOverview';
    contentProviders: 'A2PCustomerContentProvider';
    customerNumber: 'String';
    overview: 'A2PCustomerOverview';
    serviceRequests: 'A2PCustomerServiceRequest';
    shortcode: 'A2PCustomerShortcode';
    shortcodes: 'A2PCustomerShortcodeListItem';
    usage: 'A2PCustomerUsage';
  };
  A2PStatusResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    status: 'Boolean';
    success: 'Boolean';
  };
  AccountAccessInformation: {
    // field return type name
    accountNumber: 'String';
    associatedUsers: 'AssociatedUser';
    balanceManagement: 'BalanceManagement';
    displayName: 'String';
    lines: 'Line';
    statusText: 'String';
  };
  AccountAssociatedProduct: {
    // field return type name
    assetId: 'String';
    ifpEligible: 'Boolean';
    lineNumber: 'String';
    offerId: 'String';
    offerName: 'String';
    productInstanceId: 'String';
  };
  AccountBalance: {
    // field return type name
    accountNumber: 'String';
    currentBalance: 'CurrentBalance';
    currentBillCycle: 'Int';
    detailMessage: 'BalanceInformationMessage';
    firstName: 'String';
    lastBill: 'LastBill';
    lastName: 'String';
    lastPayment: 'LastPayment';
    monthlyPaymentSetup: 'MonthlyPaymentSetup';
    nextBill: 'NextBill';
    summaryMessage: 'BalanceInformationMessage';
  };
  AccountDetails: {
    // field return type name
    accountName: 'String';
    accountNumber: 'String';
    accountNumberSuffix: 'String';
    bank: 'String';
    bankNumber: 'String';
    branchName: 'String';
    branchNumber: 'String';
  };
  AccountList: {
    // field return type name
    accountId: 'String';
    accountNumber: 'String';
    balanceManagement: 'BalanceManagement';
    businessName: 'String';
    customerNumber: 'String';
    customerSegment: 'String';
    firstName: 'String';
    inCollections: 'Boolean';
    lastName: 'String';
    products: 'AccountAssociatedProduct';
    segment: 'Segment';
    status: 'String';
  };
  AccountResource: {
    // field return type name
    hasBusinessName: 'Boolean';
    isAccountAccessAllowed: 'Boolean';
    isPasswordProtected: 'Boolean';
  };
  AccountSummary: {
    // field return type name
    firstName: 'String';
    lastName: 'String';
  };
  AccountTransactionDetail: {
    // field return type name
    billId: 'String';
    calculatedBalance: 'Float';
    date: 'String';
    description: 'String';
    type: 'TransactionType';
    value: 'Float';
  };
  AccountTransactionsDetails: {
    // field return type name
    details: 'AccountTransactionDetail';
  };
  AddAccountAccessResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    nextStep: 'AddAccountAccessNextSection';
    success: 'Boolean';
    title: 'String';
  };
  AddAccountToCartResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AddBundleOperationResponse: {
    // field return type name
    bundles: 'AddBundlesResponse';
    cart: 'Cart';
    cartId: 'String';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AddBundlesResponse: {
    // field return type name
    bundleId: 'String';
    categoryId: 'String';
    categoryName: 'String';
    isAffected: 'Boolean';
    items: 'AddBundlesResponseItem';
  };
  AddBundlesResponseItem: {
    // field return type name
    itemId: 'String';
    offerId: 'String';
  };
  AddConnectionPromiseLineResponse: {
    // field return type name
    code: 'Int';
    connectionPromiseId: 'String';
    message: 'String';
    success: 'Boolean';
  };
  AddItemsToBundleResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AddLineAccessResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    nextStep: 'AddLineAccessNextSection';
    success: 'Boolean';
    title: 'String';
  };
  AddWalletPaymentMethodResponse: {
    // field return type name
    addWalletPaymentMethodResponse: 'RestOfAddWalletPaymentMethodResponse';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AddonOfferDetail: {
    // field return type name
    associatedPriceRules: 'AssociatedPriceRule';
    bundleId: 'String';
    category: 'OfferDetailCategory';
    categoryIdentifier: 'String';
    contentKey: 'String';
    contractTerm: 'ContractTerm';
    description: 'String';
    entitlements: 'Entitlement';
    externalId: 'String';
    group: 'Group';
    id: 'String';
    images: 'Image';
    isAccountLevel: 'Boolean';
    isGrandfathered: 'Boolean';
    name: 'String';
    offerId: 'String';
    price: 'Price';
    productCharacteristics: 'ProductCharacteristic';
    productFeatures: 'ProductFeature';
    productSpecifications: 'ProductSpecification';
    productType: 'String';
    promotions: 'Promotion';
    stock: 'Stock';
    supportedDestinations: 'String';
  };
  AddonsProducts: {
    // field return type name
    accessoryBundles: 'AddonOfferDetail';
    insuranceBundles: 'AddonOfferDetail';
    vasBundles: 'AddonOfferDetail';
  };
  AddressDetail: {
    // field return type name
    addressLine1: 'String';
    addressLine2: 'String';
    addressLine3: 'String';
    addressLine4: 'String';
    elid: 'String';
    latitude: 'Float';
    longitude: 'Float';
  };
  AddressResponse: {
    // field return type name
    detail: 'AddressDetail';
    suggestions: 'AddressSuggestion';
  };
  AddressSuggestion: {
    // field return type name
    elid: 'String';
    label: 'String';
  };
  AirpointsDeleteResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AirpointsResponse: {
    // field return type name
    airpointsNumber: 'String';
    firstName: 'String';
    lastName: 'String';
    status: 'String';
  };
  AirpointsUpdateResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AssociatedPriceRule: {
    // field return type name
    description: 'String';
    price: 'Price';
    pricePointID: 'String';
    ruleType: 'RuleType';
    sources: 'BaseOfferDetail';
  };
  AssociatedUser: {
    // field return type name
    businessName: 'String';
    email: 'String';
    entityID: 'String';
    firstName: 'String';
    isPending: 'Boolean';
    lastName: 'String';
    role: 'String';
    type: 'AccessType';
  };
  Auth: {
    // field return type name
    isAuthenticated: 'Boolean';
    isGuest: 'Boolean';
  };
  AuthenticatedInfoResponse: {
    // field return type name
    hasSparkId: 'Boolean';
    isGuest: 'Boolean';
    isLoggedIn: 'Boolean';
    profile: 'ProfileInfo';
  };
  AutoTopupDetails: {
    // field return type name
    topupSettings: 'TopupSettings';
  };
  AutoTopupResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  AvailableNumbersResponse: {
    // field return type name
    code: 'Int';
    lineNumber: 'String';
    lineNumberReservationChunkIndex: 'Int';
    lineNumberReservationChunks: 'LineNumberReservation';
    lineNumberReservations: 'LineNumberReservation';
    lineNumbers: 'String';
    message: 'String';
    pagingId: 'String';
    reservationId: 'String';
    success: 'Boolean';
  };
  BalanceInformationMessage: {
    // field return type name
    otherCtas: 'OperationTypeCtaDetails';
    primary: 'String';
    primaryCta: 'OperationTypeCtaDetails';
    secondary: 'String';
    secondaryCta: 'OperationTypeCtaDetails';
    status: 'BalanceMessageStatus';
    tertiary: 'String';
  };
  BankAccountDetail: {
    // field return type name
    accountName: 'String';
    accountNumber: 'String';
    bankName: 'String';
    bankType: 'PaymentMethodBankType';
  };
  BaseOfferDetail: {
    // field return type name
    associatedPriceRules: 'AssociatedPriceRule';
    category: 'OfferDetailCategory';
    contentKey: 'String';
    contractTerm: 'ContractTerm';
    description: 'String';
    entitlements: 'Entitlement';
    externalId: 'String';
    group: 'Group';
    id: 'String';
    images: 'Image';
    isGrandfathered: 'Boolean';
    name: 'String';
    offerId: 'String';
    price: 'Price';
    productCharacteristics: 'ProductCharacteristic';
    productFeatures: 'ProductFeature';
    productSpecifications: 'ProductSpecification';
    productType: 'String';
    promotions: 'Promotion';
    stock: 'Stock';
    supportedDestinations: 'String';
  };
  BillBreakdown: {
    // field return type name
    billId: 'String';
    charges: 'BillBreakdownCharge';
    date: 'String';
    title: 'String';
  };
  BillBreakdownCharge: {
    // field return type name
    type: 'String';
    value: 'Float';
  };
  BillSummary: {
    // field return type name
    bills: 'BillBreakdown';
  };
  BiometricProgressResponse: {
    // field return type name
    infoBanner: 'BiometricProgressInfoBanner';
    isContinueEnabled: 'Boolean';
    showResend: 'Boolean';
    steps: 'BiometricProgressStep';
  };
  BiometricProgressStep: {
    // field return type name
    label: 'String';
    status: 'BiometricProgressStepStatus';
    stepId: 'String';
  };
  BroadbandDiagnostics: {
    // field return type name
    modemModel: 'String';
    results: 'BroadbandDiagnosticsResult';
    testSuiteCompleted: 'Boolean';
    testSuiteType: 'BroadbandDiagnosticsTestSuiteType';
  };
  BroadbandDiagnosticsAvailableCTA: {
    // field return type name
    ctaType: 'BroadbandDiagnosticsCtaType';
    label: 'String';
    webAction: 'String';
  };
  BroadbandDiagnosticsResult: {
    // field return type name
    availableCTAs: 'BroadbandDiagnosticsAvailableCTA';
    desc: 'String';
    diagnosticSummaryCode: 'String';
    testExecuted: 'Boolean';
    testLabel: 'String';
    testPassed: 'Boolean';
    testType: 'BroadbandDiagnosticsTestType';
    title: 'String';
  };
  BroadbandDiagnosticsResultsResponse: {
    // field return type name
    broadbandDiagnostics: 'BroadbandDiagnostics';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  BroadbandTroubleshooterAvailableCTA: {
    // field return type name
    label: 'String';
    type: 'BroadbandTroubleshooterCTAType';
    webCTA: 'String';
  };
  BroadbandTroubleshooterBody: {
    // field return type name
    componentType: 'BroadbandTroubleshooterComponentType';
    copy: 'String';
  };
  BroadbandTroubleshooterGallery: {
    // field return type name
    url: 'String';
  };
  BroadbandTroubleshooterResultsResponse: {
    // field return type name
    diagnosticSummaryCode: 'String';
    helpSteps: 'BroadbandTroubleshooterStep';
    initialStep: 'String';
    modemImage: 'String';
    modemManufacturer: 'String';
    modemSerialNumber: 'String';
    stepForModemModel: 'String';
  };
  BroadbandTroubleshooterStep: {
    // field return type name
    bodyList: 'BroadbandTroubleshooterBody';
    ctaList: 'BroadbandTroubleshooterAvailableCTA';
    ctaTitle: 'String';
    imageList: 'BroadbandTroubleshooterGallery';
    stepId: 'String';
    title: 'String';
  };
  Bundle: {
    // field return type name
    bundleId: 'String';
    categoryId: 'String';
    filteredItems: 'Item';
    isLineNumberRequired: 'Boolean';
    items: 'Item';
    lineNumber: 'String';
    offerIds: 'String';
  };
  CRMAttributes: {
    // field return type name
    legalCategory: 'String';
    lineOfBusiness: 'String';
    segment: 'String';
  };
  CardDetail: {
    // field return type name
    brand: 'CardBrand';
    cardName: 'String';
    cardType: 'String';
    creditCardType: 'PaymentMethodCardType';
    expiryMonth: 'Int';
    expiryYear: 'Int';
    maskedCardNumber: 'String';
  };
  CardDisplaySurchargeResponse: {
    // field return type name
    amex: 'String';
    dinersClub: 'String';
    displayText: 'String';
    masterCard: 'String';
    operationType: 'String';
    visa: 'String';
  };
  Cart: {
    // field return type name
    accountNumber: 'String';
    auth: 'Auth';
    bundles: 'Bundle';
    cartId: 'String';
    id: 'String';
    isAccountNumberRequired: 'Boolean';
    productOfferImages: 'ProductOfferImage';
    segment: 'String';
    shippableItems: 'Item';
    summaries: 'Summary';
  };
  CartExistingMpdLine: {
    // field return type name
    currentDiscountPercentage: 'Discount';
    currentPrice: 'Float';
    description: 'String';
    existingDiscountPercentage: 'Discount';
    lineNumber: 'String';
    updatedPrice: 'Float';
  };
  CartPrice: {
    // field return type name
    taxExclusiveValue: 'Float';
    value: 'Float';
  };
  CartView: {
    // field return type name
    cart: 'Cart';
    id: 'ID';
    mandatoryAction: 'CartViewMandatoryAction';
    screen: 'CartViewScreen';
  };
  Category: {
    // field return type name
    iconName: 'String';
    label: 'String';
    url: 'String';
  };
  CheckoutDataFieldEntry: {
    // field return type name
    name: 'String';
    value: 'String';
  };
  CheckoutDataResponse: {
    // field return type name
    id: 'ID';
    sections: 'CheckoutDataSection';
  };
  CheckoutDataSection: {
    // field return type name
    sectionId: 'String';
    steps: 'CheckoutDataStep';
  };
  CheckoutDataStep: {
    // field return type name
    entries: 'CheckoutDataFieldEntry';
    offerContainerId: 'String';
    stepId: 'String';
    stepPath: 'String';
  };
  CheckoutField: {
    // field return type name
    component: 'CheckoutFieldComponent';
    componentViewId: 'String';
    componentViewName: 'String';
    contentKey: 'String';
    customItems: 'String';
    dataRef: 'CheckoutFieldDataRef';
    defaultValue: 'String';
    fieldType: 'CheckoutFieldComponent';
    filterDate: 'String';
    infoLayerContentKey: 'String';
    key: 'String';
    label: 'String';
    maximumRule: 'FieldRule';
    minimumRule: 'FieldRule';
    name: 'String';
    options: 'CheckoutFieldOption';
    parent: 'Parent';
    placeholder: 'String';
    regionId: 'String';
    required: 'Boolean';
    shouldHideWhenSingleOption: 'Boolean';
    shouldMask: 'Boolean';
    showInSummary: 'Boolean';
    summaryLabel: 'String';
    summaryTemplate: 'String';
    validationRule: 'FieldRule';
    visibilityExpression: 'String';
  };
  CheckoutFieldDataRef: {
    // field return type name
    id: 'String';
    text: 'String';
  };
  CheckoutFieldOption: {
    // field return type name
    iconName: 'String';
    label: 'String';
    sublabel: 'String';
    value: 'String';
    visibility: 'Boolean';
  };
  CheckoutSection: {
    // field return type name
    descriptionContentKey: 'String';
    name: 'String';
    sectionId: 'String';
    steps: 'CheckoutStep';
  };
  CheckoutStep: {
    // field return type name
    bundleId: 'String';
    fields: 'CheckoutField';
    itemId: 'String';
    name: 'String';
    nameExpression: 'String';
    stepId: 'String';
    stepPath: 'String';
  };
  CheckoutStructureQueryResponse: {
    // field return type name
    id: 'String';
    sections: 'CheckoutSection';
  };
  Color: {
    // field return type name
    name: 'String';
    primaryColor: 'String';
    value: 'String';
  };
  ConnectionPromiseLine: {
    // field return type name
    connectionPromiseId: 'String';
    lineNumber: 'String';
    primaryLine: 'Boolean';
  };
  ConnectionPromiseLinesResponse: {
    // field return type name
    lines: 'ConnectionPromiseLine';
  };
  ContentAsset: {
    // field return type name
    content: 'ContentDetails';
  };
  ContentAssets: {
    // field return type name
    assets: 'ContentAsset';
  };
  ContentDetails: {
    // field return type name
    assetType: 'AssetType';
    format: 'ContentFormatType';
    linkName: 'String';
    text: 'String';
    type: 'ContentType';
  };
  ContentJourneyDetails: {
    // field return type name
    key: 'String';
    type: 'ContentJourneyKeys';
    url: 'String';
    value: 'String';
  };
  ContractTerm: {
    // field return type name
    description: 'String';
    name: 'String';
    unit: 'ContractTermUnit';
    value: 'Int';
  };
  CreditCard: {
    // field return type name
    cardIssuer: 'String';
    cardName: 'String';
    ccId: 'String';
    expiryMonth: 'String';
    expiryYear: 'String';
    lastFourDigits: 'String';
  };
  CreditCardBillPaymentResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  CreditCardTopupResponse: {
    // field return type name
    availableBalance: 'Float';
    code: 'Int';
    message: 'String';
    receiptNumber: 'String';
    reservedBalance: 'Float';
    success: 'Boolean';
  };
  CtaOverrideDetail: {
    // field return type name
    data: 'String';
    label: 'String';
    relatesTo: 'String';
    segment: 'SegmentType';
    sortOrder: 'Int';
    style: 'StyleType';
    type: 'String';
  };
  CurrentBalance: {
    // field return type name
    due: 'PaymentAmount';
    overdue: 'PaymentAmount';
  };
  DeleteAutoPayBillResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DeleteAutoTopupResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DeleteBundleResponse: {
    // field return type name
    cart: 'Cart';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DeleteConnectionPromiseLineResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DeleteItemFromBundleResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DeleteUserPreferenceChannelResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  DestinationCode: {
    // field return type name
    isoAlpha3: 'String';
  };
  Destinations: {
    // field return type name
    destinationCode: 'DestinationCode';
    destinationName: 'String';
    network: 'String';
    rates: 'Rate';
    zone: 'String';
  };
  DeviceGalleryFilter: {
    // field return type name
    filterId: 'String';
    name: 'String';
    options: 'DeviceGalleryFilterOption';
  };
  DeviceGalleryFilterOption: {
    // field return type name
    count: 'Int';
    label: 'String';
    optionId: 'String';
  };
  DeviceGalleryProduct: {
    // field return type name
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    brand: 'String';
    colors: 'Color';
    description: 'String';
    discountText: 'String';
    effectivePrice: 'Float';
    effectivePriceExcludingTax: 'Float';
    groupId: 'String';
    ifpId: 'String';
    imageUrl: 'String';
    isFeatured: 'Boolean';
    launchDate: 'String';
    name: 'String';
    offerId: 'String';
    planId: 'String';
    priceType: 'String';
    startPricePoint: 'Float';
    tag: 'String';
  };
  Discount: {
    // field return type name
    appliedValue: 'Float';
    discountCategory: 'String';
    discountedValue: 'Float';
  };
  DisplaySurchargeResponse: {
    // field return type name
    surchargeValues: 'CardDisplaySurchargeResponse';
  };
  EligibleLine: {
    // field return type name
    accountNumber: 'String';
    lineNumber: 'String';
    offerId: 'String';
    offerName: 'String';
  };
  Entitlement: {
    // field return type name
    contentKey: 'String';
    iconUrl: 'String';
    longDescription: 'String';
    name: 'String';
    quantity: 'String';
    shortDescription: 'String';
    sortOrder: 'Int';
    type: 'String';
  };
  ExtrasDetail: {
    // field return type name
    category: 'OfferDetailCategory';
    contentKey: 'String';
    description: 'String';
    entitlements: 'Entitlement';
    id: 'String';
    name: 'String';
    price: 'Price';
    productCharacteristics: 'ProductCharacteristic';
    promotions: 'Promotion';
    supportedDestinations: 'String';
  };
  ExtrasResponse: {
    // field return type name
    extrasCategories: 'extrasCategory';
    notifications: 'Notifications';
  };
  FieldRule: {
    // field return type name
    expression: 'String';
    message: 'String';
  };
  FooterContentResponse: {
    // field return type name
    footerLegalLinks: 'FooterLinkItem';
    footerLinkMenu: 'FooterMenuItem';
    footerSocialMediaLinks: 'FooterLinkItem';
  };
  FooterLinkItem: {
    // field return type name
    iconName: 'String';
    id: 'String';
    label: 'String';
    url: 'String';
  };
  FooterMenuItem: {
    // field return type name
    heading: 'String';
    id: 'String';
    items: 'FooterLinkItem';
    url: 'String';
  };
  GalleryProductResponse: {
    // field return type name
    filters: 'DeviceGalleryFilter';
    products: 'DeviceGalleryProduct';
    subcategories: 'Subcategory';
    subcategoryId: 'String';
  };
  Group: {
    // field return type name
    description: 'String';
    groupId: 'String';
    groupImages: 'Image';
    id: 'String';
    images: 'Image';
    isDefault: 'Boolean';
    name: 'String';
    sortOrder: 'Int';
  };
  HeaderContent: {
    // field return type name
    businessCategories: 'Category';
    businessCategoriesDesktop: 'Category';
    personalCategories: 'Category';
    personalCategoriesDesktop: 'Category';
  };
  IfpOfferDetail: {
    // field return type name
    description: 'String';
    id: 'String';
    name: 'String';
    promotions: 'Promotion';
  };
  Image: {
    // field return type name
    defaultUrl: 'String';
    description: 'String';
    id: 'String';
    imageId: 'String';
    sortOrder: 'Int';
    standardUrl: 'String';
    thumbnailUrl: 'String';
    tinyUrl: 'String';
    type: 'ImageType';
    zoomUrl: 'String';
  };
  InitiateCheckoutResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  Item: {
    // field return type name
    action: 'CartItemAction';
    balanceManagement: 'BalanceManagement';
    basePrice: 'CartPrice';
    billingFrequency: 'BillingFrequency';
    categories: 'String';
    contractTerm: 'ContractTerm';
    dealText: 'String';
    description: 'String';
    discountPrice: 'CartPrice';
    effectivePrice: 'CartPrice';
    frequencyPeriod: 'FrequencyPeriod';
    frequencyType: 'FrequencyType';
    frequencyValue: 'Int';
    imageUrl: 'String';
    isIncluded: 'Boolean';
    itemId: 'String';
    offerId: 'String';
    productOfferingId: 'String';
    quantity: 'Int';
    removable: 'Boolean';
    shouldHide: 'Boolean';
    title: 'String';
  };
  KeyFloatValuePair: {
    // field return type name
    key: 'String';
    value: 'Float';
  };
  KeyIntegerValuePair: {
    // field return type name
    key: 'String';
    value: 'Int';
  };
  KeyStingValuePair: {
    // field return type name
    key: 'String';
    value: 'String';
  };
  LabelFloatValuePair: {
    // field return type name
    label: 'String';
    value: 'Float';
  };
  LabelIntegerValuePair: {
    // field return type name
    label: 'String';
    value: 'Int';
  };
  LabelStringValuePair: {
    // field return type name
    label: 'String';
    value: 'String';
  };
  LastBill: {
    // field return type name
    billDate: 'String';
  };
  LastPayment: {
    // field return type name
    paymentAmount: 'PaymentAmount';
    paymentDate: 'String';
  };
  Line: {
    // field return type name
    allowances: 'LineAllowancesType';
    associatedUsers: 'AssociatedUser';
    balanceManagement: 'BalanceManagement';
    changeExtraFeasibility: 'OrderFeasibility';
    changePlanFeasibility: 'OrderFeasibility';
    displayName: 'String';
    group: 'LineShareGroupCaps';
    groupCapUnit: 'LineSoftCapUnit';
    groupCapValue: 'Int';
    groupID: 'String';
    groupProfile: 'String';
    lineNumber: 'String';
    plan: 'LinePlan';
    planProductOffers: 'PlanProductOffers';
    serviceType: 'LineServiceType';
    spendHistory: 'LineSpendHistoryResponse';
    spendHistoryDetail: 'LineSpendHistoryDetailResponse';
    subscription: 'LineSubscription';
    subscriptionActivation: 'LineSubscriptionActivation';
    subscriptionProductOffers: 'SubscriptionProductOffers';
    summary: 'LineSummary';
    usageHistory: 'LineUsageHistory';
    usageHistoryDetail: 'LineUsageHistoryDetail';
    usages: 'LineUsage';
    usageSummary: 'LineUsageSummary';
    usageTransactions: 'LineUsageTransactions';
  };
  LineAllowanceCountry: {
    // field return type name
    code: 'String';
    name: 'String';
    network: 'String';
  };
  LineAllowanceDataStackAllowance: {
    // field return type name
    capLimit: 'Float';
    endDateTime: 'String';
    id: 'String';
    remainingVolume: 'Float';
    startDateTime: 'String';
    status: 'LineAllowanceEntitlementStatus';
    usedVolume: 'Float';
    volumeType: 'LineAllowanceVolumeType';
  };
  LineAllowanceRolloverDetails: {
    // field return type name
    rolloverAllowances: 'LineAllowanceRolloverDetailsRolloverAllowance';
  };
  LineAllowanceRolloverDetailsRolloverAllowance: {
    // field return type name
    remainingAmount: 'Float';
    remainingUnit: 'String';
    rolloverExpiry: 'LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry';
    rolloverPriority: 'Int';
    rolloverStatus: 'String';
    rolloverType: 'String';
    usageType: 'String';
  };
  LineAllowanceRolloverDetailsRolloverAllowanceRolloverExpiry: {
    // field return type name
    expiryAmount: 'Float';
    expiryAmountUnit: 'String';
    expiryDate: 'String';
  };
  LineAllowanceSharePlanDetails: {
    // field return type name
    groupId: 'String';
    lines: 'LineAllowanceSharePlanLineDetails';
    type: 'LineAllowanceSharePlanLineDetailSharePlanType';
  };
  LineAllowanceSharePlanLineDetails: {
    // field return type name
    lineNumber: 'String';
    planName: 'String';
    serviceId: 'String';
    sharerType: 'LineAllowanceSharePlanLineDetailSharerType';
    type: 'LineAllowanceSharePlanLineDetailSharePlanType';
  };
  LineAllowanceSpeedAllowancesDetails: {
    // field return type name
    allowanceRemainingAmount: 'Float';
    allowanceRemainingUnit: 'String';
    allowanceType: 'String';
    capLimit: 'Float';
    expiryDateTime: 'String';
    offerId: 'String';
    productName: 'String';
    status: 'LineAllowanceSpeedAllowancesDetailStatus';
    unitType: 'String';
  };
  LineAllowancesExtraDetails: {
    // field return type name
    allowedCount: 'Int';
    availableCount: 'Int';
    billingFrequencyCode: 'String';
    billingFrequencyName: 'String';
    contractRenewalType: 'String';
    contractTermFrequency: 'String';
    contractTermNumber: 'Int';
    countries: 'LineAllowanceCountry';
    displayPriority: 'Int';
    entitlements: 'LineEntitlementDetails';
    offerId: 'String';
    periodEndDate: 'String';
    prepaidBasePlanValuePack: 'Boolean';
    price: 'Float';
    priceType: 'String';
    productId: 'String';
    productInstanceId: 'String';
    productName: 'String';
    renewable: 'Boolean';
    renewalFrequency: 'String';
    renewalState: 'LineAllowanceExtraDetailRenewalState';
    status: 'String';
    subscriptionTermName: 'String';
    subtype: 'LineAllowanceExtraDetailSubtype';
    type: 'String';
    usageType: 'String';
  };
  LineAllowancesType: {
    // field return type name
    dataStackAllowances: 'LineAllowanceDataStackAllowance';
    entitlements: 'LineEntitlementDetails';
    extras: 'LineAllowancesExtraDetails';
    rolloverDetails: 'LineAllowanceRolloverDetails';
    sharePlanDetails: 'LineAllowanceSharePlanDetails';
    speedAllowances: 'LineAllowanceSpeedAllowancesDetails';
  };
  LineDetails: {
    // field return type name
    autoTopupDetails: 'AutoTopupDetails';
  };
  LineEntitlementDetails: {
    // field return type name
    description: 'String';
    detailedDescription: 'String';
    displayPriority: 'Int';
    entitlementQuantityUnit: 'LineEntitlementQuantityUnit';
    id: 'String';
    name: 'String';
    quantity: 'Float';
    subtype: 'String';
    throttleMessage: 'String';
    unlimited: 'Boolean';
    usageType: 'String';
  };
  LineNumberReservation: {
    // field return type name
    lineNumber: 'String';
    reservationId: 'String';
  };
  LinePlan: {
    // field return type name
    balanceManagement: 'BalanceManagement';
    contractEndDate: 'String';
    customerSegment: 'CustomerSegment';
    legalCategory: 'String';
    lineOfBusiness: 'String';
    offerId: 'String';
    planType: 'String';
    price: 'Float';
    productId: 'String';
    productName: 'String';
    showPricesIncludingGST: 'Boolean';
  };
  LineResource: {
    // field return type name
    isLineAccessAllowed: 'Boolean';
    lineType: 'LineType';
  };
  LineShareGroupCapMember: {
    // field return type name
    capValue: 'String';
    isUncapped: 'Boolean';
    serviceId: 'String';
    status: 'String';
    type: 'LineShareGroupCapMemberType';
    unit: 'LineShareGroupCapMemberUnit';
    usedValue: 'String';
  };
  LineShareGroupCaps: {
    // field return type name
    id: 'String';
    members: 'LineShareGroupCapMember';
    name: 'String';
    totalData: 'LineShareTotalData';
  };
  LineShareTotalData: {
    // field return type name
    unit: 'LineShareGroupCapMemberUnit';
    value: 'Float';
  };
  LineSpendHistoryContributingProduct: {
    // field return type name
    chargeEndDateTime: 'String';
    chargeStartDateTime: 'String';
    offerId: 'String';
    periodSpend: 'Float';
    productEndDateTime: 'String';
    productName: 'String';
  };
  LineSpendHistoryDetailResponse: {
    // field return type name
    breakdownType: 'LineSpendHistoryBreakdownType';
    contributingProducts: 'LineSpendHistoryContributingProduct';
    endDateTime: 'String';
    gstInclusive: 'Boolean';
    interval: 'LineHistoryInterval';
    periodSpend: 'Float';
    startDateTime: 'String';
    unbilled: 'Boolean';
  };
  LineSpendHistoryPeriodBreakdownDetail: {
    // field return type name
    breakdownType: 'LineSpendHistoryBreakdownType';
    periodBreakdownId: 'String';
    periodSpend: 'Float';
  };
  LineSpendHistoryResponse: {
    // field return type name
    accountType: 'BalanceManagement';
    averagePeriodSpend: 'Float';
    endDateTime: 'String';
    gstInclusive: 'Boolean';
    interval: 'LineHistoryInterval';
    startDateTime: 'String';
    summarisedPeriods: 'LineSpendHistorySummarisedPeriodSpend';
  };
  LineSpendHistorySummarisedPeriodSpend: {
    // field return type name
    endDateTime: 'String';
    periodBreakdown: 'LineSpendHistoryPeriodBreakdownDetail';
    periodSpend: 'Float';
    startDateTime: 'String';
    unbilled: 'Boolean';
  };
  LineSubscription: {
    // field return type name
    accountNumber: 'String';
    assetStartDate: 'String';
    autoRenew: 'LineSubscriptionAutoRenew';
    bundleOffer: 'LineSubscriptionBundleOffer';
    ctas: 'SubscriptionCta';
    lineNumber: 'String';
    lockTtl: 'Int';
    nextRenewalDate: 'String';
    offer: 'LineSubscriptionOffer';
    status: 'SubscriptionStatus';
    subscriptionEndDate: 'String';
    username: 'String';
  };
  LineSubscriptionActivation: {
    // field return type name
    activationUrl: 'String';
    lockTtl: 'Int';
  };
  LineSubscriptionBundleOffer: {
    // field return type name
    bundleOfferId: 'String';
    name: 'String';
    productInstanceId: 'String';
  };
  LineSubscriptionOffer: {
    // field return type name
    name: 'String';
    offerId: 'String';
    productInstanceId: 'String';
  };
  LineSubscriptions: {
    // field return type name
    accountNumber: 'String';
    assetStartDate: 'String';
    bundleOffer: 'LineSubscriptionsBundleOffer';
    lineNumber: 'String';
    offer: 'LineSubscriptionsOffer';
    status: 'LineSubscriptionsStatus';
  };
  LineSubscriptionsBundleOffer: {
    // field return type name
    bundleOfferId: 'String';
    name: 'String';
    productInstanceId: 'String';
  };
  LineSubscriptionsOffer: {
    // field return type name
    name: 'String';
    offerId: 'String';
    productInstanceId: 'String';
  };
  LineSubscriptionsStatus: {
    // field return type name
    label: 'String';
    type: 'LineSubscriptionStatus';
  };
  LineSummary: {
    // field return type name
    accountNumber: 'String';
    balanceManagement: 'BalanceManagement';
    lineNumber: 'String';
    offerId: 'String';
    offerName: 'String';
    packageId: 'String';
    parentLine: 'String';
    planType: 'String';
    secondaryLineNumbers: 'String';
    status: 'String';
    type: 'LineType';
  };
  LineUsage: {
    // field return type name
    billingStatus: 'LineUsageBillingStatus';
    cap: 'LineUsageCap';
    category: 'LineUsageCategory';
    expiry: 'LineUsageExpiry';
    name: 'String';
    nextRenewalDate: 'String';
    priority: 'Int';
    productId: 'String';
    productName: 'String';
    remaining: 'LineUsageCap';
    renewal: 'LineUsageRenewal';
    roaming: 'Boolean';
    rolloverData: 'LineUsageExpiry';
    rolloverExpiry: 'LineUsageExpiry';
    types: 'String';
    uncapped: 'Boolean';
    used: 'LineUsageUsed';
  };
  LineUsageCap: {
    // field return type name
    unit: 'LineUsageCapUnit';
    value: 'Float';
  };
  LineUsageExpiry: {
    // field return type name
    date: 'String';
    unit: 'LineUsageCapUnit';
    value: 'Float';
  };
  LineUsageHistory: {
    // field return type name
    accountType: 'BalanceManagement';
    averageGroupPeriodUsage: 'LineUsageHistoryPeriodUsage';
    averagePeriodUsage: 'LineUsageHistoryPeriodUsage';
    endDateTime: 'String';
    interval: 'LineHistoryInterval';
    sharerType: 'LineUsageHistorySharerType';
    startDateTime: 'String';
    summarisedPeriods: 'LineUsageHistorySummaryPeriod';
  };
  LineUsageHistoryDetail: {
    // field return type name
    breakdownType: 'LineUsageHistoryPeriodBreakdownType';
    contributingProducts: 'LineUsageHistoryDetailContributingProducts';
    endDateTime: 'String';
    interval: 'LineHistoryInterval';
    periodGroupUsage: 'LineUsageHistoryDetailPeriodUsage';
    periodUsage: 'LineUsageHistoryDetailPeriodUsage';
    startDateTime: 'String';
    unbilled: 'Boolean';
  };
  LineUsageHistoryDetailContributingProducts: {
    // field return type name
    acquisitionDate: 'String';
    offerId: 'String';
    periodGroupLimit: 'LineUsageHistoryDetailPeriodLimit';
    periodGroupRemaining: 'LineUsageHistoryDetailPeriodRemaining';
    periodGroupUsage: 'LineUsageHistoryDetailPeriodUsage';
    periodLimit: 'LineUsageHistoryDetailPeriodLimit';
    periodRemaining: 'LineUsageHistoryDetailPeriodRemaining';
    periodUsage: 'LineUsageHistoryDetailPeriodUsage';
    productName: 'String';
  };
  LineUsageHistoryDetailPeriodLimit: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistoryDetailPeriodRemaining: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistoryDetailPeriodUsage: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistoryPeriodBreakdown: {
    // field return type name
    breakdownType: 'LineUsageHistoryPeriodBreakdownType';
    periodBreakdownId: 'String';
    periodGroupLimit: 'LineUsageHistoryPeriodLimit';
    periodGroupRemaining: 'LineUsageHistoryPeriodRemaining';
    periodGroupUsage: 'LineUsageHistoryPeriodUsage';
    periodLimit: 'LineUsageHistoryPeriodLimit';
    periodRemaining: 'LineUsageHistoryPeriodRemaining';
    periodUsage: 'LineUsageHistoryPeriodUsage';
  };
  LineUsageHistoryPeriodLimit: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistoryPeriodRemaining: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistoryPeriodUsage: {
    // field return type name
    unit: 'LineUsageHistoryPeriodUsageUnit';
    value: 'Float';
  };
  LineUsageHistorySummaryPeriod: {
    // field return type name
    endDateTime: 'String';
    periodBreakdown: 'LineUsageHistoryPeriodBreakdown';
    periodGroupUsage: 'LineUsageHistoryPeriodUsage';
    periodUsage: 'LineUsageHistoryPeriodUsage';
    startDateTime: 'String';
    unbilled: 'Boolean';
  };
  LineUsageSummary: {
    // field return type name
    displayName: 'String';
    groupProfile: 'String';
    lineNumber: 'String';
    messagePrimary: 'String';
    messageSecondary: 'String';
    messageStatus: 'LineUsageMessageStatus';
    messageTertiary: 'String';
    productIcon: 'ProductIconType';
    topUpBuyExtra: 'TopUpBuyExtraType';
  };
  LineUsageTransactions: {
    // field return type name
    transactions: 'UsageTransactions';
  };
  LineUsageUsed: {
    // field return type name
    bySharer: 'Float';
    unit: 'LineUsageCapUnit';
    value: 'Float';
  };
  Location: {
    // field return type name
    address: 'AddressResponse';
    outages: 'PointsOfInterestOutage';
    pointsOfInterest: 'PointsOfInterestResponse';
  };
  MobileType: {
    // field return type name
    isValidMobile: 'Boolean';
  };
  MonthlyPaymentSetup: {
    // field return type name
    accountDetails: 'AccountDetails';
    creditCard: 'CreditCard';
    description: 'String';
    status: 'String';
    type: 'MonthlyPaymentSetupType';
    upcomingPayment: 'UpcomingPayment';
  };
  MpdPromotionsBundle: {
    // field return type name
    id: 'String';
    items: 'MpdPromotionsBundleItem';
  };
  MpdPromotionsBundleItem: {
    // field return type name
    id: 'String';
    price: 'MpdPromotionsPrice';
    productOfferingId: 'String';
  };
  MpdPromotionsPrice: {
    // field return type name
    basePrice: 'Float';
    discount: 'Discount';
    effectivePrice: 'Float';
  };
  MpdPromotionsResponse: {
    // field return type name
    bundles: 'MpdPromotionsBundle';
    price: 'MpdPromotionsPrice';
  };
  Mutation: {
    // field return type name
    a2pAddContentProvider: 'A2PAddContentProviderResponse';
    a2pAddServiceRequest: 'A2PAddServiceRequestResponse';
    a2pDeleteContentProvider: 'A2PStatusResponse';
    a2pModifyContentProvider: 'A2PStatusResponse';
    a2pModifyShortcode: 'A2PModifyShortcodeResponse';
    addAccountAccess: 'AddAccountAccessResponse';
    addAccountToCart: 'AddAccountToCartResponse';
    addAirpoints: 'AirpointsUpdateResponse';
    addBankAccountToWallet: 'AddWalletPaymentMethodResponse';
    addBundles: 'AddBundleOperationResponse';
    addConnectionPromiseLine: 'AddConnectionPromiseLineResponse';
    addCreditCardToWallet: 'AddWalletPaymentMethodResponse';
    addItemsToBundle: 'AddItemsToBundleResponse';
    addLineAccess: 'AddLineAccessResponse';
    deleteAirpoints: 'AirpointsDeleteResponse';
    deleteAutoTopup: 'DeleteAutoTopupResponse';
    deleteBundle: 'DeleteBundleResponse';
    deleteConnectionPromiseLine: 'DeleteConnectionPromiseLineResponse';
    deleteItemFromBundle: 'DeleteItemFromBundleResponse';
    initiateCheckout: 'InitiateCheckoutResponse';
    initiatePOLi: 'PoliPayBillResponse';
    initiateTopPOLi: 'PoliPayBillResponse';
    processCCPaymentWithRegisteredCard: 'CreditCardBillPaymentResponse';
    processNewCardBillPaymentWithRegistration: 'NewCardBillPaymentResponse';
    processNewCardOneoffBillPayment: 'NewCardBillPaymentResponse';
    processVoucherPayment: 'VoucherTopupResponse';
    removeExistingMonthlyPayment: 'DeleteAutoPayBillResponse';
    removeUserPreferenceChannel: 'DeleteUserPreferenceChannelResponse';
    revokeAccess: 'RevokeAccessResponse';
    runBroadbandDiagnostics: 'BroadbandDiagnosticsResultsResponse';
    saveCheckoutStep: 'SaveCheckoutStepResponse';
    setPrepaidAutoTopup: 'AutoTopupResponse';
    submitCCtopupPayment: 'CreditCardTopupResponse';
    submitOrder: 'SubmitOrderResponse';
    submitOrderSS: 'SubmitOrderSSResponse';
    submitRecommendation: 'SubmitRecommendationResponse';
    updateCartAccount: 'Cart';
    updateCartUser: 'CartView';
    updateConnectionPromiseLine: 'UpdateConnectionPromiseLineResponse';
    updateName: 'UpdateNameResponse';
    updatePreferenceChannel: 'UpdatePreferenceChannelResponse';
    updateSmartCap: 'UpdateSmartCapResponse';
  };
  NewCardBillPaymentResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  NextBill: {
    // field return type name
    billDate: 'String';
  };
  NotificationPreference: {
    // field return type name
    channels: 'PreferenceChannel';
    entityID: 'String';
    id: 'ID';
    line: 'String';
  };
  Notifications: {
    // field return type name
    recommendationId: 'String';
    text: 'String';
    title: 'String';
    type: 'NotificationType';
  };
  OfferDetailCategory: {
    // field return type name
    categoryId: 'String';
    id: 'String';
  };
  OperatingHours: {
    // field return type name
    close: 'String';
    day: 'String';
    open: 'String';
  };
  OperationTypeCtaDetails: {
    // field return type name
    code: 'CtaCode';
    label: 'String';
  };
  OrderFeasibility: {
    // field return type name
    feasibilityReason: 'FeasibilityReason';
    orderFeasible: 'Boolean';
  };
  Parent: {
    // field return type name
    key: 'String';
    name: 'String';
    value: 'String';
  };
  PaymentAmount: {
    // field return type name
    amount: 'Float';
    crDr: 'CreditDebitMarker';
  };
  PaymentMethod: {
    // field return type name
    associations: 'PaymentMethodAssociation';
    bankAccountDetail: 'BankAccountDetail';
    cardDetail: 'CardDetail';
    isPreferred: 'Boolean';
    paymentMethodId: 'String';
    personalisedName: 'String';
    source: 'PaymentMethodSource';
    type: 'PaymentMethodType';
  };
  PaymentMethodAssociation: {
    // field return type name
    accessType: 'PaymentMethodAccessType';
    accountNumber: 'String';
    lineNumber: 'String';
    paymentMethodId: 'String';
    type: 'PaymentMethodAssociationType';
  };
  PlanOfferDetail: {
    // field return type name
    category: 'OfferDetailCategory';
    description: 'String';
    entitlements: 'Entitlement';
    id: 'String';
    images: 'Image';
    name: 'String';
    price: 'Price';
    productCharacteristics: 'ProductCharacteristic';
    promotions: 'Promotion';
  };
  PlanProductOffers: {
    // field return type name
    notifications: 'Notifications';
    offerDetails: 'BaseOfferDetail';
  };
  PlansMpdComparisonBundle: {
    // field return type name
    id: 'String';
    items: 'PlansMpdComparisonItem';
    lineNumber: 'String';
  };
  PlansMpdComparisonDiscount: {
    // field return type name
    appliedValue: 'Float';
    discountType: 'String';
  };
  PlansMpdComparisonExistingPlan: {
    // field return type name
    currentPrice: 'PlansMpdComparisonPrice';
    name: 'String';
    productOfferingId: 'String';
    updatedPrice: 'PlansMpdComparisonPrice';
  };
  PlansMpdComparisonItem: {
    // field return type name
    action: 'String';
    name: 'String';
    price: 'PlansMpdComparisonPrice';
    productOfferingId: 'String';
  };
  PlansMpdComparisonPrice: {
    // field return type name
    basePrice: 'Float';
    discount: 'PlansMpdComparisonDiscount';
    effectivePrice: 'Float';
    period: 'String';
    priceType: 'String';
  };
  PlansMpdComparisonResponse: {
    // field return type name
    bundles: 'PlansMpdComparisonBundle';
    cartId: 'String';
    discountChanged: 'Boolean';
    existingPlans: 'PlansMpdComparisonExistingPlan';
  };
  PointOfInterestContact: {
    // field return type name
    name: 'String';
    role: 'String';
  };
  PointOfInterestOperatingHours: {
    // field return type name
    close: 'String';
    day: 'PointOfInterestDayOfWeek';
    open: 'String';
  };
  PointsOfInterestOutage: {
    // field return type name
    category: 'String';
    description: 'String';
    displayName: 'String';
    endDateTime: 'String';
    latitude: 'Float';
    longitude: 'Float';
    outageType: 'PointsOfInterestOutageType';
    serviceAffected: 'ServicesAffectedByOutageType';
    startDateTime: 'String';
    status: 'OutageStatus';
  };
  PointsOfInterestResponse: {
    // field return type name
    addressLine1: 'String';
    addressLine2: 'String';
    city: 'String';
    contacts: 'PointOfInterestContact';
    directions: 'String';
    displayName: 'String';
    distanceFromLocation: 'Float';
    emailAddress: 'String';
    featured: 'Boolean';
    image: 'String';
    isRecyclingOffered: 'Boolean';
    isStore: 'Boolean';
    isWifiAvailable: 'Boolean';
    latitude: 'Float';
    longitude: 'Float';
    operatingHours: 'PointOfInterestOperatingHours';
    phoneNumber: 'String';
    suburb: 'String';
  };
  PoliPayBillResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    poliPayResponse: 'RestOfPoliPayBillResponse';
    success: 'Boolean';
  };
  PreferenceChannel: {
    // field return type name
    entityID: 'String';
    id: 'ID';
    isActive: 'Boolean';
    status: 'String';
    type: 'ChannelType';
    value: 'String';
  };
  PreferenceTopic: {
    // field return type name
    description: 'String';
    entityID: 'String';
    group: 'String';
    name: 'String';
    subtopics: 'PreferenceTopic';
  };
  PrepaidBalance: {
    // field return type name
    balance: 'Float';
    balanceExpiryDate: 'String';
    detailMessage: 'BalanceInformationMessage';
    lastTopUpAmount: 'Float';
    lastTopUpDate: 'String';
    lineNumber: 'String';
    retrievalDate: 'String';
    summaryMessage: 'BalanceInformationMessage';
  };
  Price: {
    // field return type name
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    description: 'String';
    effectivePrice: 'Float';
    effectivePriceExcludingTax: 'Float';
    frequency: 'PriceFrequency';
    length: 'Int';
    priceType: 'String';
    taxPercentage: 'String';
  };
  PriceFrequency: {
    // field return type name
    period: 'FrequencyPeriod';
    value: 'Int';
  };
  PrimaryCategory: {
    // field return type name
    id: 'String';
    name: 'String';
  };
  ProductCharacteristic: {
    // field return type name
    addedInCart: 'Boolean';
    balanceManagement: 'ProductBalanaceManagementType';
    basePlanOfferId: 'String';
    entitledEntity: 'EntitledEntityType';
    isDeferrable: 'Boolean';
    isFeatured: 'Boolean';
    isIncluded: 'Boolean';
    isShippable: 'Boolean';
    partnerId: 'String';
    soldSeparately: 'Boolean';
  };
  ProductDetailsPlan: {
    // field return type name
    contractTerm: 'ContractTerm';
    ctaOverrides: 'CtaOverrideDetail';
    entitlements: 'Entitlement';
    group: 'Group';
    planCategories: 'OfferDetailCategory';
    planDetails: 'ProductDetailsPlanDetail';
    planImages: 'Image';
    price: 'ProductDetailsPlanPrice';
    productCharacteristics: 'ProductCharacteristic';
    productSpecification: 'ProductSpecification';
    promotions: 'Promotion';
  };
  ProductDetailsPlanDetail: {
    // field return type name
    categoryIdentifiers: 'String';
    contentKey: 'String';
    description: 'String';
    externalId: 'String';
    planId: 'String';
    planName: 'String';
    productType: 'String';
  };
  ProductDetailsPlanPrice: {
    // field return type name
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    discountDiscription: 'String';
    discountPrice: 'String';
    priceFrequency: 'Float';
    pricePeriod: 'String';
    priceType: 'String';
  };
  ProductDetailsResponse: {
    // field return type name
    code: 'Int';
    description: 'String';
    id: 'String';
    isCategoryContainer: 'Boolean';
    message: 'String';
    name: 'String';
    plans: 'ProductDetailsPlan';
    subCategories: 'ProductDetailsSubCategory';
    success: 'Boolean';
  };
  ProductDetailsSubCategory: {
    // field return type name
    defaultSelected: 'Boolean';
    id: 'String';
    name: 'String';
    sortOrder: 'Int';
    subCategories: 'ProductDetailsSubCategory';
    visibility: 'Boolean';
  };
  ProductFeature: {
    // field return type name
    band: 'String';
    brand: 'String';
    color: 'String';
    colorHex: 'String';
    primaryColor: 'String';
    storage: 'String';
  };
  ProductOfferDetailsResponse: {
    // field return type name
    offerDetails: 'BaseOfferDetail';
  };
  ProductOfferImage: {
    // field return type name
    offerId: 'String';
    url: 'String';
  };
  ProductSpecification: {
    // field return type name
    name: 'String';
    sortOrder: 'Int';
    values: 'ProductSpecificationValue';
  };
  ProductSpecificationGroup: {
    // field return type name
    group: 'String';
    specifications: 'ProductVariantSpecification';
  };
  ProductVariantAssociatedPriceRule: {
    // field return type name
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    description: 'String';
    effectivePrice: 'Float';
    effectivePriceExcludingTax: 'Float';
    priceFrequencyPeriod: 'String';
    priceFrequencyValue: 'Int';
    priceLength: 'Int';
    pricePointID: 'String';
    priceType: 'String';
    ruleType: 'String';
    sources: 'ProductVariantOfferDetail';
  };
  ProductVariantAssociatedPrices: {
    // field return type name
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    effectivePrice: 'Float';
    effectivePriceExcludingTax: 'Float';
    priceFrequencyPeriod: 'String';
    priceFrequencyValue: 'Int';
    priceLength: 'Int';
    priceType: 'String';
  };
  ProductVariantOfferDetail: {
    // field return type name
    associatedPriceRules: 'ProductVariantAssociatedPriceRule';
    associatedPrices: 'ProductVariantAssociatedPrices';
    basePrice: 'Float';
    basePriceExcludingTax: 'Float';
    brand: 'String';
    color: 'String';
    colorHex: 'String';
    description: 'String';
    effectivePrice: 'Float';
    effectivePriceExcludingTax: 'Float';
    entitlements: 'Entitlement';
    externalId: 'String';
    groupDescription: 'String';
    groupId: 'String';
    groupName: 'String';
    id: 'String';
    images: 'Image';
    isDefault: 'Boolean';
    isDeferrable: 'Boolean';
    isEligibilityCheckRequired: 'Boolean';
    isShippable: 'Boolean';
    name: 'String';
    priceFrequencyPeriod: 'String';
    priceFrequencyValue: 'Int';
    priceLength: 'Int';
    priceType: 'String';
    primaryCategory: 'PrimaryCategory';
    productSpecificationGroups: 'ProductSpecificationGroup';
    promotions: 'Promotion';
    soldSeparately: 'Boolean';
    stock: 'Stock';
    storage: 'String';
  };
  ProductVariantSpecification: {
    // field return type name
    group: 'String';
    name: 'String';
    sortOrder: 'Int';
    value: 'String';
  };
  ProductVariantsResponse: {
    // field return type name
    offerDetails: 'ProductVariantOfferDetail';
  };
  ProfileInfo: {
    // field return type name
    businessName: 'String';
    csrTNumber: 'String';
    displayName: 'String';
    email: 'String';
    firstName: 'String';
    isVerified: 'Boolean';
    lastLogin: 'String';
    lastName: 'String';
    loginOption: 'String';
    mfaOption: 'mfaOption';
    origin: 'Origin';
    sparkID: 'String';
  };
  Promotion: {
    // field return type name
    contentKey: 'String';
    iconUrl: 'String';
    longDescription: 'String';
    name: 'String';
    productType: 'ProductType';
    shortDescription: 'String';
    sortOrder: 'Int';
  };
  Query: {
    // field return type name
    a2p: 'A2POrganisationDetails';
    accountBalance: 'AccountBalance';
    accountSummary: 'AccountSummary';
    airpoints: 'AirpointsResponse';
    authenticatedInfo: 'AuthenticatedInfoResponse';
    availableNumbers: 'AvailableNumbersResponse';
    biometricProgress: 'BiometricProgressResponse';
    cart: 'Cart';
    cartView: 'CartView';
    checkoutData: 'CheckoutDataResponse';
    checkoutStructure: 'CheckoutStructureQueryResponse';
    clickAndCollectStores: 'StoreList';
    contentAsset: 'ContentAssets';
    contentJourneyDetails: 'ContentJourneyDetails';
    deviceGallery: 'GalleryProductResponse';
    displaySurcharge: 'DisplaySurchargeResponse';
    existingMpdLines: 'CartExistingMpdLine';
    extras: 'ExtrasResponse';
    footerContent: 'FooterContentResponse';
    headerContent: 'HeaderContent';
    lineDetails: 'LineDetails';
    location: 'Location';
    marketingProfile: 'UserProfile';
    me: 'User';
    mobileType: 'MobileType';
    mpdPromotions: 'MpdPromotionsResponse';
    node: 'Node';
    plansMpdComparison: 'PlansMpdComparisonResponse';
    productDetails: 'ProductDetailsResponse';
    productOfferDetails: 'ProductOfferDetailsResponse';
    productVariantsByGroupId: 'ProductVariantsResponse';
    relatedAddons: 'RelatedAddonsResponse';
    relatedIfp: 'IfpOfferDetail';
    relatedPlans: 'RelatedPlansResponse';
    resource: 'Resource';
    roamingRates: 'RoamingRatesResponse';
    serviceProvider: 'ServiceProvider';
    subscriptionOffers: 'SubscriptionOffer';
    subscriptionsComparison: 'SubscriptionsComparisonWithOfferDetailsResponse';
    troubleshooter: 'BroadbandTroubleshooterResultsResponse';
    upfrontPayment: 'UpfrontPaymentResponse';
  };
  Rate: {
    // field return type name
    accountType: 'BalanceManagement';
    data: 'String';
    dataOverage: 'String';
    moc: 'String';
    mtc: 'String';
    text: 'String';
  };
  RelatedAddonsResponse: {
    // field return type name
    addonAction: 'AddonAction';
    addonsCart: 'Cart';
    addonsProducts: 'AddonsProducts';
  };
  RelatedPlansResponse: {
    // field return type name
    bundles: 'RelatedPlansResponseBundle';
  };
  RelatedPlansResponseBundle: {
    // field return type name
    id: 'String';
    offerDetails: 'PlanOfferDetail';
  };
  Resource: {
    // field return type name
    account: 'AccountResource';
    isNumberIdentified: 'Boolean';
    line: 'LineResource';
  };
  RestOfAddWalletPaymentMethodResponse: {
    // field return type name
    isDuplicate: 'Boolean';
    paymentMethodId: 'String';
    source: 'PaymentMethodSource';
  };
  RestOfPoliPayBillResponse: {
    // field return type name
    redirectUrl: 'String';
    token: 'String';
  };
  RevokeAccessResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  RoamingRatesResponse: {
    // field return type name
    destinations: 'Destinations';
  };
  SaveCheckoutStepResponse: {
    // field return type name
    cart: 'Cart';
    checkoutData: 'CheckoutDataResponse';
    checkoutStructure: 'CheckoutStructureQueryResponse';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  ServiceProvider: {
    // field return type name
    name: 'String';
    serviceProviderId: 'String';
  };
  Stock: {
    // field return type name
    status: 'StatusType';
    storeStatus: 'StatusType';
    warehouseStatus: 'StatusType';
  };
  Store: {
    // field return type name
    address: 'String';
    id: 'String';
    inStock: 'Boolean';
    name: 'String';
    operatingHours: 'OperatingHours';
    phoneNumber: 'String';
    storeImage: 'String';
  };
  StoreList: {
    // field return type name
    storeList: 'Store';
  };
  Subcategory: {
    // field return type name
    categoryId: 'String';
    defaultSelected: 'String';
    name: 'String';
    sortOrder: 'Int';
    visibility: 'Boolean';
  };
  SubmitOrderResponse: {
    // field return type name
    code: 'Int';
    confirmationEmailId: 'String';
    message: 'String';
    orderNumber: 'String';
    success: 'Boolean';
  };
  SubmitOrderSSResponse: {
    // field return type name
    code: 'Int';
    confirmationEmailId: 'String';
    message: 'String';
    orderNumber: 'String';
    success: 'Boolean';
  };
  SubmitRecommendationResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  SubscriptionComparisonOffer: {
    // field return type name
    brand: 'String';
    iconUrl: 'String';
    isIncluded: 'Boolean';
    offerId: 'String';
    offerName: 'String';
    price: 'SubscriptionsComparisonOfferPrice';
  };
  SubscriptionCta: {
    // field return type name
    label: 'String';
    type: 'LineSubscriptionCta';
    webLink: 'String';
  };
  SubscriptionOffer: {
    // field return type name
    accountNumbers: 'String';
    ctas: 'SubscriptionOfferCta';
    lineNumbers: 'String';
    name: 'String';
    offerDetails: 'BaseOfferDetail';
  };
  SubscriptionOfferCta: {
    // field return type name
    ctaType: 'SubscriptionOfferCtaType';
    label: 'String';
  };
  SubscriptionProductOffers: {
    // field return type name
    notifications: 'Notifications';
    offerDetails: 'BaseOfferDetail';
  };
  SubscriptionStatus: {
    // field return type name
    label: 'String';
    type: 'LineSubscriptionStatus';
  };
  SubscriptionsComparisonCtas: {
    // field return type name
    type: 'SubscriptionComparisonCTAType';
  };
  SubscriptionsComparisonOfferPrice: {
    // field return type name
    basePrice: 'Float';
    description: 'String';
    frequencyPeriod: 'FrequencyPeriod';
  };
  SubscriptionsComparisonWithOfferDetailsResponse: {
    // field return type name
    comparisons: 'SubscriptionsComparisons';
  };
  SubscriptionsComparisons: {
    // field return type name
    available: 'SubscriptionComparisonOffer';
    ctas: 'SubscriptionsComparisonCtas';
    recommendationId: 'String';
    unavailable: 'SubscriptionComparisonOffer';
  };
  Summary: {
    // field return type name
    billingFrequency: 'BillingFrequency';
    discount: 'Float';
    frequencyPeriod: 'FrequencyPeriod';
    frequencyType: 'FrequencyType';
    frequencyValue: 'Int';
    gst: 'Float';
    subtotal: 'Float';
    taxExclusiveDiscount: 'Float';
    taxExclusiveSubtotal: 'Float';
    taxExclusiveTotal: 'Float';
    total: 'Float';
  };
  TopupCardDetails: {
    // field return type name
    lastFourDigits: 'String';
  };
  TopupSettings: {
    // field return type name
    cardDetails: 'TopupCardDetails';
    monthlyTopupLimit: 'Float';
    nextPaymentDate: 'String';
    thresholdAmount: 'Float';
    topupAmount: 'Float';
  };
  Transaction: {
    // field return type name
    currentBalance: 'Float';
    description: 'String';
    isDebit: 'Boolean';
    startDateTime: 'String';
    type: 'String';
    value: 'Float';
  };
  UpcomingPayment: {
    // field return type name
    paymentAmount: 'PaymentAmount';
    paymentDate: 'String';
    paymentFrequency: 'String';
    paymentMethodId: 'String';
  };
  UpdateConnectionPromiseLineResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  UpdateNameResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  UpdatePreferenceChannelResponse: {
    // field return type name
    channelPreference: 'PreferenceChannel';
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  UpdateSmartCapResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  UpfrontPaymentItem: {
    // field return type name
    description: 'String';
    imagePath: 'String';
    itemId: 'String';
    price: 'Float';
    title: 'String';
  };
  UpfrontPaymentResponse: {
    // field return type name
    items: 'UpfrontPaymentItem';
    monthlyIfpAmount: 'Float';
    requiredUpfrontAmount: 'Float';
  };
  UsageTransactions: {
    // field return type name
    currentBalance: 'Float';
    description: 'String';
    endDateTime: 'String';
    isDebit: 'Boolean';
    previousBalance: 'Float';
    startDateTime: 'String';
    transactionType: 'UsageTransactionType';
    type: 'String';
    value: 'Float';
  };
  User: {
    // field return type name
    accessibleAccounts: 'AccountAccessInformation';
    accountBalance: 'AccountBalance';
    accountList: 'AccountList';
    accounts: 'AccountAccessInformation';
    accountTransactions: 'AccountTransactionsDetails';
    billSummary: 'BillSummary';
    connectionPromise: 'ConnectionPromiseLinesResponse';
    eligibleLines: 'EligibleLine';
    line: 'Line';
    lines: 'Line';
    lineSummaries: 'LineSummary';
    notificationPreference: 'NotificationPreference';
    paymentMethods: 'PaymentMethod';
    preferenceTopics: 'PreferenceTopic';
    prepaidBalance: 'PrepaidBalance';
    profile: 'ProfileInfo';
    subscriptions: 'LineSubscriptions';
    transactionList: 'Transaction';
    usageSummary: 'LineUsageSummary';
  };
  UserProfile: {
    // field return type name
    attributes: 'UserProfileAttribute';
    profileInfo: 'UserProfileInfo';
    social: 'UserProfileSocial';
  };
  UserProfileAttribute: {
    // field return type name
    access: 'UserProfileAttributeAccess';
    authState: 'String';
    line: 'UserProfileAttributeLine';
    loginOption: 'String';
    multiFactorAuthType: 'String';
    product: 'UserProfileAttributeProduct';
    rememberMe: 'Boolean';
    sparkCRM: 'CRMAttributes';
  };
  UserProfileAttributeAccess: {
    // field return type name
    numberOfAccess: 'String';
    numberOfAccount: 'String';
    numberOfPostpaidMobile: 'String';
    numberOfPrepaidMobile: 'String';
  };
  UserProfileAttributeLine: {
    // field return type name
    customer: 'UserProfileAttributeLineCustomer';
    product: 'UserProfileAttributeLineProduct';
  };
  UserProfileAttributeLineCustomer: {
    // field return type name
    legalCategory: 'String';
    lineOfBusiness: 'String';
    segment: 'String';
  };
  UserProfileAttributeLineProduct: {
    // field return type name
    servicePlanID: 'String';
    servicePlanName: 'String';
    servicePlanType: 'String';
  };
  UserProfileAttributeProduct: {
    // field return type name
    numberOfBroadband: 'String';
    numberOfLandline: 'String';
    numberOfPostpaidMobile: 'String';
    numberOfPrepaidMobile: 'String';
    numberOfProduct: 'String';
    productTypes: 'String';
  };
  UserProfileInfo: {
    // field return type name
    profileID: 'String';
  };
  UserProfileSocial: {
    // field return type name
    apple: 'String';
    facebook: 'String';
    google: 'String';
  };
  VoucherResponse: {
    // field return type name
    availableBalance: 'Float';
    receiptNumber: 'String';
    redeemedAmount: 'Float';
    reservedBalance: 'Float';
  };
  VoucherTopupResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
    voucherResponse: 'VoucherResponse';
  };
  extrasCategory: {
    // field return type name
    defaultSelected: 'Boolean';
    description: 'String';
    id: 'String';
    isCategoryContainer: 'Boolean';
    name: 'String';
    offers: 'ExtrasDetail';
    sortOrder: 'Int';
    subCategories: 'ProductDetailsSubCategory';
    visibility: 'Boolean';
  };
  A2PCustomerShortcodeBase: {
    // field return type name
    ctas: 'A2PShortcodeCTA';
    customerName: 'String';
    customerNumber: 'String';
    shortCodeNumber: 'Int';
    status: 'A2PShortcodeStatus';
    usage: 'A2PCustomerUsage';
  };
  A2PResponsePeriod: {
    // field return type name
    dateTimeEnd: 'String';
    dateTimeStart: 'String';
    interval: 'A2POverviewInterval';
    length: 'Int';
  };
  BaseOfferDetailInterface: {
    // field return type name
    associatedPriceRules: 'AssociatedPriceRule';
    category: 'OfferDetailCategory';
    contentKey: 'String';
    contractTerm: 'ContractTerm';
    description: 'String';
    entitlements: 'Entitlement';
    externalId: 'String';
    group: 'Group';
    id: 'String';
    images: 'Image';
    isGrandfathered: 'Boolean';
    name: 'String';
    offerId: 'String';
    price: 'Price';
    productCharacteristics: 'ProductCharacteristic';
    productFeatures: 'ProductFeature';
    productSpecifications: 'ProductSpecification';
    productType: 'String';
    promotions: 'Promotion';
    stock: 'Stock';
    supportedDestinations: 'String';
  };
  GenericMutationResponse: {
    // field return type name
    code: 'Int';
    message: 'String';
    success: 'Boolean';
  };
  Node: {
    // field return type name
    id: 'ID';
  };
  ProductSpecificationValue: {
    // field return type name
    group: 'String';
    sortOrder: 'Int';
    value: 'String';
  };
}

export interface NexusGenArgTypes {
  A2POrganisationDetails: {
    adminOverview: {
      // args
      dateRange: NexusGenEnums['A2PDateRange']; // A2PDateRange!
    };
    adminShortcodes: {
      // args
      dateRange?: NexusGenEnums['A2PDateRange'] | null; // A2PDateRange
    };
    adminShortcodesOverview: {
      // args
      dateRange: NexusGenEnums['A2PDateRange']; // A2PDateRange!
    };
    overview: {
      // args
      dateRange: NexusGenEnums['A2PDateRange']; // A2PDateRange!
    };
    shortcode: {
      // args
      shortcode: string; // String!
    };
    shortcodes: {
      // args
      dateRange?: NexusGenEnums['A2PDateRange'] | null; // A2PDateRange
      topAmount?: number | null; // Int
    };
    usage: {
      // args
      dateRange: NexusGenEnums['A2PDateRange']; // A2PDateRange!
    };
  };
  AccountAccessInformation: {
    associatedUsers: {
      // args
      includeNotFound?: boolean | null; // Boolean
      includePending: boolean | null; // Boolean
      includeRevoked?: boolean | null; // Boolean
      number?: string | null; // String
    };
  };
  AddressResponse: {
    detail: {
      // args
      elid: string; // String!
    };
    suggestions: {
      // args
      partialAddress: string; // String!
    };
  };
  Bundle: {
    filteredItems: {
      // args
      actions?: NexusGenEnums['CartItemAction'][] | null; // [CartItemAction!]
    };
  };
  Line: {
    associatedUsers: {
      // args
      includeNotFound?: boolean | null; // Boolean
      includePending: boolean | null; // Boolean
      includeRevoked?: boolean | null; // Boolean
      number?: string | null; // String
    };
    planProductOffers: {
      // args
      packInstanceId?: string | null; // String
    };
    spendHistory: {
      // args
      end?: string | null; // String
      interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
      start?: string | null; // String
    };
    spendHistoryDetail: {
      // args
      interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
      periodBreakdownId: string; // String!
    };
    subscription: {
      // args
      productInstanceId: string; // String!
    };
    subscriptionActivation: {
      // args
      productInstanceId: string; // String!
    };
    subscriptionProductOffers: {
      // args
      productInstanceId?: string | null; // String
    };
    usageHistory: {
      // args
      end?: string | null; // String
      interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
      start?: string | null; // String
      usageType: NexusGenEnums['LineUsageHistoryUsageType']; // LineUsageHistoryUsageType!
    };
    usageHistoryDetail: {
      // args
      interval: NexusGenEnums['LineHistoryInterval']; // LineHistoryInterval!
      periodBreakdownId: string; // String!
      usageType: NexusGenEnums['LineUsageHistoryUsageType']; // LineUsageHistoryUsageType!
    };
    usageTransactions: {
      // args
      end?: string | null; // String
      size?: string | null; // String
      start?: string | null; // String
    };
  };
  Location: {
    outages: {
      // args
      outageType?: NexusGenEnums['PointsOfInterestOutageType'] | null; // PointsOfInterestOutageType
      serviceAffected: NexusGenEnums['ServicesAffectedByOutageType']; // ServicesAffectedByOutageType!
    };
    pointsOfInterest: {
      // args
      location?: string | null; // String
      serviceType: NexusGenEnums['PointOfInterestServiceType']; // PointOfInterestServiceType!
    };
  };
  Mutation: {
    a2pAddContentProvider: {
      // args
      input: NexusGenInputs['A2PAddContentProviderRequest']; // A2PAddContentProviderRequest!
    };
    a2pAddServiceRequest: {
      // args
      input: NexusGenInputs['A2PAddServiceRequestRequest']; // A2PAddServiceRequestRequest!
    };
    a2pDeleteContentProvider: {
      // args
      input: NexusGenInputs['A2PDeleteContentProviderRequest']; // A2PDeleteContentProviderRequest!
    };
    a2pModifyContentProvider: {
      // args
      input: NexusGenInputs['A2PModifyContentProviderRequest']; // A2PModifyContentProviderRequest!
    };
    a2pModifyShortcode: {
      // args
      input: NexusGenInputs['A2PModifyShortcodeRequest']; // A2PModifyShortcodeRequest!
    };
    addAccountAccess: {
      // args
      input: NexusGenInputs['AddAccountAccessInput']; // AddAccountAccessInput!
    };
    addAccountToCart: {
      // args
      input: NexusGenInputs['AddAccountToCartInput']; // AddAccountToCartInput!
    };
    addAirpoints: {
      // args
      input: NexusGenInputs['AddAirpointsInput']; // AddAirpointsInput!
    };
    addBankAccountToWallet: {
      // args
      input: NexusGenInputs['BankAccountDetailInput']; // BankAccountDetailInput!
    };
    addBundles: {
      // args
      input: NexusGenInputs['AddBundlesInput']; // AddBundlesInput!
    };
    addConnectionPromiseLine: {
      // args
      input: NexusGenInputs['AddConnectionPromiseLineInput']; // AddConnectionPromiseLineInput!
    };
    addCreditCardToWallet: {
      // args
      input: NexusGenInputs['CardDetailInput']; // CardDetailInput!
    };
    addItemsToBundle: {
      // args
      input: NexusGenInputs['AddItemsToBundleInput']; // AddItemsToBundleInput!
    };
    addLineAccess: {
      // args
      input: NexusGenInputs['AddLineAccessInput']; // AddLineAccessInput!
    };
    deleteAirpoints: {
      // args
      input: NexusGenInputs['DeleteAirpointsInput']; // DeleteAirpointsInput!
    };
    deleteAutoTopup: {
      // args
      input: NexusGenInputs['DeleteAutoTopupInput']; // DeleteAutoTopupInput!
    };
    deleteBundle: {
      // args
      input: NexusGenInputs['DeleteCartBundleInput']; // DeleteCartBundleInput!
    };
    deleteConnectionPromiseLine: {
      // args
      input: NexusGenInputs['DeleteConnectionPromiseLineInput']; // DeleteConnectionPromiseLineInput!
    };
    deleteItemFromBundle: {
      // args
      input: NexusGenInputs['DeleteItemFromBundleInput']; // DeleteItemFromBundleInput!
    };
    initiateCheckout: {
      // args
      input: NexusGenInputs['InitiateCheckoutInput']; // InitiateCheckoutInput!
    };
    initiatePOLi: {
      // args
      input: NexusGenInputs['PoliPayBillInput']; // PoliPayBillInput!
    };
    initiateTopPOLi: {
      // args
      input: NexusGenInputs['TopupPoliPayBillInput']; // TopupPoliPayBillInput!
    };
    processCCPaymentWithRegisteredCard: {
      // args
      input: NexusGenInputs['CreditCardBillPaymentRequestInput']; // CreditCardBillPaymentRequestInput!
    };
    processNewCardBillPaymentWithRegistration: {
      // args
      input: NexusGenInputs['NewCardBillPaymentWithRegistrationInput']; // NewCardBillPaymentWithRegistrationInput!
    };
    processNewCardOneoffBillPayment: {
      // args
      creditCardInput?: NexusGenInputs['CardDetailInput'] | null; // CardDetailInput
      input: NexusGenInputs['NewCardOneoffBillPaymentInput']; // NewCardOneoffBillPaymentInput!
      isNewCreditCard: boolean; // Boolean!
      shouldSaveCard?: boolean | null; // Boolean
    };
    processVoucherPayment: {
      // args
      input: NexusGenInputs['VoucherPaymentInput']; // VoucherPaymentInput!
    };
    removeExistingMonthlyPayment: {
      // args
      input: NexusGenInputs['DeleteAutoPayBillInput']; // DeleteAutoPayBillInput!
    };
    removeUserPreferenceChannel: {
      // args
      input: NexusGenInputs['DeleteUserPreferenceChannelInput']; // DeleteUserPreferenceChannelInput!
    };
    revokeAccess: {
      // args
      input: NexusGenInputs['RevokeAccessInput']; // RevokeAccessInput!
    };
    runBroadbandDiagnostics: {
      // args
      input: NexusGenInputs['RunBroadbandDiagnosticsInput']; // RunBroadbandDiagnosticsInput!
    };
    saveCheckoutStep: {
      // args
      input: NexusGenInputs['SaveCheckoutStepInput']; // SaveCheckoutStepInput!
    };
    setPrepaidAutoTopup: {
      // args
      creditCardInput?: NexusGenInputs['CardDetailInput'] | null; // CardDetailInput
      input: NexusGenInputs['AutoTopupInput']; // AutoTopupInput!
      isNewCreditCard: boolean; // Boolean!
    };
    submitCCtopupPayment: {
      // args
      creditCardInput?: NexusGenInputs['CardDetailInput'] | null; // CardDetailInput
      input: NexusGenInputs['CreditCardTopupInput']; // CreditCardTopupInput!
      isNewCreditCard: boolean; // Boolean!
      lineNumber: string; // String!
      shouldSaveCard?: boolean | null; // Boolean
    };
    submitOrder: {
      // args
      input: NexusGenInputs['SubmitOrderInput']; // SubmitOrderInput!
    };
    submitOrderSS: {
      // args
      input: NexusGenInputs['SubmitOrderSSInput']; // SubmitOrderSSInput!
    };
    submitRecommendation: {
      // args
      input: NexusGenInputs['SubmitRecommendationInput']; // SubmitRecommendationInput!
    };
    updateCartAccount: {
      // args
      accountNumber: string; // String!
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    updateCartUser: {
      // args
      cartId: string; // ID!
      segment: NexusGenEnums['Segment']; // Segment!
    };
    updateConnectionPromiseLine: {
      // args
      input: NexusGenInputs['UpdateConnectionPromiseLineInput']; // UpdateConnectionPromiseLineInput!
    };
    updateName: {
      // args
      input: NexusGenInputs['UpdateNameInput']; // UpdateNameInput!
    };
    updatePreferenceChannel: {
      // args
      input: NexusGenInputs['UpdatePreferenceChannelInput']; // UpdatePreferenceChannelInput!
    };
    updateSmartCap: {
      // args
      input: NexusGenInputs['UpdateSmartCapInput']; // UpdateSmartCapInput!
    };
  };
  Query: {
    a2p: {
      // args
      customerNumber?: string | null; // String
    };
    accountBalance: {
      // args
      accountNumber: string; // String!
    };
    accountSummary: {
      // args
      accountNumber: string; // String!
    };
    airpoints: {
      // args
      accountNumber: string; // String!
    };
    availableNumbers: {
      // args
      lineNumber?: string | null; // String
      reservationId?: string | null; // String
    };
    biometricProgress: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    cart: {
      // args
      cartId?: string | null; // String
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    cartView: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    checkoutData: {
      // args
      input: NexusGenInputs['CheckoutDataInput']; // CheckoutDataInput!
    };
    checkoutStructure: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    clickAndCollectStores: {
      // args
      location?: string | null; // String
      serviceType: NexusGenEnums['StoreListServiceType']; // StoreListServiceType!
    };
    contentAsset: {
      // args
      filters: string; // String!
      format: string; // String!
      tags: string; // String!
      type: string; // String!
    };
    contentJourneyDetails: {
      // args
      journeyStepId: string; // String!
      variation?: string | null; // String
    };
    deviceGallery: {
      // args
      channel: NexusGenEnums['CartChannel']; // CartChannel!
      subcategoryId?: string | null; // String
    };
    displaySurcharge: {
      // args
      input: NexusGenInputs['DisplaySurchargeInput']; // DisplaySurchargeInput!
    };
    existingMpdLines: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    extras: {
      // args
      lineNumber: string; // String!
    };
    footerContent: {
      // args
      id: string; // String!
      site?: string | null; // String
      variation?: string | null; // String
    };
    headerContent: {
      // args
      id: string; // String!
      site?: string | null; // String
      variation?: string | null; // String
    };
    lineDetails: {
      // args
      lineNumber: string; // String!
    };
    mobileType: {
      // args
      lineNumber: string; // String!
    };
    mpdPromotions: {
      // args
      offerIds: string[]; // [String!]!
    };
    node: {
      // args
      id: string; // ID!
    };
    plansMpdComparison: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    productDetails: {
      // args
      categoryId: string; // String!
      channel: string; // String!
      recursiveSearch?: boolean | null; // Boolean
    };
    productOfferDetails: {
      // args
      externalIds?: string[] | null; // [String!]
      includePriceRules?: boolean | null; // Boolean
      offerIds?: string[] | null; // [String!]
    };
    productVariantsByGroupId: {
      // args
      input: NexusGenInputs['ProductVariantsInput']; // ProductVariantsInput!
    };
    relatedAddons: {
      // args
      bundleId: string; // String!
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
      itemIds: string[]; // [String!]!
    };
    relatedIfp: {
      // args
      input: NexusGenInputs['RelatedProductInput']; // RelatedProductInput!
    };
    relatedPlans: {
      // args
      input: NexusGenInputs['CompatibleProductsInput']; // CompatibleProductsInput!
    };
    resource: {
      // args
      resourceId: string; // String!
    };
    roamingRates: {
      // args
      accountType?: NexusGenEnums['BalanceManagement'] | null; // BalanceManagement
      destinationIso3: string[]; // [String!]!
    };
    serviceProvider: {
      // args
      lineNumber: string; // String!
    };
    subscriptionOffers: {
      // args
      groupId?: string | null; // String
    };
    subscriptionsComparison: {
      // args
      bundleId: string; // String!
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    troubleshooter: {
      // args
      diagnosticCode: string; // String!
      lineNumber: string; // String!
      modemModel?: string | null; // String
    };
    upfrontPayment: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
  };
  SaveCheckoutStepResponse: {
    cart: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    checkoutData: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
    checkoutStructure: {
      // args
      cartId: string; // String!
      channel: NexusGenEnums['CartChannel']; // CartChannel!
    };
  };
  User: {
    accessibleAccounts: {
      // args
      status?: NexusGenEnums['AccountAccessStatus'] | null; // AccountAccessStatus
    };
    accountBalance: {
      // args
      accountNumber: string; // String!
    };
    accounts: {
      // args
      status?: NexusGenEnums['AccountAccessStatus'] | null; // AccountAccessStatus
    };
    accountTransactions: {
      // args
      accountNumber: string; // String!
      endDate?: string | null; // String
      startDate?: string | null; // String
    };
    billSummary: {
      // args
      accountNumber: string; // String!
      endDate?: string | null; // String
      startDate?: string | null; // String
    };
    connectionPromise: {
      // args
      lineNumber: string; // String!
    };
    eligibleLines: {
      // args
      accountNumber?: string | null; // String
      channel: NexusGenEnums['CartChannel']; // CartChannel!
      offerId: string; // String!
    };
    line: {
      // args
      lineNumber: string; // String!
    };
    lines: {
      // args
      accessLevel?: NexusGenEnums['LineAccessLevelType'] | null; // LineAccessLevelType
    };
    lineSummaries: {
      // args
      lineTypes?: NexusGenEnums['LineType'][] | null; // [LineType!]
    };
    notificationPreference: {
      // args
      topic: string; // String!
    };
    paymentMethods: {
      // args
      associatedLineNumber?: string | null; // String
      sources?: NexusGenEnums['WalletPaymentMethodSource'][] | null; // [WalletPaymentMethodSource!]
    };
    preferenceTopics: {
      // args
      group?: string | null; // String
    };
    prepaidBalance: {
      // args
      lineNumber: string; // String!
    };
    transactionList: {
      // args
      endDate?: string | null; // String
      lineNumber: string; // String!
      paymentStatus?: NexusGenEnums['PaymentStatusType'] | null; // PaymentStatusType
      size?: number | null; // Int
      startDate?: string | null; // String
    };
  };
}

export interface NexusGenAbstractTypeMembers {
  A2PCustomerShortcodeBase:
    | 'A2PCustomerShortcode'
    | 'A2PCustomerShortcodeListItem';
  A2PResponsePeriod:
    | 'A2PAdminOverview'
    | 'A2PAdminShortcodesOverview'
    | 'A2PCustomerOverview'
    | 'A2PCustomerUsage';
  BaseOfferDetailInterface: 'BaseOfferDetail' | 'AddonOfferDetail';
  GenericMutationResponse:
    | 'A2PAddContentProviderResponse'
    | 'A2PAddServiceRequestResponse'
    | 'A2PStatusResponse'
    | 'A2PModifyShortcodeResponse'
    | 'AddAccountAccessResponse'
    | 'AddAccountToCartResponse'
    | 'AirpointsUpdateResponse'
    | 'AddWalletPaymentMethodResponse'
    | 'AddBundleOperationResponse'
    | 'AddConnectionPromiseLineResponse'
    | 'AddItemsToBundleResponse'
    | 'AddLineAccessResponse'
    | 'AirpointsDeleteResponse'
    | 'DeleteAutoTopupResponse'
    | 'DeleteBundleResponse'
    | 'DeleteConnectionPromiseLineResponse'
    | 'DeleteItemFromBundleResponse'
    | 'InitiateCheckoutResponse'
    | 'PoliPayBillResponse'
    | 'CreditCardBillPaymentResponse'
    | 'NewCardBillPaymentResponse'
    | 'VoucherTopupResponse'
    | 'DeleteAutoPayBillResponse'
    | 'DeleteUserPreferenceChannelResponse'
    | 'RevokeAccessResponse'
    | 'BroadbandDiagnosticsResultsResponse'
    | 'SaveCheckoutStepResponse'
    | 'AutoTopupResponse'
    | 'CreditCardTopupResponse'
    | 'SubmitOrderResponse'
    | 'SubmitOrderSSResponse'
    | 'SubmitRecommendationResponse'
    | 'UpdateConnectionPromiseLineResponse'
    | 'UpdateNameResponse'
    | 'UpdatePreferenceChannelResponse'
    | 'UpdateSmartCapResponse';
  Node: 'NotificationPreference' | 'PreferenceChannel';
  ProductSpecificationValue: 'ProductVariantSpecification';
}

export interface NexusGenTypeInterfaces {
  A2PAddContentProviderResponse: 'GenericMutationResponse';
  A2PAddServiceRequestResponse: 'GenericMutationResponse';
  A2PAdminOverview: 'A2PResponsePeriod';
  A2PAdminShortcodesOverview: 'A2PResponsePeriod';
  A2PCustomerOverview: 'A2PResponsePeriod';
  A2PCustomerShortcode: 'A2PCustomerShortcodeBase';
  A2PCustomerShortcodeListItem: 'A2PCustomerShortcodeBase';
  A2PCustomerUsage: 'A2PResponsePeriod';
  A2PModifyShortcodeResponse: 'GenericMutationResponse';
  A2PStatusResponse: 'GenericMutationResponse';
  AddAccountAccessResponse: 'GenericMutationResponse';
  AddAccountToCartResponse: 'GenericMutationResponse';
  AddBundleOperationResponse: 'GenericMutationResponse';
  AddConnectionPromiseLineResponse: 'GenericMutationResponse';
  AddItemsToBundleResponse: 'GenericMutationResponse';
  AddLineAccessResponse: 'GenericMutationResponse';
  AddWalletPaymentMethodResponse: 'GenericMutationResponse';
  AddonOfferDetail: 'BaseOfferDetailInterface';
  AirpointsDeleteResponse: 'GenericMutationResponse';
  AirpointsUpdateResponse: 'GenericMutationResponse';
  AutoTopupResponse: 'GenericMutationResponse';
  BaseOfferDetail: 'BaseOfferDetailInterface';
  BroadbandDiagnosticsResultsResponse: 'GenericMutationResponse';
  CreditCardBillPaymentResponse: 'GenericMutationResponse';
  CreditCardTopupResponse: 'GenericMutationResponse';
  DeleteAutoPayBillResponse: 'GenericMutationResponse';
  DeleteAutoTopupResponse: 'GenericMutationResponse';
  DeleteBundleResponse: 'GenericMutationResponse';
  DeleteConnectionPromiseLineResponse: 'GenericMutationResponse';
  DeleteItemFromBundleResponse: 'GenericMutationResponse';
  DeleteUserPreferenceChannelResponse: 'GenericMutationResponse';
  InitiateCheckoutResponse: 'GenericMutationResponse';
  NewCardBillPaymentResponse: 'GenericMutationResponse';
  NotificationPreference: 'Node';
  PoliPayBillResponse: 'GenericMutationResponse';
  PreferenceChannel: 'Node';
  ProductVariantSpecification: 'ProductSpecificationValue';
  RevokeAccessResponse: 'GenericMutationResponse';
  SaveCheckoutStepResponse: 'GenericMutationResponse';
  SubmitOrderResponse: 'GenericMutationResponse';
  SubmitOrderSSResponse: 'GenericMutationResponse';
  SubmitRecommendationResponse: 'GenericMutationResponse';
  UpdateConnectionPromiseLineResponse: 'GenericMutationResponse';
  UpdateNameResponse: 'GenericMutationResponse';
  UpdatePreferenceChannelResponse: 'GenericMutationResponse';
  UpdateSmartCapResponse: 'GenericMutationResponse';
  VoucherTopupResponse: 'GenericMutationResponse';
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType =
  | 'A2PCustomerShortcodeBase'
  | 'A2PResponsePeriod'
  | 'BaseOfferDetailInterface'
  | 'GenericMutationResponse'
  | 'Node'
  | 'ProductSpecificationValue';

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: ContextType;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes:
    | NexusGenTypes['allInputTypes']
    | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
