/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/utility/resource/{resource}': {
    get: operations['queryResourceInfo'];
  };
  '/v1/utility/resource/{resourceId}/mobiletype': {
    get: operations['queryMobileType'];
  };
}

export interface definitions {
  ResourceInfoResponse: definitions['Response'] &
    definitions['ResourceInfoObject'];
  ResourceInfoObject: {
    /** true here Indicates the given resource has been identified as an account or line. */
    isNumberIdentified: boolean;
    lineInfo?: definitions['LineInfoRecord'];
    accountInfo?: definitions['AccountInfoRecord'];
  };
  AccountInfoRecord: {
    /** this indicates if the resource's correponding customer has a password. */
    isPasswordProtected?: boolean;
    /** This indicates whether a MySpark user can have account access or not on this resource. */
    isAccountAccessAllowed: boolean;
    /** This indicates if the corresponding customer has a business name. */
    hasBusinessName?: boolean;
  };
  LineInfoRecord: definitions['AccountInfoRecord'] & {
    /** This indicates the type of line. */
    lineType: 'MOBILE_PREPAID' | 'MOBILE_POSTPAID' | 'BROADBAND' | 'UNKNOWN';
    /** this indicates whether a MySpark user can have line access for this resource or not. */
    isLineAccessAllowed: boolean;
  };
  MobileTypeResponse: definitions['Response'] & {
    /** Will always be returned if the response is successful. It can be PREPAID, POSTPAID or null */
    mobileType?: 'PREPAID' | 'POSTPAID';
  };
  Response: {
    /** List of Messages */
    messages: definitions['Message'][];
  };
  Message: {
    message: string;
    code: number;
  };
}

export interface operations {
  queryResourceInfo: {
    parameters: {
      path: {
        /** The resource whose basic info is requested. */
        resource: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ResourceInfoResponse'];
      };
      /** The provided token is invalid. */
      401: {
        schema: definitions['Response'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
  queryMobileType: {
    parameters: {
      path: {
        /** An identifier for the resource to be looked up. Logically a mobile number, but can be anything. */
        resourceId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['MobileTypeResponse'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
}
