/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/customer/account/{accountNumber}/deferred-payment/summary': {
    get: operations['getIfpDeferredPayments'];
  };
  '/v1/customer/account/me/list': {
    get: operations['getAllAccounts'];
  };
}

export interface definitions {
  AccountListResponse: definitions['Response'] & {
    accounts: definitions['Account'][];
  };
  Account: {
    /** The Siebel account number */
    accountNumber: string;
    /** The Siebel account instance Id */
    accountId: string;
    /** The Siebel customer number associated with account number */
    customerNumber: string;
    /** Customer segment */
    customerSegment: string;
    /** Balance management value of account */
    balanceManagement: 'POSTPAID' | 'PREPAID';
    /** Account Status */
    status?: string;
    /** Account First name as per Siebel */
    firstName?: string;
    /** Account last name as per Siebel */
    lastName?: string;
    /** Account last name as per Siebel */
    businessName?: string;
    /** Indicate if the account is in collection */
    inCollections: boolean;
    /** Products available under that account */
    products: definitions['ProductData'][];
  };
  ProductData: {
    /** Line Number for given account */
    lineNumber?: string;
    /** Line instance ID as per Siebel */
    assetId?: string;
    /** Offer id of the service connected to the line. Can be used to lookup the catalogue. */
    offerId?: string;
    /** The name of the line product */
    offerName?: string;
    /** Siebel product instance id of the service connected to the line. Can be used to lookup the Siebel. */
    productInstanceId?: string;
    /** The status of the product.  Generally, Inactive products should be ignored. */
    status?: string;
  };
  DeferredPaymentResponse: definitions['Response'] & {
    deferredPayments: definitions['DeferredPayment'][];
  };
  DeferredPayment: {
    /** A unique identifier for this deferred payment plan */
    deferredPaymentId?: string;
    /** The type of this deferred payment plan */
    paymentPlanType: 'IFP';
    /** Details of the all but the first and last installments */
    installmentDetails: definitions['PaymentAmount'];
    /** Details of the first installment to be made; note that this may differ from all the other installments.  (Also, it might not have been paid yet). */
    firstInstallment?: definitions['PaymentAmount'];
    /** Details of the last installment that will be made (again, this may differ from all the others because of rounding). */
    lastInstallment: definitions['PaymentAmount'];
    /** Details of the installments paid so far */
    totalPaid: definitions['PaymentAmount'];
    /** Details of the installments left to pay */
    remainingBalance: definitions['PaymentAmount'];
    /** Details of the term of the payment plan */
    termDetails: definitions['TermDetails'];
    /** Details of the product this payment plan is used to purchase */
    product: definitions['Product'];
  };
  PaymentAmount: {
    /** The amount of the payment */
    amount: number;
    /** True if this a debit; false if it's a credit */
    isDebit: boolean;
    /** True if gst is included in the amount.  False if not. */
    isGstIncluded: boolean;
  };
  TermDetails: {
    /** The number of months that the payments extend over */
    period: number;
    /** The number of months that have been completed.  The current author is unaware if this is paid, or elapsed. */
    periodCompleted: number;
    /** The number of months that reamin.  The current author assumes that periodRemaining + periodCompleted is not necessarily period. */
    periodRemaining: number;
  };
  Product: {
    /** The number to which this payment plan applies */
    chargeAggregationId: string;
    /** A reference to the product to which this payment plan applies */
    productId: string;
    /** The price that this product was purchased at for this payment plan */
    price: number;
    /** Some details about the product to which this payment plan applies */
    productDetails: definitions['ProductDetails'];
  };
  ProductDetails: {
    /** The name of the product */
    name: string;
    /** The offer-id of the product */
    offerId: string;
  };
  Response: {
    /** List of Messages */
    messages: definitions['Message'][];
  };
  Message: {
    message: string;
    code: number;
  };
}

export interface operations {
  getIfpDeferredPayments: {
    parameters: {
      path: {
        /** The account to fetch the deferred payments for. */
        accountNumber: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['DeferredPaymentResponse'];
      };
      /** The account number doesn't look like one. */
      400: {
        schema: definitions['Response'];
      };
      /** The user issuing this request is no longer authenticated */
      401: {
        schema: definitions['Response'];
      };
      /** The user issuing this request does not have access to fetch the deferred payments for the requested account */
      403: {
        schema: definitions['Response'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
  getAllAccounts: {
    parameters: {
      query: {
        /** Specific roles of which the user have access, If not empty this will be used to filter the accounts. */
        role?: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['AccountListResponse'];
      };
      /** The user issuing this request is no longer authenticated */
      401: {
        schema: definitions['Response'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
}
