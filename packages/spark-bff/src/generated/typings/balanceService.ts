/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v1/finance/balance/account/{accountNumber}': {
    get: operations['getAccountBalance'];
  };
  '/v1/finance/balance/prepaid/{lineNumber}': {
    get: operations['getPrepaidBalance'];
  };
}

export interface definitions {
  AccountBalanceDetails: definitions['Response'] & {
    /** Account number */
    accountNumber: string;
    /** First name */
    firstName?: string;
    /** Last name */
    lastName?: string;
    /** Current billing cycle of the account */
    currentBillCycle?: number;
    /** Retrieval date */
    retrievalDate?: string;
    /** Current balance of the account */
    currentBalance?: definitions['CurrentBalance'];
    /** Last bill details */
    lastBill?: definitions['LastBill'];
    /** Next bill details */
    nextBill?: definitions['NextBill'];
    /** Last payment details */
    lastPayment?: definitions['LastPayment'];
    /** Current monthly payment setup(s) associated with the account */
    monthlyPaymentSetup?: definitions['MonthlyPaymentSetup'][];
    /** Contains messages to be shown in summary page */
    summaryMessage?: definitions['InfoMessage'];
    /** Contains messages to be shown in detail page */
    detailMessage?: definitions['InfoMessage'];
  };
  CurrentBalance: {
    /** Current due amount */
    due?: definitions['Amount'];
    /** Current overdue amount */
    overdue?: definitions['Amount'];
  };
  Amount: {
    /** Amount value */
    amount?: number;
    /** Credit/Debit marker */
    crDr?: 'CR' | 'DR';
  };
  LastBill: {
    /** Last bill date */
    billDate?: string;
    /** Billing cycle of the last bill */
    cycle?: number;
    /** Due date of the last bill */
    dueDate?: string;
    /** Closing balance in the last bill */
    closingBalance?: definitions['Amount'];
  };
  NextBill: {
    /** Next bill date */
    billDate?: string;
  };
  LastPayment: {
    /** Last payment type */
    type?: 'CC' | 'DD' | 'UNKNOWN';
    /** Last payment method */
    method?: string;
    /** Last payment date */
    paymentDate?: string;
    /** Last payment amount */
    paymentAmount?: definitions['Amount'];
    /** Flag indicating whether payment was invoiced or not */
    isInvoiced?: boolean;
  };
  MonthlyPaymentSetup: {
    /** Monthly payment setup type */
    type?: 'CC' | 'DD' | 'RCC';
    /** Description of the monthly payment setup type */
    description?: string;
    /** Monthly payment setup status */
    status?: string;
    /** Direct debit/Bank account details */
    accountDetails?: definitions['BankAccountDetails'];
    /** Credit card details */
    creditCard?: definitions['CreditCardDetails'];
    /** Upcoming payment details */
    upcomingPayment?: definitions['UpcomingPayment'];
  };
  BankAccountDetails: {
    /** Bank name */
    bank?: string;
    /** Account holder's name */
    accountName?: string;
    /** Bank account number */
    accountNumber?: string;
    /** Bank account suffix */
    accountNumberSuffix?: string;
    /** Bank number */
    bankNumber?: string;
    /** Branch number */
    branchNumber?: string;
    /** Branch name */
    branchName?: string;
  };
  CreditCardDetails: {
    /** Last 4 digits of the card */
    lastFourDigits?: string;
    /** Credit card token of the card */
    ccId?: string;
    /** Card name */
    cardName?: string;
    /** Card issuer */
    cardIssuer?: string;
    /** Card expiry month */
    expiryMonth?: string;
    /** Card expiry year */
    expiryYear?: string;
  };
  UpcomingPayment: {
    /** Future dated payment date */
    paymentDate?: string;
    /** Payment frequency */
    paymentFrequency?: string;
    /** Payment method id */
    paymentMethodId?: string;
    /** Upcoming payment amount */
    paymentAmount?: definitions['Amount'];
  };
  InfoMessage: {
    /** Primary message */
    primary?: string;
    /** Secondary message */
    secondary?: string;
    /** Tertiary message */
    tertiary?: string;
    /** Message status */
    status?: 'WARNING' | 'IMPORTANT' | 'POSITIVE' | 'NORMAL' | 'UNAVAILABLE';
    /** Primary CTA details */
    primaryCta?: definitions['CtaDetails'];
    /** Secondary CTA details */
    secondaryCta?: definitions['CtaDetails'];
    /** Other CTA details */
    otherCtas?: definitions['CtaDetails'][];
  };
  CtaDetails: {
    /** CTA label */
    label?: string;
    /** CTA code */
    code?:
      | 'PAY_BILL'
      | 'SETUP_MONTHLY_PAYMENT'
      | 'MANAGE_MONTHLY_PAYMENT'
      | 'VIEW_LATEST_BILL'
      | 'VIEW_IFP'
      | 'ADD_CREDIT'
      | 'GET_HELP_WITH_BILL'
      | 'VIEW_TRANSACTION_DETAIL'
      | 'TOPUP'
      | 'MANAGE_AUTO_TOPUP'
      | 'SETUP_AUTO_TOPUP'
      | 'BUY_PACK_OR_EXTRA'
      | 'MANAGE_PACK_OR_EXTRA'
      | 'MESSAGE_US';
  };
  PrepaidBalanceResponse: definitions['Response'] & {
    /** Line number */
    lineNumber: string;
    /** Prepaid balance details */
    balanceDetails: definitions['PrepaidBalanceDetails'];
    /** Contains messages to be shown in summary page */
    summaryMessage?: definitions['InfoMessage'];
    /** Contains messages to be shown in detail page */
    detailMessage?: definitions['InfoMessage'];
  };
  PrepaidBalanceDetails: {
    /** Balance */
    balance: number;
    /** Balance expiry date */
    balanceExpiryDate?: string;
    /** Retrieval date */
    retrievalDate?: string;
    /** Last topup amount */
    lastTopUpAmount?: number;
    /** Last topup date */
    lastTopUpDate?: string;
  };
  Response: {
    /** List of Messages */
    messages: definitions['Message'][];
  };
  Message: {
    message: string;
    code: number;
  };
}

export interface operations {
  getAccountBalance: {
    parameters: {
      path: {
        /** The account number for which balance details are to be retrieved */
        accountNumber: string;
      };
      query: {
        /** If true, only the basic balance details will be included in the response */
        includeBalanceOnly?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['AccountBalanceDetails'];
      };
      /** The provided token is invalid or access is denied */
      401: {
        schema: definitions['Response'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
  getPrepaidBalance: {
    parameters: {
      path: {
        /** The line number for which balance details are to be retrieved */
        lineNumber: string;
      };
      query: {
        /** If true, only the balance details will be returned in the response */
        includeBalanceOnly?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['PrepaidBalanceResponse'];
      };
      /** The provided token is invalid or access is denied */
      401: {
        schema: definitions['Response'];
      };
      /** The server failed to process the request properly. */
      500: {
        schema: definitions['Response'];
      };
    };
  };
}
